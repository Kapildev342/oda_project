// Dart imports:
import 'dart:async';

// Flutter imports:
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

// Package imports:
import 'package:auto_size_text/auto_size_text.dart';
import 'package:dotted_border/dotted_border.dart';
import 'package:dropdown_button2/dropdown_button2.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_svg/svg.dart';
import 'package:oda/local_database/pick_list_box/pick_list.dart';
import 'package:shimmer/shimmer.dart';
import 'package:skeletonizer/skeletonizer.dart';

// Project imports:
import 'package:oda/bloc/navigation/navigation_bloc.dart';
import 'package:oda/bloc/pick_list/pick_list/pick_list_bloc.dart';
import 'package:oda/bloc/pick_list/pick_list_details/pick_list_details_bloc.dart';
import 'package:oda/edited_packages/data_table_library/data_table_2.dart';
import 'package:oda/local_database/trip_box/trip_list.dart';
import 'package:oda/local_database/user_box/user.dart';
import 'package:oda/resources/constants.dart';
import 'package:oda/resources/functions.dart';
import 'package:oda/resources/variables.dart';
import 'package:oda/resources/widgets.dart';

class PickListDetailsScreen extends StatefulWidget {
  static const String id = "pick_list_details_screen";

  const PickListDetailsScreen({super.key});

  @override
  State<PickListDetailsScreen> createState() => _PickListDetailsScreenState();
}

class _PickListDetailsScreenState extends State<PickListDetailsScreen> with TickerProviderStateMixin {
  TextEditingController searchBar = TextEditingController();
  TextEditingController commentsBar = TextEditingController();
  TextEditingController reasonSearchFieldController = TextEditingController();
  TextEditingController completedReasonSearchFieldController = TextEditingController();
  TextEditingController itemSearchFieldController = TextEditingController();
  /*RefreshController yetToPickRefreshController = RefreshController();
  RefreshController pickedRefreshController = RefreshController();
  RefreshController partialRefreshController = RefreshController();
  RefreshController unavailableRefreshController = RefreshController();*/
  TabController? tabController;
  Timer? timer;
  Timer? timeSpentTimer;
  String timerString = "00:00:00";

  final ScrollController _pendingScrollController = ScrollController();
  final ScrollController _pendingEmptyController = ScrollController();
  final ScrollController _sortedScrollController = ScrollController();
  final ScrollController _sortedEmptyController = ScrollController();
  final ScrollController _partialScrollController = ScrollController();
  final ScrollController _partialEmptyController = ScrollController();
  final ScrollController _unavailableScrollController = ScrollController();
  final ScrollController _unavailableEmptyController = ScrollController();
  double pendingTriggerOffset = -140.0;
  double pendingEmptyTriggerOffset = -140.0;
  double sortedTriggerOffset = -140.0;
  double sortedEmptyTriggerOffset = -140.0;
  double partialTriggerOffset = -140.0;
  double partialEmptyTriggerOffset = -140.0;
  double unavailableTriggerOffset = -140.0;
  double unavailableEmptyTriggerOffset = -140.0;
  bool isPendingAlreadyCalled = false;
  bool isPendingEmptyAlreadyCalled = false;
  bool isSortedAlreadyCalled = false;
  bool isSortedEmptyAlreadyCalled = false;
  bool isPartialAlreadyCalled = false;
  bool isPartialEmptyAlreadyCalled = false;
  bool isUnavailableAlreadyCalled = false;
  bool isUnavailableEmptyAlreadyCalled = false;

  @override
  void initState() {
    getIt<Variables>().generalVariables.filters = [];
    context.read<PickListDetailsBloc>().tabIndex = 0;
    context.read<PickListDetailsBloc>().tabName = "Pending";
    tabController = TabController(length: 4, vsync: this, initialIndex: 0)
      ..addListener(() {
        if (tabController!.indexIsChanging) {
          context.read<PickListDetailsBloc>().pageIndex = 1;
          context.read<PickListDetailsBloc>().tabIndex = tabController!.index;
          switch (context.read<PickListDetailsBloc>().tabIndex) {
            case 0:
              context.read<PickListDetailsBloc>().tabName = "Pending";
            case 1:
              context.read<PickListDetailsBloc>().tabName = "Picked";
            case 2:
              context.read<PickListDetailsBloc>().tabName = "Partial";
            case 3:
              context.read<PickListDetailsBloc>().tabName = "Unavailable";
            default:
              context.read<PickListDetailsBloc>().tabName = "Pending";
          }
          context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
          setState(() {});
        }
      });
    _pendingScrollController.addListener(_onScroll);
    _pendingEmptyController.addListener(_onScrollEmpty);
    _sortedScrollController.addListener(_onScroll2);
    _sortedEmptyController.addListener(_onScroll2Empty);
    _partialScrollController.addListener(_onScroll3);
    _partialEmptyController.addListener(_onScroll3Empty);
    _unavailableScrollController.addListener(_onScroll4);
    _unavailableEmptyController.addListener(_onScroll4Empty);
    context.read<PickListDetailsBloc>().add(const PickListDetailsInitialEvent());
    timerFunction();
    super.initState();
  }

  timerFunction() {
    timeSpentTimer = Timer.periodic(const Duration(seconds: 1), (timer) {
      timerString = getIt<Functions>().durationToString(
          timeStamp: context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.sessionStartTimestamp, currentTime: DateTime.now());
      setState(() {});
    });
  }

  void _onScroll() {
    if (_pendingScrollController.offset == 0.0) {
      isPendingAlreadyCalled = false;
    }
    if (_pendingScrollController.offset < pendingTriggerOffset) {
      if (isPendingAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isPendingAlreadyCalled = true;
      }
    }
  }

  void _onScrollEmpty() {
    if (_pendingEmptyController.offset == 0.0) {
      isPendingEmptyAlreadyCalled = false;
    }
    if (_pendingEmptyController.offset < pendingEmptyTriggerOffset) {
      if (isPendingEmptyAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isPendingEmptyAlreadyCalled = true;
      }
    }
  }

  void _onScroll2() {
    if (_sortedScrollController.offset == 0.0) {
      isSortedAlreadyCalled = false;
    }
    if (_sortedScrollController.offset < sortedTriggerOffset) {
      if (isSortedAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isSortedAlreadyCalled = true;
      }
    }
  }

  void _onScroll2Empty() {
    if (_sortedEmptyController.offset == 0.0) {
      isSortedEmptyAlreadyCalled = false;
    }
    if (_sortedEmptyController.offset < sortedEmptyTriggerOffset) {
      if (isSortedEmptyAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isSortedEmptyAlreadyCalled = true;
      }
    }
  }

  void _onScroll3() {
    if (_partialScrollController.offset == 0.0) {
      isPartialAlreadyCalled = false;
    }
    if (_partialScrollController.offset < partialTriggerOffset) {
      if (isPartialAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isPartialAlreadyCalled = true;
      }
    }
  }

  void _onScroll3Empty() {
    if (_partialEmptyController.offset == 0.0) {
      isPartialEmptyAlreadyCalled = false;
    }
    if (_partialEmptyController.offset < partialEmptyTriggerOffset) {
      if (isPartialEmptyAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isPartialEmptyAlreadyCalled = true;
      }
    }
  }

  void _onScroll4() {
    if (_unavailableScrollController.offset == 0.0) {
      isUnavailableAlreadyCalled = false;
    }
    if (_unavailableScrollController.offset < unavailableTriggerOffset) {
      if (isUnavailableAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isUnavailableAlreadyCalled = true;
      }
    }
  }

  void _onScroll4Empty() {
    if (_unavailableEmptyController.offset == 0.0) {
      isUnavailableEmptyAlreadyCalled = false;
    }
    if (_unavailableEmptyController.offset < unavailableEmptyTriggerOffset) {
      if (isUnavailableEmptyAlreadyCalled == false) {
        context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
        isUnavailableEmptyAlreadyCalled = true;
      }
    }
  }

  @override
  void dispose() {
    timeSpentTimer!.cancel();
    _pendingScrollController.removeListener(_onScroll);
    _pendingScrollController.dispose();
    _pendingEmptyController.removeListener(_onScroll);
    _pendingEmptyController.dispose();
    _sortedScrollController.removeListener(_onScroll2);
    _sortedScrollController.dispose();
    _sortedEmptyController.removeListener(_onScroll2);
    _sortedEmptyController.dispose();
    _partialScrollController.removeListener(_onScroll3);
    _partialScrollController.dispose();
    _partialEmptyController.removeListener(_onScroll3);
    _partialEmptyController.dispose();
    _unavailableScrollController.removeListener(_onScroll4);
    _unavailableScrollController.dispose();
    _unavailableEmptyController.removeListener(_onScroll4);
    _unavailableEmptyController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return PopScope(
      canPop: false,
      onPopInvoked: (value) {
        if (Scaffold.of(context).isDrawerOpen || Scaffold.of(context).isEndDrawerOpen) {
          Scaffold.of(context).closeEndDrawer();
          Scaffold.of(context).closeDrawer();
        } else {
          getIt<Variables>().generalVariables.indexName =
              getIt<Variables>().generalVariables.pickListRouteList[getIt<Variables>().generalVariables.pickListRouteList.length - 1];
          context.read<NavigationBloc>().add(const NavigationInitialEvent());
          getIt<Variables>().generalVariables.pickListRouteList.removeAt(getIt<Variables>().generalVariables.pickListRouteList.length - 1);
        }
      },
      child: LayoutBuilder(builder: (BuildContext context, BoxConstraints constraints) {
        if (constraints.maxWidth > 480) {
          return Container(
            color: const Color(0xffEEF4FF),
            child: Column(
              children: [
                BlocBuilder<PickListDetailsBloc, PickListDetailsState>(
                  builder: (BuildContext context, PickListDetailsState state) {
                    if (state is PickListDetailsLoading) {
                      return SizedBox(
                        height: getIt<Functions>().getWidgetHeight(height: 165),
                        child: AppBar(
                          backgroundColor: const Color(0xff1D2736),
                          leading: IconButton(
                            onPressed: () {
                              getIt<Variables>().generalVariables.indexName = getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList[getIt<Variables>().generalVariables.pickListRouteList.length - 1];
                              context.read<NavigationBloc>().add(const NavigationInitialEvent());
                              getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList
                                  .removeAt(getIt<Variables>().generalVariables.pickListRouteList.length - 1);
                            },
                            icon: const Icon(
                              Icons.arrow_back,
                              color: Color(0xffffffff),
                            ),
                          ),
                          title: Shimmer.fromColors(
                            baseColor: Colors.white24,
                            highlightColor: Colors.grey,
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                Column(
                                  mainAxisAlignment: MainAxisAlignment.start,
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      getIt<Variables>().generalVariables.currentLanguage.picklist,
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize: getIt<Functions>().getTextSize(fontSize: 22),
                                          color: const Color(0xffffffff)),
                                    ),
                                    Text(
                                      "${getIt<Variables>().generalVariables.currentLanguage.picklistName} : ",
                                      overflow: TextOverflow.ellipsis,
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                          color: const Color(0xffffffff)),
                                    ),
                                  ],
                                ),
                              ],
                            ),
                          ),
                          titleSpacing: 0,
                          actions: [
                            IconButton(
                              onPressed: () {},
                              icon: CircleAvatar(
                                radius: 30,
                                backgroundColor: const Color(0xFFE0E6EE).withOpacity(0.2),
                                child: Center(
                                  child: SvgPicture.asset(
                                    "assets/pick_list/pick_list_filter.svg",
                                    height: getIt<Functions>().getWidgetHeight(height: 20),
                                    width: getIt<Functions>().getWidgetWidth(width: 20),
                                    fit: BoxFit.fill,
                                  ),
                                ),
                              ),
                            ),
                          ],
                          bottom: PreferredSize(
                            preferredSize: Size(
                                getIt<Functions>().getWidgetWidth(
                                    width: Orientation.portrait == MediaQuery.of(context).orientation
                                        ? getIt<Variables>().generalVariables.width
                                        : getIt<Variables>().generalVariables.height),
                                getIt<Functions>().getWidgetHeight(height: 40)),
                            child: Padding(
                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 10)),
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.start,
                                children: [
                                  Align(
                                    alignment: Alignment.centerLeft,
                                    child: Text(
                                      "",
                                      overflow: TextOverflow.ellipsis,
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                          color: const Color(0xffffffff)),
                                    ),
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 22)),
                                  Shimmer.fromColors(
                                    baseColor: Colors.white24,
                                    highlightColor: Colors.grey,
                                    child: Row(
                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                      crossAxisAlignment: CrossAxisAlignment.center,
                                      children: [
                                        SizedBox(
                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                          width: getIt<Functions>().getWidgetWidth(width: 427),
                                          child: IntrinsicHeight(
                                            child: Row(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.center,
                                              children: [
                                                SvgPicture.asset(
                                                  "assets/pick_list/status_image.svg",
                                                  height: getIt<Functions>().getWidgetHeight(height: 30),
                                                  width: getIt<Functions>().getWidgetWidth(width: 30),
                                                  fit: BoxFit.fill,
                                                ),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.status.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    Text(
                                                      "loading...",
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xffF8B11D)),
                                                    ),
                                                  ],
                                                ),
                                                const VerticalDivider(
                                                  width: 0,
                                                  thickness: 1,
                                                  color: Color(0xffE0E7EC),
                                                ),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.dateAndTime.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    Text(
                                                      "loading...",
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff30D158)),
                                                    ),
                                                  ],
                                                ),
                                                const VerticalDivider(
                                                  width: 0,
                                                  thickness: 1,
                                                  color: Color(0xffE0E7EC),
                                                ),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.totalItems.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    Text(
                                                      "loading...",
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff30D158)),
                                                    ),
                                                  ],
                                                ),
                                                const VerticalDivider(
                                                  width: 0,
                                                  thickness: 1,
                                                  color: Color(0xffE0E7EC),
                                                ),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.handled.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    Text("loading...",
                                                        style: TextStyle(
                                                            color: const Color(0xffffffff),
                                                            fontWeight: FontWeight.w500,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            fontFamily: "Figtree"))
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 24)),
                                        Expanded(
                                          child: Container(
                                            height: getIt<Functions>().getWidgetHeight(height: 40),
                                            width: getIt<Functions>().getWidgetWidth(width: 277),
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 4),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 2)),
                                            decoration: BoxDecoration(
                                              color: const Color(0xffFFFFFF),
                                              borderRadius: BorderRadius.circular(4),
                                            ),
                                            child: Row(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.center,
                                              children: [
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Skeletonizer(
                                                      enabled: true,
                                                      child: Text(
                                                        getIt<Variables>().generalVariables.currentLanguage.timeSpent,
                                                        style: TextStyle(
                                                            fontWeight: FontWeight.w500,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            color: const Color(0xff1D2736)),
                                                      ),
                                                    ),
                                                    Skeletonizer(
                                                      enabled: true,
                                                      child: Text(
                                                        "37:28",
                                                        style: TextStyle(
                                                            fontWeight: FontWeight.w600,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            color: const Color(0xff007aff)),
                                                      ),
                                                    ),
                                                  ],
                                                ),
                                                Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 31),
                                                  width: getIt<Functions>().getWidgetWidth(width: 105),
                                                  decoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                                                  child: Skeletonizer(
                                                    enabled: true,
                                                    child: Skeleton.unite(
                                                      child: Row(
                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                        children: [
                                                          Expanded(
                                                              child: Container(
                                                            decoration: const BoxDecoration(
                                                              borderRadius:
                                                                  BorderRadius.only(topLeft: Radius.circular(4), bottomLeft: Radius.circular(4)),
                                                              color: Color(0xff007838),
                                                            ),
                                                            child: Center(
                                                              child: Text(
                                                                "12",
                                                                style: TextStyle(
                                                                    color: const Color(0xffffffff),
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                              ),
                                                            ),
                                                          )),
                                                          Expanded(
                                                              child: Container(
                                                            color: const Color(0xffFF9500),
                                                            child: Center(
                                                              child: Text(
                                                                "12",
                                                                style: TextStyle(
                                                                    color: const Color(0xffffffff),
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                              ),
                                                            ),
                                                          )),
                                                          Expanded(
                                                              child: Container(
                                                            decoration: const BoxDecoration(
                                                              borderRadius:
                                                                  BorderRadius.only(topRight: Radius.circular(4), bottomRight: Radius.circular(4)),
                                                              color: Color(0xffF92C38),
                                                            ),
                                                            child: Center(
                                                              child: Text(
                                                                "12",
                                                                style: TextStyle(
                                                                    color: const Color(0xffffffff),
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                              ),
                                                            ),
                                                          )),
                                                        ],
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
                                ],
                              ),
                            ),
                          ),
                        ),
                      );
                    }
                    else {
                      return SizedBox(
                        height: getIt<Functions>().getWidgetHeight(height: 165),
                        child: AppBar(
                          backgroundColor: const Color(0xff1D2736),
                          leading: IconButton(
                            onPressed: () {
                              getIt<Variables>().generalVariables.indexName = getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList[getIt<Variables>().generalVariables.pickListRouteList.length - 1];
                              context.read<NavigationBloc>().add(const NavigationInitialEvent());
                              getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList
                                  .removeAt(getIt<Variables>().generalVariables.pickListRouteList.length - 1);
                            },
                            icon: const Icon(
                              Icons.arrow_back,
                              color: Color(0xffffffff),
                            ),
                          ),
                          title: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Expanded(
                                child: Column(
                                  mainAxisAlignment: MainAxisAlignment.start,
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      "${getIt<Variables>().generalVariables.currentLanguage.picklist} #:${context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistNum}",
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize: getIt<Functions>().getTextSize(fontSize: 22),
                                          color: const Color(0xffffffff)),
                                    ),
                                    Text(
                                      "${getIt<Variables>().generalVariables.currentLanguage.picklistName} : ${context.read<PickListDetailsBloc>().pickListDetailsResponse.route}",
                                      overflow: TextOverflow.ellipsis,
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                          color: const Color(0xffffffff)),
                                    ),
                                  ],
                                ),
                              ),
                              textBars(controller: searchBar)
                            ],
                          ),
                          titleSpacing: 0,
                          actions: [
                            IconButton(
                              onPressed: () {
                                Scaffold.of(context).openEndDrawer();
                              },
                              icon: CircleAvatar(
                                radius: 30,
                                backgroundColor: const Color(0xFFE0E6EE).withOpacity(0.2),
                                child: Center(
                                  child: SvgPicture.asset(
                                    "assets/pick_list/pick_list_filter.svg",
                                    height: getIt<Functions>().getWidgetHeight(height: 20),
                                    width: getIt<Functions>().getWidgetWidth(width: 20),
                                    fit: BoxFit.fill,
                                  ),
                                ),
                              ),
                            ),
                          ],
                          bottom: PreferredSize(
                            preferredSize: Size(
                                getIt<Functions>().getWidgetWidth(
                                    width: Orientation.portrait == MediaQuery.of(context).orientation
                                        ? getIt<Variables>().generalVariables.width
                                        : getIt<Variables>().generalVariables.height),
                                getIt<Functions>().getWidgetHeight(height: 40)),
                            child: Padding(
                              padding: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 15), right: getIt<Functions>().getWidgetWidth(width: 10)),
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.start,
                                children: [
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 22)),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Expanded(
                                        child: SizedBox(
                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                          child: IntrinsicHeight(
                                            child: Row(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.center,
                                              children: [
                                                InkWell(
                                                  onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                                      ? () {}
                                                      : () {
                                                          getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                          Scaffold.of(context).openEndDrawer();
                                                        },
                                                  child: SvgPicture.asset(
                                                    "assets/pick_list/status_image.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 30),
                                                    width: getIt<Functions>().getWidgetWidth(width: 30),
                                                    fit: BoxFit.fill,
                                                  ),
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                InkWell(
                                                  onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                                      ? () {}
                                                      : () {
                                                          getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                          Scaffold.of(context).openEndDrawer();
                                                        },
                                                  child: Column(
                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                    children: [
                                                      Text(
                                                        getIt<Variables>().generalVariables.currentLanguage.status.toUpperCase(),
                                                        style: TextStyle(
                                                            fontWeight: FontWeight.w400,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            color: const Color(0xffffffff)),
                                                      ),
                                                      Text(
                                                        context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistStatus,
                                                        style: TextStyle(
                                                            fontWeight: FontWeight.w700,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            color: const Color(0xffF8B11D)),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                const VerticalDivider(
                                                  width: 0,
                                                  thickness: 1,
                                                  color: Color(0xffE0E7EC),
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.dateAndTime.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    Text(
                                                      context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistTime,
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff30D158)),
                                                    ),
                                                  ],
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                const VerticalDivider(
                                                  width: 0,
                                                  thickness: 1,
                                                  color: Color(0xffE0E7EC),
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.totalItems.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    Text(
                                                      "${context.read<PickListDetailsBloc>().pickListDetailsResponse.pickedItems}/${context.read<PickListDetailsBloc>().pickListDetailsResponse.totalItems}",
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff30D158)),
                                                    ),
                                                  ],
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                const VerticalDivider(
                                                  width: 0,
                                                  thickness: 1,
                                                  color: Color(0xffE0E7EC),
                                                ),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 3)),
                                                Column(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.handled.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                    context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy.isNotEmpty
                                                        ? Column(
                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                            children: [
                                                                InkWell(
                                                                  onTap: () {
                                                                    getIt<Variables>().generalVariables.popUpWidget = usersDetailsContent(
                                                                        handled:
                                                                            context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  },
                                                                  child: SizedBox(
                                                                    width: getIt<Functions>().getWidgetWidth(width: 55),
                                                                    child: Stack(
                                                                        children: List<Widget>.generate(
                                                                            context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .pickListDetailsResponse
                                                                                        .handledBy
                                                                                        .length >=
                                                                                    3
                                                                                ? 3
                                                                                : context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .pickListDetailsResponse
                                                                                    .handledBy
                                                                                    .length,
                                                                            (i) => i == 0
                                                                                ? CircleAvatar(
                                                                                    radius: 10,
                                                                                    backgroundImage:
                                                                                        getIt<Variables>().generalVariables.isNetworkOffline
                                                                                            ? const AssetImage("assets/general/profile_default.png")
                                                                                            : NetworkImage(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .pickListDetailsResponse
                                                                                                    .handledBy[i]
                                                                                                    .image,
                                                                                              ),
                                                                                  )
                                                                                : Positioned(
                                                                                    left: i * 15,
                                                                                    child: Stack(
                                                                                      children: [
                                                                                        CircleAvatar(
                                                                                          radius: 10,
                                                                                          backgroundImage: getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .isNetworkOffline
                                                                                              ? const AssetImage("assets/general/profile_default.png")
                                                                                              : NetworkImage(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .pickListDetailsResponse
                                                                                                      .handledBy[i]
                                                                                                      .image,
                                                                                                ),
                                                                                        ),
                                                                                        context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .pickListDetailsResponse
                                                                                                    .handledBy
                                                                                                    .length >
                                                                                                3
                                                                                            ? CircleAvatar(
                                                                                                radius: 10,
                                                                                                backgroundColor: Colors.black26.withOpacity(0.6),
                                                                                                child: Center(
                                                                                                  child: Text(
                                                                                                      "+${context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy.length - 2}",
                                                                                                      style: const TextStyle(
                                                                                                        color: Colors.white,
                                                                                                        fontSize: 12,
                                                                                                        fontWeight: FontWeight.bold,
                                                                                                      )),
                                                                                                ),
                                                                                              )
                                                                                            : const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                                  ))),
                                                                  ),
                                                                )
                                                              ])
                                                        : Row(
                                                            children: [
                                                              Text("-",
                                                                  style: TextStyle(
                                                                      color: const Color(0xffffffff),
                                                                      fontWeight: FontWeight.w500,
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                      fontFamily: "Figtree")),
                                                            ],
                                                          )
                                                  ],
                                                ),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                      Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 40),
                                        width: getIt<Functions>().getWidgetWidth(width: 290),
                                        padding: EdgeInsets.symmetric(
                                            horizontal: getIt<Functions>().getWidgetWidth(
                                                width: context.read<PickListDetailsBloc>().pickListDetailsResponse.isReadyToMoveComplete ? 1 : 4),
                                            vertical: getIt<Functions>().getWidgetHeight(height: 1)),
                                        decoration: BoxDecoration(
                                          color: const Color(0xffFFFFFF),
                                          borderRadius: BorderRadius.circular(4),
                                        ),
                                        child: context.read<PickListDetailsBloc>().pickListDetailsResponse.isReadyToMoveComplete
                                            ? InkWell(
                                                onTap: () {
                                                  completedReasonSearchFieldController.clear();
                                                  context.read<PickListDetailsBloc>().selectedCompletedReasonName = null;
                                                  context.read<PickListDetailsBloc>().selectedCompletedReason = "";
                                                  commentsBar.clear();
                                                  getIt<Variables>().generalVariables.popUpWidget = completedContent();
                                                  getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                },
                                                child: Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 33),
                                                  padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 4)),
                                                  decoration: BoxDecoration(
                                                    color: Colors.blue,
                                                    borderRadius: BorderRadius.circular(4),
                                                  ),
                                                  child: Center(
                                                    child: AutoSizeText(
                                                      getIt<Variables>().generalVariables.currentLanguage.moveComplete,
                                                      textAlign: TextAlign.center,
                                                      style: const TextStyle(color: Color(0xffffffff), fontWeight: FontWeight.w600, height: 0),
                                                    ),
                                                  ),
                                                ),
                                              )
                                            : Row(
                                                children: [
                                                  Expanded(
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        FittedBox(
                                                          child: Text(
                                                            getIt<Variables>().generalVariables.currentLanguage.timeSpent,
                                                            style: TextStyle(
                                                                fontWeight: FontWeight.w500,
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff1D2736)),
                                                          ),
                                                        ),
                                                        Text(
                                                          timerString,
                                                          style: TextStyle(
                                                              fontWeight: FontWeight.w600,
                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                              color: const Color(0xff007aff)),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                                  Container(
                                                    height: getIt<Functions>().getWidgetHeight(height: 33),
                                                    width: getIt<Functions>().getWidgetWidth(width: 105),
                                                    decoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                                                    child: Row(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                      children: [
                                                        Expanded(
                                                            child: Container(
                                                          decoration: const BoxDecoration(
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(4), bottomLeft: Radius.circular(4)),
                                                            color: Color(0xff007838),
                                                          ),
                                                          child: Center(
                                                            child: Text(
                                                              context
                                                                  .read<PickListDetailsBloc>()
                                                                  .pickListDetailsResponse
                                                                  .sessionInfo
                                                                  .picked
                                                                  .toString(),
                                                              style: TextStyle(
                                                                  color: const Color(0xffffffff),
                                                                  fontWeight: FontWeight.w600,
                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                            ),
                                                          ),
                                                        )),
                                                        Expanded(
                                                            child: Container(
                                                          color: const Color(0xffFF9500),
                                                          child: Center(
                                                            child: Text(
                                                              context
                                                                  .read<PickListDetailsBloc>()
                                                                  .pickListDetailsResponse
                                                                  .sessionInfo
                                                                  .partial
                                                                  .toString(),
                                                              style: TextStyle(
                                                                  color: const Color(0xffffffff),
                                                                  fontWeight: FontWeight.w600,
                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                            ),
                                                          ),
                                                        )),
                                                        Expanded(
                                                            child: Container(
                                                          decoration: const BoxDecoration(
                                                            borderRadius:
                                                                BorderRadius.only(topRight: Radius.circular(4), bottomRight: Radius.circular(4)),
                                                            color: Color(0xffF92C38),
                                                          ),
                                                          child: Center(
                                                            child: Text(
                                                              context
                                                                  .read<PickListDetailsBloc>()
                                                                  .pickListDetailsResponse
                                                                  .sessionInfo
                                                                  .unavailable
                                                                  .toString(),
                                                              style: TextStyle(
                                                                  color: const Color(0xffffffff),
                                                                  fontWeight: FontWeight.w600,
                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                            ),
                                                          ),
                                                        )),
                                                      ],
                                                    ),
                                                  ),
                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                                  context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.isOpened
                                                      ? Expanded(
                                                          child: InkWell(
                                                            onTap: () {
                                                              getIt<Variables>().generalVariables.popUpWidget =
                                                                  closeSessionContent(contextNew: context);
                                                              getIt<Functions>()
                                                                  .showAnimatedDialog(context: context, isFromTop: true, isCloseDisabled: false);
                                                            },
                                                            child: Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 33),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 4)),
                                                              decoration: BoxDecoration(
                                                                color: Colors.blue,
                                                                borderRadius: BorderRadius.circular(4),
                                                              ),
                                                              child: Center(
                                                                child: AutoSizeText(
                                                                  getIt<Variables>().generalVariables.currentLanguage.closeSession,
                                                                  textAlign: TextAlign.center,
                                                                  style: const TextStyle(
                                                                      color: Color(0xffffffff), fontWeight: FontWeight.w600, height: 0),
                                                                ),
                                                              ),
                                                            ),
                                                          ),
                                                        )
                                                      : Expanded(
                                                          child: SizedBox(
                                                            height: getIt<Functions>().getWidgetHeight(height: 31),
                                                            child: AutoSizeText(
                                                              getIt<Variables>().generalVariables.currentLanguage.sessionNotStarted,
                                                              textAlign: TextAlign.center,
                                                              style: const TextStyle(fontWeight: FontWeight.w500, color: Color(0xff1D2736)),
                                                            ),
                                                          ),
                                                        ),
                                                ],
                                              ),
                                      ),
                                    ],
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
                                ],
                              ),
                            ),
                          ),
                        ),
                      );
                    }
                  },
                ),
                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                BlocBuilder<PickListDetailsBloc, PickListDetailsState>(
                  builder: (BuildContext context, PickListDetailsState state) {
                    if (state is PickListDetailsLoading) {
                      return Skeletonizer(
                        enabled: true,
                        ignoreContainers: true,
                        child: Container(
                          height: getIt<Functions>().getWidgetHeight(height: 50),
                          margin: EdgeInsets.only(
                              left: getIt<Functions>().getWidgetWidth(width: 16),
                              right: getIt<Functions>().getWidgetWidth(width: 16),
                              bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                          decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                          child: TabBar(
                            indicatorWeight: 0,
                            controller: tabController,
                            indicator: BoxDecoration(borderRadius: BorderRadius.circular(8.0), color: const Color(0xff007AFF)),
                            labelStyle: TextStyle(
                                color: Colors.white,
                                fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                fontWeight: FontWeight.w600,
                                overflow: TextOverflow.ellipsis),
                            unselectedLabelStyle: TextStyle(
                                color: const Color(0xff6F6F6F),
                                fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                fontWeight: FontWeight.w600,
                                overflow: TextOverflow.ellipsis),
                            splashBorderRadius: BorderRadius.circular(8),
                            padding: const EdgeInsets.all(3),
                            indicatorSize: TabBarIndicatorSize.tab,
                            dividerColor: Colors.transparent,
                            dividerHeight: 0.0,
                            tabs: [
                              Tab(
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Flexible(child: Text(getIt<Variables>().generalVariables.currentLanguage.yetToPick.toUpperCase())),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    Container(
                                      padding: EdgeInsets.symmetric(
                                          horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                          vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                      decoration: BoxDecoration(
                                          color: context.read<PickListDetailsBloc>().tabIndex == 0 ? Colors.white : const Color(0xff007AFF),
                                          borderRadius: BorderRadius.circular(20)),
                                      child: Text(
                                        "1000",
                                        style: TextStyle(
                                            color: context.read<PickListDetailsBloc>().tabIndex == 0 ? const Color(0xff282F3A) : Colors.white,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                            fontWeight: FontWeight.w700),
                                      ),
                                    )
                                  ],
                                ),
                              ),
                              Tab(
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    Container(
                                      padding: EdgeInsets.symmetric(
                                          horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                          vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                      decoration: BoxDecoration(
                                          color: context.read<PickListDetailsBloc>().tabIndex == 1 ? Colors.white : const Color(0xff007AFF),
                                          borderRadius: BorderRadius.circular(20)),
                                      child: Text(
                                        "1",
                                        style: TextStyle(
                                            color: context.read<PickListDetailsBloc>().tabIndex == 1 ? const Color(0xff282F3A) : Colors.white,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                            fontWeight: FontWeight.w700),
                                      ),
                                    )
                                  ],
                                ),
                              ),
                              Tab(
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    Container(
                                      padding: EdgeInsets.symmetric(
                                          horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                          vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                      decoration: BoxDecoration(
                                          color: context.read<PickListDetailsBloc>().tabIndex == 2 ? Colors.white : const Color(0xff007AFF),
                                          borderRadius: BorderRadius.circular(20)),
                                      child: Text(
                                        "100",
                                        style: TextStyle(
                                            color: context.read<PickListDetailsBloc>().tabIndex == 2 ? const Color(0xff282F3A) : Colors.white,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                            fontWeight: FontWeight.w700),
                                      ),
                                    )
                                  ],
                                ),
                              ),
                              Tab(
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    Container(
                                      padding: EdgeInsets.symmetric(
                                          horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                          vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                      decoration: BoxDecoration(
                                          color: context.read<PickListDetailsBloc>().tabIndex == 3 ? Colors.white : const Color(0xff007AFF),
                                          borderRadius: BorderRadius.circular(20)),
                                      child: Text(
                                        "10",
                                        style: TextStyle(
                                            color: context.read<PickListDetailsBloc>().tabIndex == 3 ? const Color(0xff282F3A) : Colors.white,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                            fontWeight: FontWeight.w700),
                                      ),
                                    )
                                  ],
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    }
                    else {
                      return Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        margin: EdgeInsets.only(
                            left: getIt<Functions>().getWidgetWidth(width: 16),
                            right: getIt<Functions>().getWidgetWidth(width: 16),
                            bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                        child: TabBar(
                          indicatorWeight: 0,
                          controller: tabController,
                          indicator: BoxDecoration(borderRadius: BorderRadius.circular(8.0), color: const Color(0xff007AFF)),
                          labelStyle: TextStyle(
                              color: Colors.white,
                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                              fontWeight: FontWeight.w600,
                              overflow: TextOverflow.ellipsis),
                          unselectedLabelStyle: TextStyle(
                              color: const Color(0xff6F6F6F),
                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                              fontWeight: FontWeight.w600,
                              overflow: TextOverflow.ellipsis),
                          splashBorderRadius: BorderRadius.circular(8),
                          padding: const EdgeInsets.all(3),
                          indicatorSize: TabBarIndicatorSize.tab,
                          dividerColor: Colors.transparent,
                          dividerHeight: 0.0,
                          tabs: [
                            Tab(
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Flexible(child: Text(getIt<Variables>().generalVariables.currentLanguage.yetToPick.toUpperCase())),
                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                  context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick == 0
                                      ? const SizedBox()
                                      : Container(
                                          padding: EdgeInsets.symmetric(
                                              horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                              vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                          decoration: BoxDecoration(
                                              color: context.read<PickListDetailsBloc>().tabIndex == 0 ? Colors.white : const Color(0xff007AFF),
                                              borderRadius: BorderRadius.circular(20)),
                                          child: Text(
                                            context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick < 10
                                                ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick}"
                                                : context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick.toString(),
                                            style: TextStyle(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 0 ? const Color(0xff282F3A) : Colors.white,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                fontWeight: FontWeight.w700),
                                          ),
                                        )
                                ],
                              ),
                            ),
                            Tab(
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Flexible(child: Text(getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase())),
                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                  context.read<PickListDetailsBloc>().pickListDetailsResponse.picked == 0
                                      ? const SizedBox()
                                      : Container(
                                          padding: EdgeInsets.symmetric(
                                              horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                              vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                          decoration: BoxDecoration(
                                              color: context.read<PickListDetailsBloc>().tabIndex == 1 ? Colors.white : const Color(0xff007AFF),
                                              borderRadius: BorderRadius.circular(20)),
                                          child: Text(
                                            context.read<PickListDetailsBloc>().pickListDetailsResponse.picked < 10
                                                ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.picked}"
                                                : context.read<PickListDetailsBloc>().pickListDetailsResponse.picked.toString(),
                                            style: TextStyle(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 1 ? const Color(0xff282F3A) : Colors.white,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                fontWeight: FontWeight.w700),
                                          ),
                                        )
                                ],
                              ),
                            ),
                            Tab(
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Flexible(child: Center(child: Text(getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()))),
                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                  context.read<PickListDetailsBloc>().pickListDetailsResponse.partial == 0
                                      ? const SizedBox()
                                      : Container(
                                          padding: EdgeInsets.symmetric(
                                              horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                              vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                          decoration: BoxDecoration(
                                              color: context.read<PickListDetailsBloc>().tabIndex == 2 ? Colors.white : const Color(0xff007AFF),
                                              borderRadius: BorderRadius.circular(20)),
                                          child: Text(
                                            context.read<PickListDetailsBloc>().pickListDetailsResponse.partial < 10
                                                ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.partial}"
                                                : context.read<PickListDetailsBloc>().pickListDetailsResponse.partial.toString(),
                                            style: TextStyle(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 2 ? const Color(0xff282F3A) : Colors.white,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                fontWeight: FontWeight.w700),
                                          ),
                                        )
                                ],
                              ),
                            ),
                            Tab(
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Flexible(child: Text(getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase())),
                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                  context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable == 0
                                      ? const SizedBox()
                                      : Container(
                                          padding: EdgeInsets.symmetric(
                                              horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                              vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                          decoration: BoxDecoration(
                                              color: context.read<PickListDetailsBloc>().tabIndex == 3 ? Colors.white : const Color(0xff007AFF),
                                              borderRadius: BorderRadius.circular(20)),
                                          child: Text(
                                            context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable < 10
                                                ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable}"
                                                : context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable.toString(),
                                            style: TextStyle(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 3 ? const Color(0xff282F3A) : Colors.white,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                fontWeight: FontWeight.w700),
                                          ),
                                        )
                                ],
                              ),
                            ),
                          ],
                        ),
                      );
                    }
                  },
                ),
                Expanded(
                  child: BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
                    listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
                      return previous != current;
                    },
                    buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
                      return previous != current;
                    },
                    listener: (BuildContext context, PickListDetailsState state) {},
                    builder: (BuildContext context, PickListDetailsState state) {
                      if (state is PickListDetailsLoaded) {
                        switch (context.read<PickListDetailsBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const ScrollPhysics(),
                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(
                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                          child: IntrinsicHeight(
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () async {
                                                                  if (context.mounted) {
                                                                    context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                    context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                    getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                        selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                            [idx],
                                                                        index: index,
                                                                        idx: idx,
                                                                        fromWhere: "yet_to_pick",
                                                                        isPicking: false);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  }
                                                                },
                                                                child: Container(
                                                                  padding: EdgeInsets.only(
                                                                      left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                      right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                      top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                  color: Colors.white,
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          Container(
                                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                              decoration: BoxDecoration(
                                                                                shape: BoxShape.circle,
                                                                                color: Color(int.parse(context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .typeColor)),
                                                                              ),
                                                                              child: Center(
                                                                                child: Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemType,
                                                                                  style: TextStyle(
                                                                                      color: const Color(0xffffffff),
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                      fontWeight: FontWeight.w700),
                                                                                ),
                                                                              )),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                          ),
                                                                          Expanded(
                                                                            child: SingleChildScrollView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: Text(
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .itemName,
                                                                                maxLines: 1,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                    color: const Color(0xff282F3A),
                                                                                    overflow: TextOverflow.ellipsis),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 14),
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                        child: Row(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                          children: [
                                                                            Expanded(
                                                                              child: SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            SizedBox(
                                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                            ),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.end,
                                                                              children: [
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .quantity,
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: const Color(0xff007AFF)),
                                                                                ),
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .qtyToPick
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                      context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                          ? const SizedBox()
                                                                          : const Divider(color: Color(0xffE0E7EC))
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            })
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /* return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  yetToPickRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: yetToPickRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                            ),
                                          ],
                                        ),
                                      )
                                    : ListView.builder(
                                        padding: EdgeInsets.zero,
                                        physics: const ScrollPhysics(),
                                        itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                        shrinkWrap: true,
                                        itemBuilder: (BuildContext context, int index) {
                                          return Container(
                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                            margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 40),
                                                  decoration: const BoxDecoration(
                                                    color: Color(0xffE3E7EA),
                                                    borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                  ),
                                                  padding: EdgeInsets.symmetric(
                                                      horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                      vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                  child: IntrinsicHeight(
                                                    child: Row(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                      children: [
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                        const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                        const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                                ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    shrinkWrap: true,
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                    itemBuilder: (BuildContext context, int idx) {
                                                      return InkWell(
                                                        onTap: () async {
                                                          if (context.mounted) {
                                                            context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                            context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                            getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                                index: index,
                                                                idx: idx,
                                                                fromWhere: "yet_to_pick",
                                                                isPicking: false);
                                                            getIt<Functions>()
                                                                .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                          }
                                                        },
                                                        child: Container(
                                                          padding: EdgeInsets.only(
                                                              left: getIt<Functions>().getWidgetWidth(width: 20),
                                                              right: getIt<Functions>().getWidgetWidth(width: 20),
                                                              top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                          color: Colors.white,
                                                          child: Column(
                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                            children: [
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                      decoration: BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Color(int.parse(context
                                                                            .read<PickListDetailsBloc>()
                                                                            .groupedPickedData[index][idx]
                                                                            .typeColor)),
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          context.read<PickListDetailsBloc>().groupedPickedData[index][idx].itemType,
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                  SizedBox(
                                                                    width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                  ),
                                                                  Expanded(
                                                                    child: SingleChildScrollView(
                                                                      scrollDirection: Axis.horizontal,
                                                                      child: Text(
                                                                        context.read<PickListDetailsBloc>().groupedPickedData[index][idx].itemName,
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 14),
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                child: Row(
                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                  children: [
                                                                    Expanded(
                                                                      child: SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                        child: ListView(
                                                                          scrollDirection: Axis.horizontal,
                                                                          physics: const BouncingScrollPhysics(),
                                                                          shrinkWrap: true,
                                                                          padding: EdgeInsets.zero,
                                                                          children: [
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .itemCode
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemCode,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  "UOM",
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .uom,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .packageTerms
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .packageTerms,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                      width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                    ),
                                                                    Column(
                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                      children: [
                                                                        Text(
                                                                          context.read<PickListDetailsBloc>().groupedPickedData[index][idx].quantity,
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                              fontWeight: FontWeight.w600,
                                                                              color: const Color(0xff007AFF)),
                                                                        ),
                                                                        Text(
                                                                          getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w500,
                                                                              color: const Color(0xff282F3A)),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                              context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                  ? const SizedBox()
                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    })
                                              ],
                                            ),
                                          );
                                        }),
                              ),
                            );*/
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty &&
                                      context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedScrollController,
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedKeepersNameList[index]
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.grey,
                                                                                    fontWeight: FontWeight.w600)),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.end,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          SvgPicture.asset(
                                                                            "assets/pick_list/progress_live.svg",
                                                                            height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                            width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                            fit: BoxFit.fill,
                                                                            colorFilter: ColorFilter.mode(
                                                                                getIt<Variables>()
                                                                                            .generalVariables
                                                                                            .userData
                                                                                            .userProfile
                                                                                            .userName
                                                                                            .toLowerCase() ==
                                                                                        context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedKeepersNameList[index]
                                                                                            .toLowerCase()
                                                                                    ? const Color(0xff007838)
                                                                                    : Colors.black54,
                                                                                BlendMode.srcIn),
                                                                          ),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                          ),
                                                                          Text(
                                                                              getIt<Variables>()
                                                                                  .generalVariables
                                                                                  .currentLanguage
                                                                                  .pickingInProgress
                                                                                  .toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  fontWeight: FontWeight.w600,
                                                                                  color: getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .userData
                                                                                              .userProfile
                                                                                              .userName
                                                                                              .toLowerCase() ==
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedKeepersNameList[index]
                                                                                              .toLowerCase()
                                                                                      ? const Color(0xff007838)
                                                                                      : Colors.grey)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "picked",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: Row(
                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Container(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                              decoration: BoxDecoration(
                                                                                                shape: BoxShape.circle,
                                                                                                color: Color(int.parse(context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .typeColor)),
                                                                                              ),
                                                                                              child: Center(
                                                                                                child: Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemType,
                                                                                                  style: TextStyle(
                                                                                                      color: const Color(0xffffffff),
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 17),
                                                                                                      fontWeight: FontWeight.w700),
                                                                                                ),
                                                                                              )),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                          Expanded(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    RichText(
                                                                                        text: TextSpan(
                                                                                      text:
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          color: const Color(0xff282F3A),
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontFamily: "Figtree"),
                                                                                      children: [
                                                                                        TextSpan(
                                                                                            text: context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickingData[index][idx]
                                                                                                .pickedQty,
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff007838),
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontFamily: "Figtree")),
                                                                                      ],
                                                                                    )),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: SizedBox(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        child: ListView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          physics: const BouncingScrollPhysics(),
                                                                                          shrinkWrap: true,
                                                                                          padding: EdgeInsets.zero,
                                                                                          children: [
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .floor
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .floor,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .room
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .room,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .zone
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .zone,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .itemCode
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemCode,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  "UOM",
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .uom,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .packageTerms
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .packageTerms,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .storeKeeper
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Row(
                                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                                  children: [
                                                                                                    Text(
                                                                                                      context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy
                                                                                                              .isNotEmpty
                                                                                                          ? context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name
                                                                                                          : "",
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? SizedBox(
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 5),
                                                                                                          )
                                                                                                        : const SizedBox(),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? InkWell(
                                                                                                            onTap: () {
                                                                                                              getIt<Variables>()
                                                                                                                      .generalVariables
                                                                                                                      .popUpWidget =
                                                                                                                  pickedUsersDetailsContent(
                                                                                                                      selectedItem: context
                                                                                                                              .read<PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                          index][idx]);
                                                                                                              getIt<Functions>().showAnimatedDialog(
                                                                                                                  context: context,
                                                                                                                  isFromTop: false,
                                                                                                                  isCloseDisabled: false);
                                                                                                            },
                                                                                                            child: Container(
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                  color: const Color(0xff007AFF),
                                                                                                                  borderRadius:
                                                                                                                      BorderRadius.circular(8)),
                                                                                                              child: Text(
                                                                                                                "+${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.length - 1}",
                                                                                                                style: TextStyle(
                                                                                                                    fontWeight: FontWeight.w700,
                                                                                                                    color: const Color(0xffFFFFFF),
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 10)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )
                                                                                                        : const SizedBox()
                                                                                                  ],
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff29B473),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "picked",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .typeColor)),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Flexible(
                                                                                          child: SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                        RichText(
                                                                                            text: TextSpan(
                                                                                          text:
                                                                                              "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              color: const Color(0xff282F3A),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontFamily: "Figtree"),
                                                                                          children: [
                                                                                            TextSpan(
                                                                                                text: context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .pickedQty,
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                    color: const Color(0xff007838),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree")),
                                                                                          ],
                                                                                        )),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .storeKeeper
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Row(
                                                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                                          children: [
                                                                                            Text(
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy[0]
                                                                                                      .name
                                                                                                  : "",
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  color: const Color(0xff282F3A)),
                                                                                            ),
                                                                                            context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .handledBy
                                                                                                        .length >
                                                                                                    1
                                                                                                ? SizedBox(
                                                                                                    width:
                                                                                                        getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                  )
                                                                                                : const SizedBox(),
                                                                                            context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .handledBy
                                                                                                        .length >
                                                                                                    1
                                                                                                ? InkWell(
                                                                                                    onTap: () {
                                                                                                      getIt<Variables>()
                                                                                                              .generalVariables
                                                                                                              .popUpWidget =
                                                                                                          pickedUsersDetailsContent(
                                                                                                              selectedItem: context
                                                                                                                  .read<PickListDetailsBloc>()
                                                                                                                  .groupedPickedData[index][idx]);
                                                                                                      getIt<Functions>().showAnimatedDialog(
                                                                                                          context: context,
                                                                                                          isFromTop: false,
                                                                                                          isCloseDisabled: false);
                                                                                                    },
                                                                                                    child: Container(
                                                                                                      padding: EdgeInsets.symmetric(
                                                                                                          horizontal: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 6)),
                                                                                                      decoration: BoxDecoration(
                                                                                                          color: const Color(0xff007AFF),
                                                                                                          borderRadius: BorderRadius.circular(8)),
                                                                                                      child: Text(
                                                                                                        "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                        style: TextStyle(
                                                                                                            fontWeight: FontWeight.w700,
                                                                                                            color: const Color(0xffFFFFFF),
                                                                                                            fontSize: getIt<Functions>()
                                                                                                                .getTextSize(fontSize: 10)),
                                                                                                      ),
                                                                                                    ),
                                                                                                  )
                                                                                                : const SizedBox()
                                                                                          ],
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  pickedRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: pickedRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty &&
                                        context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                            ),
                                          ],
                                        ),
                                      )
                                    : SingleChildScrollView(
                                        child: Column(
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedKeepersNameList[index]
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.grey,
                                                                                    fontWeight: FontWeight.w600)),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.end,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          SvgPicture.asset(
                                                                            "assets/pick_list/progress_live.svg",
                                                                            height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                            width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                            fit: BoxFit.fill,
                                                                            colorFilter: ColorFilter.mode(
                                                                                getIt<Variables>()
                                                                                            .generalVariables
                                                                                            .userData
                                                                                            .userProfile
                                                                                            .userName
                                                                                            .toLowerCase() ==
                                                                                        context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedKeepersNameList[index]
                                                                                            .toLowerCase()
                                                                                    ? const Color(0xff007838)
                                                                                    : Colors.black54,
                                                                                BlendMode.srcIn),
                                                                          ),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                          ),
                                                                          Text(
                                                                              getIt<Variables>()
                                                                                  .generalVariables
                                                                                  .currentLanguage
                                                                                  .pickingInProgress
                                                                                  .toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  fontWeight: FontWeight.w600,
                                                                                  color: getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .userData
                                                                                              .userProfile
                                                                                              .userName
                                                                                              .toLowerCase() ==
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedKeepersNameList[index]
                                                                                              .toLowerCase()
                                                                                      ? const Color(0xff007838)
                                                                                      : Colors.grey)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "picked",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: Row(
                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Container(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                              decoration: BoxDecoration(
                                                                                                shape: BoxShape.circle,
                                                                                                color: Color(int.parse(context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .typeColor)),
                                                                                              ),
                                                                                              child: Center(
                                                                                                child: Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemType,
                                                                                                  style: TextStyle(
                                                                                                      color: const Color(0xffffffff),
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 17),
                                                                                                      fontWeight: FontWeight.w700),
                                                                                                ),
                                                                                              )),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                          Expanded(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    RichText(
                                                                                        text: TextSpan(
                                                                                          text:
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              color: const Color(0xff282F3A),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontFamily: "Figtree"),
                                                                                          children: [
                                                                                            TextSpan(
                                                                                                text: context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .pickedQty,
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                    color: const Color(0xff007838),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree")),
                                                                                          ],
                                                                                        )),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: SizedBox(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        child: ListView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          physics: const BouncingScrollPhysics(),
                                                                                          shrinkWrap: true,
                                                                                          padding: EdgeInsets.zero,
                                                                                          children: [
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .floor
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .floor,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .room
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .room,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .zone
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .zone,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .itemCode
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemCode,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  "UOM",
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .uom,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .packageTerms
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .packageTerms,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .storeKeeper
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Row(
                                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                                  children: [
                                                                                                    Text(
                                                                                                      context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy
                                                                                                              .isNotEmpty
                                                                                                          ? context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name
                                                                                                          : "",
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? SizedBox(
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 5),
                                                                                                          )
                                                                                                        : const SizedBox(),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? InkWell(
                                                                                                            onTap: () {
                                                                                                              getIt<Variables>()
                                                                                                                      .generalVariables
                                                                                                                      .popUpWidget =
                                                                                                                  pickedUsersDetailsContent(
                                                                                                                      selectedItem: context
                                                                                                                              .read<PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                          index][idx]);
                                                                                                              getIt<Functions>().showAnimatedDialog(
                                                                                                                  context: context,
                                                                                                                  isFromTop: false,
                                                                                                                  isCloseDisabled: false);
                                                                                                            },
                                                                                                            child: Container(
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                  color: const Color(0xff007AFF),
                                                                                                                  borderRadius:
                                                                                                                      BorderRadius.circular(8)),
                                                                                                              child: Text(
                                                                                                                "+${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.length - 1}",
                                                                                                                style: TextStyle(
                                                                                                                    fontWeight: FontWeight.w700,
                                                                                                                    color: const Color(0xffFFFFFF),
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 10)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )
                                                                                                        : const SizedBox()
                                                                                                  ],
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff29B473),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "picked",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .typeColor)),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Flexible(
                                                                                          child: SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                        RichText(
                                                                                            text: TextSpan(
                                                                                          text:
                                                                                              "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              color: const Color(0xff282F3A),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontFamily: "Figtree"),
                                                                                          children: [
                                                                                            TextSpan(
                                                                                                text: context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .pickedQty,
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                    color: const Color(0xff007838),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree")),
                                                                                          ],
                                                                                        )),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .storeKeeper
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Row(
                                                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                                          children: [
                                                                                            Text(
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy[0]
                                                                                                      .name
                                                                                                  : "",
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  color: const Color(0xff282F3A)),
                                                                                            ),
                                                                                            context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .handledBy
                                                                                                        .length >
                                                                                                    1
                                                                                                ? SizedBox(
                                                                                                    width:
                                                                                                        getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                  )
                                                                                                : const SizedBox(),
                                                                                            context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .handledBy
                                                                                                        .length >
                                                                                                    1
                                                                                                ? InkWell(
                                                                                                    onTap: () {
                                                                                                      getIt<Variables>()
                                                                                                              .generalVariables
                                                                                                              .popUpWidget =
                                                                                                          pickedUsersDetailsContent(
                                                                                                              selectedItem: context
                                                                                                                  .read<PickListDetailsBloc>()
                                                                                                                  .groupedPickedData[index][idx]);
                                                                                                      getIt<Functions>().showAnimatedDialog(
                                                                                                          context: context,
                                                                                                          isFromTop: false,
                                                                                                          isCloseDisabled: false);
                                                                                                    },
                                                                                                    child: Container(
                                                                                                      padding: EdgeInsets.symmetric(
                                                                                                          horizontal: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 6)),
                                                                                                      decoration: BoxDecoration(
                                                                                                          color: const Color(0xff007AFF),
                                                                                                          borderRadius: BorderRadius.circular(8)),
                                                                                                      child: Text(
                                                                                                        "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                        style: TextStyle(
                                                                                                            fontWeight: FontWeight.w700,
                                                                                                            color: const Color(0xffFFFFFF),
                                                                                                            fontSize: getIt<Functions>()
                                                                                                                .getTextSize(fontSize: 10)),
                                                                                                      ),
                                                                                                    ),
                                                                                                  )
                                                                                                : const SizedBox()
                                                                                          ],
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ),
                              ),
                            );*/
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickingData.isEmpty &&
                                      context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.tripListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedKeepersNameList[index]
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.grey,
                                                                                    fontWeight: FontWeight.w600)),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.end,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          SvgPicture.asset(
                                                                            "assets/pick_list/progress_live.svg",
                                                                            height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                            width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                            fit: BoxFit.fill,
                                                                            colorFilter: ColorFilter.mode(
                                                                                getIt<Variables>()
                                                                                            .generalVariables
                                                                                            .userData
                                                                                            .userProfile
                                                                                            .userName
                                                                                            .toLowerCase() ==
                                                                                        context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedKeepersNameList[index]
                                                                                            .toLowerCase()
                                                                                    ? const Color(0xff007838)
                                                                                    : Colors.black54,
                                                                                BlendMode.srcIn),
                                                                          ),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                          ),
                                                                          Text(
                                                                              getIt<Variables>()
                                                                                  .generalVariables
                                                                                  .currentLanguage
                                                                                  .pickingInProgress
                                                                                  .toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  fontWeight: FontWeight.w600,
                                                                                  color: getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .userData
                                                                                              .userProfile
                                                                                              .userName
                                                                                              .toLowerCase() ==
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedKeepersNameList[index]
                                                                                              .toLowerCase()
                                                                                      ? const Color(0xff007838)
                                                                                      : Colors.grey)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "partial",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: Row(
                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Container(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                              decoration: BoxDecoration(
                                                                                                shape: BoxShape.circle,
                                                                                                color: Color(int.parse(context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .typeColor)),
                                                                                              ),
                                                                                              child: Center(
                                                                                                child: Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemType,
                                                                                                  style: TextStyle(
                                                                                                      color: const Color(0xffffffff),
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 17),
                                                                                                      fontWeight: FontWeight.w700),
                                                                                                ),
                                                                                              )),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                          Expanded(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    SizedBox(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 55),
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                                          crossAxisAlignment: CrossAxisAlignment.end,
                                                                                          children: [
                                                                                            RichText(
                                                                                              text: TextSpan(
                                                                                                text: context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .pickedQty,
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                    color: const Color(0xff29B473),
                                                                                                    fontWeight: FontWeight.w600),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text:
                                                                                                          "/${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].quantity}",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 16),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w600)),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .pickedQty
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    color: const Color(0xff282F3A)))
                                                                                          ],
                                                                                        )),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: SizedBox(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        child: ListView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          physics: const BouncingScrollPhysics(),
                                                                                          shrinkWrap: true,
                                                                                          padding: EdgeInsets.zero,
                                                                                          children: [
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .floor
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .floor,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .room
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .room,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .zone
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .zone,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .itemCode
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemCode,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  "UOM",
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .uom,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .packageTerms
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .packageTerms,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .storeKeeper
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Row(
                                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                                  children: [
                                                                                                    Text(
                                                                                                      context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy
                                                                                                              .isNotEmpty
                                                                                                          ? context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name
                                                                                                          : "",
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? SizedBox(
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 5),
                                                                                                          )
                                                                                                        : const SizedBox(),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? InkWell(
                                                                                                            onTap: () {
                                                                                                              getIt<Variables>()
                                                                                                                      .generalVariables
                                                                                                                      .popUpWidget =
                                                                                                                  pickedUsersDetailsContent(
                                                                                                                      selectedItem: context
                                                                                                                              .read<PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                          index][idx]);
                                                                                                              getIt<Functions>().showAnimatedDialog(
                                                                                                                  context: context,
                                                                                                                  isFromTop: false,
                                                                                                                  isCloseDisabled: false);
                                                                                                            },
                                                                                                            child: Container(
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                  color: const Color(0xff007AFF),
                                                                                                                  borderRadius:
                                                                                                                      BorderRadius.circular(8)),
                                                                                                              child: Text(
                                                                                                                "+${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.length - 1}",
                                                                                                                style: TextStyle(
                                                                                                                    fontWeight: FontWeight.w700,
                                                                                                                    color: const Color(0xffFFFFFF),
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 10)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )
                                                                                                        : const SizedBox()
                                                                                                  ],
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff29B473),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "partial",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                                                      children: [
                                                                                        Container(
                                                                                            height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                            width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                            decoration: BoxDecoration(
                                                                                              shape: BoxShape.circle,
                                                                                              color: Color(int.parse(context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .typeColor)),
                                                                                            ),
                                                                                            child: Center(
                                                                                              child: Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .itemType,
                                                                                                style: TextStyle(
                                                                                                    color: const Color(0xffffffff),
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 17),
                                                                                                    fontWeight: FontWeight.w700),
                                                                                              ),
                                                                                            )),
                                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                        Expanded(
                                                                                          child: SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize: getIt<Functions>()
                                                                                                      .getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                  SizedBox(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 55),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 100),
                                                                                      child: Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.end,
                                                                                        children: [
                                                                                          RichText(
                                                                                            text: TextSpan(
                                                                                              text: context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .pickedQty,
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                  color: const Color(0xff29B473),
                                                                                                  fontWeight: FontWeight.w600),
                                                                                              children: [
                                                                                                TextSpan(
                                                                                                    text:
                                                                                                        "/${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].quantity}",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 16),
                                                                                                        color: const Color(0xff007838),
                                                                                                        fontWeight: FontWeight.w600)),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          Text(
                                                                                              getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .currentLanguage
                                                                                                  .pickedQty
                                                                                                  .toUpperCase(),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xff282F3A)))
                                                                                        ],
                                                                                      ))
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: SizedBox(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      child: ListView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        physics: const BouncingScrollPhysics(),
                                                                                        shrinkWrap: true,
                                                                                        padding: EdgeInsets.zero,
                                                                                        children: [
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .floor
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .floor,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .room
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .room,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .zone
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .zone,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .itemCode
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .itemCode,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                "UOM",
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .packageTerms
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .packageTerms,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .storeKeeper
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Row(
                                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    context
                                                                                                            .read<PickListDetailsBloc>()
                                                                                                            .groupedPickedData[index][idx]
                                                                                                            .handledBy
                                                                                                            .isNotEmpty
                                                                                                        ? context
                                                                                                            .read<PickListDetailsBloc>()
                                                                                                            .groupedPickedData[index][idx]
                                                                                                            .handledBy[0]
                                                                                                            .name
                                                                                                        : "",
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                  context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickedData[index][idx]
                                                                                                              .handledBy
                                                                                                              .length >
                                                                                                          1
                                                                                                      ? SizedBox(
                                                                                                          width: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 5),
                                                                                                        )
                                                                                                      : const SizedBox(),
                                                                                                  context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickedData[index][idx]
                                                                                                              .handledBy
                                                                                                              .length >
                                                                                                          1
                                                                                                      ? InkWell(
                                                                                                          onTap: () {
                                                                                                            getIt<Variables>()
                                                                                                                    .generalVariables
                                                                                                                    .popUpWidget =
                                                                                                                pickedUsersDetailsContent(
                                                                                                                    selectedItem: context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]);
                                                                                                            getIt<Functions>().showAnimatedDialog(
                                                                                                                context: context,
                                                                                                                isFromTop: false,
                                                                                                                isCloseDisabled: false);
                                                                                                          },
                                                                                                          child: Container(
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 6)),
                                                                                                            decoration: BoxDecoration(
                                                                                                                color: const Color(0xff007AFF),
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8)),
                                                                                                            child: Text(
                                                                                                              "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                              style: TextStyle(
                                                                                                                  fontWeight: FontWeight.w700,
                                                                                                                  color: const Color(0xffFFFFFF),
                                                                                                                  fontSize: getIt<Functions>()
                                                                                                                      .getTextSize(fontSize: 10)),
                                                                                                            ),
                                                                                                          ),
                                                                                                        )
                                                                                                      : const SizedBox()
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  partialRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: partialRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty &&
                                        context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                            ),
                                          ],
                                        ),
                                      )
                                    : SingleChildScrollView(
                                        child: Column(
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedKeepersNameList[index]
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.grey,
                                                                                    fontWeight: FontWeight.w600)),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.end,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          SvgPicture.asset(
                                                                            "assets/pick_list/progress_live.svg",
                                                                            height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                            width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                            fit: BoxFit.fill,
                                                                            colorFilter: ColorFilter.mode(
                                                                                getIt<Variables>()
                                                                                            .generalVariables
                                                                                            .userData
                                                                                            .userProfile
                                                                                            .userName
                                                                                            .toLowerCase() ==
                                                                                        context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedKeepersNameList[index]
                                                                                            .toLowerCase()
                                                                                    ? const Color(0xff007838)
                                                                                    : Colors.black54,
                                                                                BlendMode.srcIn),
                                                                          ),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                          ),
                                                                          Text(
                                                                              getIt<Variables>()
                                                                                  .generalVariables
                                                                                  .currentLanguage
                                                                                  .pickingInProgress
                                                                                  .toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  fontWeight: FontWeight.w600,
                                                                                  color: getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .userData
                                                                                              .userProfile
                                                                                              .userName
                                                                                              .toLowerCase() ==
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedKeepersNameList[index]
                                                                                              .toLowerCase()
                                                                                      ? const Color(0xff007838)
                                                                                      : Colors.grey)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "partial",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: Row(
                                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                                        children: [
                                                                                          Container(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                              decoration: BoxDecoration(
                                                                                                shape: BoxShape.circle,
                                                                                                color: Color(int.parse(context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .typeColor)),
                                                                                              ),
                                                                                              child: Center(
                                                                                                child: Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemType,
                                                                                                  style: TextStyle(
                                                                                                      color: const Color(0xffffffff),
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 17),
                                                                                                      fontWeight: FontWeight.w700),
                                                                                                ),
                                                                                              )),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                          Expanded(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    SizedBox(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 55),
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                                          crossAxisAlignment: CrossAxisAlignment.end,
                                                                                          children: [
                                                                                            RichText(
                                                                                              text: TextSpan(
                                                                                                text: context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickingData[index][idx]
                                                                                                    .pickedQty,
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                    color: const Color(0xff29B473),
                                                                                                    fontWeight: FontWeight.w600),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text:
                                                                                                          "/${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].quantity}",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 16),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w600)),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .pickedQty
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    color: const Color(0xff282F3A)))
                                                                                          ],
                                                                                        )),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                                                                                child: Row(
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: SizedBox(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        child: ListView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          physics: const BouncingScrollPhysics(),
                                                                                          shrinkWrap: true,
                                                                                          padding: EdgeInsets.zero,
                                                                                          children: [
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .floor
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .floor,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .room
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .room,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .zone
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .zone,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .itemCode
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .itemCode,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  "UOM",
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .uom,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .packageTerms
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .packageTerms,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff282F3A)),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                            SizedBox(
                                                                                                width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                            Column(
                                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                                              mainAxisSize: MainAxisSize.min,
                                                                                              children: [
                                                                                                Text(
                                                                                                  getIt<Variables>()
                                                                                                      .generalVariables
                                                                                                      .currentLanguage
                                                                                                      .storeKeeper
                                                                                                      .toUpperCase(),
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff8A8D8E)),
                                                                                                ),
                                                                                                Row(
                                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                                  children: [
                                                                                                    Text(
                                                                                                      context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy
                                                                                                              .isNotEmpty
                                                                                                          ? context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name
                                                                                                          : "",
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? SizedBox(
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 5),
                                                                                                          )
                                                                                                        : const SizedBox(),
                                                                                                    context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickingData[index][idx]
                                                                                                                .handledBy
                                                                                                                .length >
                                                                                                            1
                                                                                                        ? InkWell(
                                                                                                            onTap: () {
                                                                                                              getIt<Variables>()
                                                                                                                      .generalVariables
                                                                                                                      .popUpWidget =
                                                                                                                  pickedUsersDetailsContent(
                                                                                                                      selectedItem: context
                                                                                                                              .read<PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                          index][idx]);
                                                                                                              getIt<Functions>().showAnimatedDialog(
                                                                                                                  context: context,
                                                                                                                  isFromTop: false,
                                                                                                                  isCloseDisabled: false);
                                                                                                            },
                                                                                                            child: Container(
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                  color: const Color(0xff007AFF),
                                                                                                                  borderRadius:
                                                                                                                      BorderRadius.circular(8)),
                                                                                                              child: Text(
                                                                                                                "+${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.length - 1}",
                                                                                                                style: TextStyle(
                                                                                                                    fontWeight: FontWeight.w700,
                                                                                                                    color: const Color(0xffFFFFFF),
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 10)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )
                                                                                                        : const SizedBox()
                                                                                                  ],
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff29B473),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "partial",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                                                      children: [
                                                                                        Container(
                                                                                            height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                            width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                            decoration: BoxDecoration(
                                                                                              shape: BoxShape.circle,
                                                                                              color: Color(int.parse(context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .typeColor)),
                                                                                            ),
                                                                                            child: Center(
                                                                                              child: Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .itemType,
                                                                                                style: TextStyle(
                                                                                                    color: const Color(0xffffffff),
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 17),
                                                                                                    fontWeight: FontWeight.w700),
                                                                                              ),
                                                                                            )),
                                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                        Expanded(
                                                                                          child: Row(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              SingleChildScrollView(
                                                                                                scrollDirection: Axis.horizontal,
                                                                                                child: Text(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .itemName,
                                                                                                  maxLines: 1,
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w600,
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 16),
                                                                                                      color: const Color(0xff282F3A),
                                                                                                      overflow: TextOverflow.ellipsis),
                                                                                                ),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                  SizedBox(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 55),
                                                                                      child: Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.end,
                                                                                        children: [
                                                                                          RichText(
                                                                                            text: TextSpan(
                                                                                              text: context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .pickedQty,
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                  color: const Color(0xff29B473),
                                                                                                  fontWeight: FontWeight.w600),
                                                                                              children: [
                                                                                                TextSpan(
                                                                                                    text:
                                                                                                        "/${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].quantity}",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 16),
                                                                                                        color: const Color(0xff007838),
                                                                                                        fontWeight: FontWeight.w600)),
                                                                                              ],
                                                                                            ),
                                                                                          ),
                                                                                          Text(
                                                                                              getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .currentLanguage
                                                                                                  .pickedQty
                                                                                                  .toUpperCase(),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xff282F3A)))
                                                                                        ],
                                                                                      ))
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: SizedBox(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      child: ListView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        physics: const BouncingScrollPhysics(),
                                                                                        shrinkWrap: true,
                                                                                        padding: EdgeInsets.zero,
                                                                                        children: [
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .floor
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .floor,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .room
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .room,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .zone
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .zone,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .itemCode
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .itemCode,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                "UOM",
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .packageTerms
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .packageTerms,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .storeKeeper
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Row(
                                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    context
                                                                                                            .read<PickListDetailsBloc>()
                                                                                                            .groupedPickedData[index][idx]
                                                                                                            .handledBy
                                                                                                            .isNotEmpty
                                                                                                        ? context
                                                                                                            .read<PickListDetailsBloc>()
                                                                                                            .groupedPickedData[index][idx]
                                                                                                            .handledBy[0]
                                                                                                            .name
                                                                                                        : "",
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                  context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickedData[index][idx]
                                                                                                              .handledBy
                                                                                                              .length >
                                                                                                          1
                                                                                                      ? SizedBox(
                                                                                                          width: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 5),
                                                                                                        )
                                                                                                      : const SizedBox(),
                                                                                                  context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickedData[index][idx]
                                                                                                              .handledBy
                                                                                                              .length >
                                                                                                          1
                                                                                                      ? InkWell(
                                                                                                          onTap: () {
                                                                                                            getIt<Variables>()
                                                                                                                    .generalVariables
                                                                                                                    .popUpWidget =
                                                                                                                pickedUsersDetailsContent(
                                                                                                                    selectedItem: context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]);
                                                                                                            getIt<Functions>().showAnimatedDialog(
                                                                                                                context: context,
                                                                                                                isFromTop: false,
                                                                                                                isCloseDisabled: false);
                                                                                                          },
                                                                                                          child: Container(
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 6)),
                                                                                                            decoration: BoxDecoration(
                                                                                                                color: const Color(0xff007AFF),
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8)),
                                                                                                            child: Text(
                                                                                                              "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                              style: TextStyle(
                                                                                                                  fontWeight: FontWeight.w700,
                                                                                                                  color: const Color(0xffFFFFFF),
                                                                                                                  fontSize: getIt<Functions>()
                                                                                                                      .getTextSize(fontSize: 10)),
                                                                                                            ),
                                                                                                          ),
                                                                                                        )
                                                                                                      : const SizedBox()
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ),
                              ),
                            );*/
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _unavailableScrollController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _unavailableEmptyController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const ScrollPhysics(),
                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 38),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Text(
                                                                "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    fontWeight: FontWeight.w600,
                                                                    color: const Color(0xff282F3A)),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            shrinkWrap: true,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                  context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                  getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                      selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                                      index: index,
                                                                      idx: idx,
                                                                      fromWhere: "unavailable",
                                                                      isPicking: false);
                                                                  getIt<Functions>()
                                                                      .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                                },
                                                                child: Column(
                                                                  children: [
                                                                    Container(
                                                                      padding: EdgeInsets.symmetric(
                                                                          horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                                          vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Row(
                                                                            children: [
                                                                              Expanded(
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                        width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                        decoration: BoxDecoration(
                                                                                          shape: BoxShape.circle,
                                                                                          color: Color(int.parse(context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .typeColor)),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .itemType,
                                                                                            style: TextStyle(
                                                                                                color: const Color(0xffffffff),
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 17),
                                                                                                fontWeight: FontWeight.w700),
                                                                                          ),
                                                                                        )),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    Expanded(
                                                                                      child: SingleChildScrollView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemName,
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize:
                                                                                                  getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              color: const Color(0xff282F3A),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 60),
                                                                                  width: getIt<Functions>().getWidgetWidth(width: 100),
                                                                                  child: Column(
                                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                                    crossAxisAlignment: CrossAxisAlignment.end,
                                                                                    children: [
                                                                                      Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .quantity,
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                              color: const Color(0xffF92C38),
                                                                                              fontWeight: FontWeight.w600)),
                                                                                      Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .reqQty
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              color: const Color(0xff282F3A)))
                                                                                    ],
                                                                                  ))
                                                                            ],
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          Row(
                                                                            children: [
                                                                              Expanded(
                                                                                child: SizedBox(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                  child: ListView(
                                                                                    scrollDirection: Axis.horizontal,
                                                                                    physics: const BouncingScrollPhysics(),
                                                                                    shrinkWrap: true,
                                                                                    padding: EdgeInsets.zero,
                                                                                    children: [
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .room
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .room,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .zone
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .zone,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .itemCode
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .itemCode,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            "UOM",
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .packageTerms
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .packageTerms,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .storeKeeper
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Row(
                                                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                                            children: [
                                                                                              Text(
                                                                                                context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .handledBy
                                                                                                        .isNotEmpty
                                                                                                    ? context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .handledBy[0]
                                                                                                        .name
                                                                                                    : "",
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                              context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .handledBy
                                                                                                          .length >
                                                                                                      1
                                                                                                  ? SizedBox(
                                                                                                      width:
                                                                                                          getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .handledBy
                                                                                                          .length >
                                                                                                      1
                                                                                                  ? InkWell(
                                                                                                      onTap: () {
                                                                                                        getIt<Variables>()
                                                                                                                .generalVariables
                                                                                                                .popUpWidget =
                                                                                                            pickedUsersDetailsContent(
                                                                                                                selectedItem: context
                                                                                                                    .read<PickListDetailsBloc>()
                                                                                                                    .groupedPickedData[index][idx]);
                                                                                                        getIt<Functions>().showAnimatedDialog(
                                                                                                            context: context,
                                                                                                            isFromTop: false,
                                                                                                            isCloseDisabled: false);
                                                                                                      },
                                                                                                      child: Container(
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6)),
                                                                                                        decoration: BoxDecoration(
                                                                                                            color: const Color(0xff007AFF),
                                                                                                            borderRadius: BorderRadius.circular(8)),
                                                                                                        child: Text(
                                                                                                          "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w700,
                                                                                                              color: const Color(0xffFFFFFF),
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 10)),
                                                                                                        ),
                                                                                                      ),
                                                                                                    )
                                                                                                  : const SizedBox()
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    Container(
                                                                      decoration: const BoxDecoration(
                                                                        color: Color(0xffCDE5FF),
                                                                        borderRadius: BorderRadius.only(
                                                                            bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                                      ),
                                                                      padding: EdgeInsets.symmetric(
                                                                          horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                          vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                      child: Row(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          RichText(
                                                                            text: TextSpan(
                                                                              text:
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff282F3A),
                                                                                  fontWeight: FontWeight.w600),
                                                                              children: [
                                                                                TextSpan(
                                                                                    text: context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .unavailableReason,
                                                                                    style: TextStyle(
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xffF92C38),
                                                                                        fontWeight: FontWeight.w600)),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                          RichText(
                                                                            text: TextSpan(
                                                                              text:
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff282F3A),
                                                                                  fontWeight: FontWeight.w600),
                                                                              children: [
                                                                                TextSpan(
                                                                                    text: context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .alternativeItemName,
                                                                                    style: TextStyle(
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff007AFF),
                                                                                        fontWeight: FontWeight.w600)),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              );
                                                            })
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  unavailableRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: unavailableRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                            ),
                                          ],
                                        ),
                                      )
                                    : ListView.builder(
                                        padding: EdgeInsets.zero,
                                        physics: const ScrollPhysics(),
                                        itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                        shrinkWrap: true,
                                        itemBuilder: (BuildContext context, int index) {
                                          return Container(
                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                            margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                  decoration: const BoxDecoration(
                                                    color: Color(0xffE3E7EA),
                                                    borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                  ),
                                                  padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                  child: Row(
                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                    children: [
                                                      Text(
                                                        "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A)),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    shrinkWrap: true,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                    itemBuilder: (BuildContext context, int idx) {
                                                      return InkWell(
                                                        onTap: () {
                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                              selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                              index: index,
                                                              idx: idx,
                                                              fromWhere: "unavailable",
                                                              isPicking: false);
                                                          getIt<Functions>()
                                                              .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                        },
                                                        child: Column(
                                                          children: [
                                                            Container(
                                                              padding: EdgeInsets.symmetric(
                                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                                  vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                              child: Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                children: [
                                                                  Row(
                                                                    children: [
                                                                      Expanded(
                                                                        child: Row(
                                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                          children: [
                                                                            Container(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                  color: Color(int.parse(context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .typeColor)),
                                                                                ),
                                                                                child: Center(
                                                                                  child: Text(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .itemType,
                                                                                    style: TextStyle(
                                                                                        color: const Color(0xffffffff),
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                        fontWeight: FontWeight.w700),
                                                                                  ),
                                                                                )),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                            Expanded(
                                                                              child: Row(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  SingleChildScrollView(
                                                                                    scrollDirection: Axis.horizontal,
                                                                                    child: Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .itemName,
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          color: const Color(0xff282F3A),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      SizedBox(
                                                                          height: getIt<Functions>().getWidgetHeight(height: 60),
                                                                          width: getIt<Functions>().getWidgetWidth(width: 150),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                            crossAxisAlignment: CrossAxisAlignment.end,
                                                                            children: [
                                                                              Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .quantity,
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                      color: const Color(0xffF92C38),
                                                                                      fontWeight: FontWeight.w600)),
                                                                              Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .reqQty
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      color: const Color(0xff282F3A)))
                                                                            ],
                                                                          ))
                                                                    ],
                                                                  ),
                                                                  SizedBox(
                                                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                  ),
                                                                  Row(
                                                                    children: [
                                                                      Expanded(
                                                                        child: SizedBox(
                                                                          height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                          child: ListView(
                                                                            scrollDirection: Axis.horizontal,
                                                                            physics: const BouncingScrollPhysics(),
                                                                            shrinkWrap: true,
                                                                            padding: EdgeInsets.zero,
                                                                            children: [
                                                                              Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Text(
                                                                                    getIt<Variables>()
                                                                                        .generalVariables
                                                                                        .currentLanguage
                                                                                        .room
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w500,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff8A8D8E)),
                                                                                  ),
                                                                                  Text(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .room,
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w600,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff282F3A)),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                              Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Text(
                                                                                    getIt<Variables>()
                                                                                        .generalVariables
                                                                                        .currentLanguage
                                                                                        .zone
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w500,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff8A8D8E)),
                                                                                  ),
                                                                                  Text(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .zone,
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w600,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff282F3A)),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                              Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Text(
                                                                                    getIt<Variables>()
                                                                                        .generalVariables
                                                                                        .currentLanguage
                                                                                        .itemCode
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w500,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff8A8D8E)),
                                                                                  ),
                                                                                  Text(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .itemCode,
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w600,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff282F3A)),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                              Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Text(
                                                                                    "UOM",
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w500,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff8A8D8E)),
                                                                                  ),
                                                                                  Text(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .uom,
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w600,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff282F3A)),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                              Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Text(
                                                                                    getIt<Variables>()
                                                                                        .generalVariables
                                                                                        .currentLanguage
                                                                                        .packageTerms
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w500,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff8A8D8E)),
                                                                                  ),
                                                                                  Text(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .packageTerms,
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w600,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff282F3A)),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 25)),
                                                                              Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                mainAxisSize: MainAxisSize.min,
                                                                                children: [
                                                                                  Text(
                                                                                    getIt<Variables>()
                                                                                        .generalVariables
                                                                                        .currentLanguage
                                                                                        .storeKeeper
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontWeight: FontWeight.w500,
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: const Color(0xff8A8D8E)),
                                                                                  ),
                                                                                  Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                                    children: [
                                                                                      Text(
                                                                                        context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .handledBy
                                                                                                .isNotEmpty
                                                                                            ? context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .handledBy[0]
                                                                                                .name
                                                                                            : "",
                                                                                        style: TextStyle(
                                                                                            fontWeight: FontWeight.w600,
                                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                            color: const Color(0xff282F3A)),
                                                                                      ),
                                                                                      context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .handledBy
                                                                                                  .length >
                                                                                              1
                                                                                          ? SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 5),
                                                                                            )
                                                                                          : const SizedBox(),
                                                                                      context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickedData[index][idx]
                                                                                                  .handledBy
                                                                                                  .length >
                                                                                              1
                                                                                          ? InkWell(
                                                                                              onTap: () {
                                                                                                getIt<Variables>().generalVariables.popUpWidget =
                                                                                                    pickedUsersDetailsContent(
                                                                                                        selectedItem: context
                                                                                                            .read<PickListDetailsBloc>()
                                                                                                            .groupedPickedData[index][idx]);
                                                                                                getIt<Functions>().showAnimatedDialog(
                                                                                                    context: context,
                                                                                                    isFromTop: false,
                                                                                                    isCloseDisabled: false);
                                                                                              },
                                                                                              child: Container(
                                                                                                padding: EdgeInsets.symmetric(
                                                                                                    horizontal:
                                                                                                        getIt<Functions>().getWidgetWidth(width: 6)),
                                                                                                decoration: BoxDecoration(
                                                                                                    color: const Color(0xff007AFF),
                                                                                                    borderRadius: BorderRadius.circular(8)),
                                                                                                child: Text(
                                                                                                  "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                  style: TextStyle(
                                                                                                      fontWeight: FontWeight.w700,
                                                                                                      color: const Color(0xffFFFFFF),
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 10)),
                                                                                                ),
                                                                                              ),
                                                                                            )
                                                                                          : const SizedBox()
                                                                                    ],
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            Container(
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffCDE5FF),
                                                                borderRadius: BorderRadius.only(
                                                                    bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(
                                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][idx]
                                                                                .unavailableReason,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xffF92C38),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][idx]
                                                                                .alternativeItemName,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff007AFF),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      );
                                                    })
                                              ],
                                            ),
                                          );
                                        }),
                              ),
                            );*/
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const ScrollPhysics(),
                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(
                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                          child: IntrinsicHeight(
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () async {
                                                                  if (context.mounted) {
                                                                    context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                    context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                    getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                        selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                            [idx],
                                                                        index: index,
                                                                        idx: idx,
                                                                        fromWhere: "yet_to_pick",
                                                                        isPicking: false);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  }
                                                                },
                                                                child: Container(
                                                                  padding: EdgeInsets.only(
                                                                      left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                      right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                      top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                                  color: Colors.white,
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          Container(
                                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                              decoration: BoxDecoration(
                                                                                shape: BoxShape.circle,
                                                                                color: Color(int.parse(context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .typeColor)),
                                                                              ),
                                                                              child: Center(
                                                                                child: Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemType,
                                                                                  style: TextStyle(
                                                                                      color: const Color(0xffffffff),
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                      fontWeight: FontWeight.w700),
                                                                                ),
                                                                              )),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                          ),
                                                                          Expanded(
                                                                            child: SingleChildScrollView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: Text(
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .itemName,
                                                                                maxLines: 1,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                    color: const Color(0xff282F3A),
                                                                                    overflow: TextOverflow.ellipsis),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 14),
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                        child: Row(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                          children: [
                                                                            Expanded(
                                                                              child: SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            SizedBox(
                                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                            ),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.end,
                                                                              children: [
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .quantity,
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: const Color(0xff007AFF)),
                                                                                ),
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .qtyToPick
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                      context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                          ? const SizedBox()
                                                                          : const Divider(color: Color(0xffE0E7EC))
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            })
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                        }
                      }
                      else if (state is PickListDetailsListLoading) {
                        switch (context.read<PickListDetailsBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 20),
                                                        right: getIt<Functions>().getWidgetWidth(width: 20),
                                                        top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 58),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.symmetric(
                                                        horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                        vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                            Expanded(
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "CORN FLOUR - 1KG",
                                                                    maxLines: 1,
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                        color: const Color(0xff282F3A),
                                                                        overflow: TextOverflow.ellipsis),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 16),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 41),
                                                          child: ListView(
                                                            scrollDirection: Axis.horizontal,
                                                            physics: const BouncingScrollPhysics(),
                                                            shrinkWrap: true,
                                                            padding: EdgeInsets.zero,
                                                            children: [
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "R",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "Z",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "F001",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    "UOM",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "UOM",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.packageTerms.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "Package Terms",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.packageTerms.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "Package Terms",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "StagingArea",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Text(
                                                                  "CORN FLOUR - 1KG",
                                                                  maxLines: 1,
                                                                  style: TextStyle(
                                                                      fontWeight: FontWeight.w600,
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                      color: const Color(0xff282F3A),
                                                                      overflow: TextOverflow.ellipsis),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 41),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                shrinkWrap: true,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Text(
                                                                    "CORN FLOUR - 1KG ",
                                                                    maxLines: 1,
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                        color: const Color(0xff282F3A),
                                                                        overflow: TextOverflow.ellipsis),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 42),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      Container(
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xffCDE5FF),
                                                          borderRadius:
                                                              BorderRadius.only(bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                        ),
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Row(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            RichText(
                                                              text: TextSpan(
                                                                text:
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    color: const Color(0xff282F3A),
                                                                    fontWeight: FontWeight.w600),
                                                                children: [
                                                                  TextSpan(
                                                                      text: "Unavailable Reason",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xffF92C38),
                                                                          fontWeight: FontWeight.w600)),
                                                                ],
                                                              ),
                                                            ),
                                                            RichText(
                                                              text: TextSpan(
                                                                text:
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    color: const Color(0xff282F3A),
                                                                    fontWeight: FontWeight.w600),
                                                                children: [
                                                                  TextSpan(
                                                                      text: "Alternative Item Name",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff007AFF),
                                                                          fontWeight: FontWeight.w600)),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 20),
                                                        right: getIt<Functions>().getWidgetWidth(width: 20),
                                                        top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 58),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                        }
                      }
                      else if (state is PickListDetailsLoading) {
                        switch (context.read<PickListDetailsBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 20),
                                                        right: getIt<Functions>().getWidgetWidth(width: 20),
                                                        top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 58),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.symmetric(
                                                        horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                        vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                            Expanded(
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "CORN FLOUR - 1KG",
                                                                    maxLines: 1,
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                        color: const Color(0xff282F3A),
                                                                        overflow: TextOverflow.ellipsis),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 16),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 41),
                                                          child: ListView(
                                                            scrollDirection: Axis.horizontal,
                                                            physics: const BouncingScrollPhysics(),
                                                            shrinkWrap: true,
                                                            padding: EdgeInsets.zero,
                                                            children: [
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "R",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "Z",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "F001",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    "UOM",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "UOM",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.packageTerms.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "Package Terms",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.packageTerms.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w500,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        color: const Color(0xff8A8D8E)),
                                                                  ),
                                                                  Text(
                                                                    "Package Terms",
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "StagingArea",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Text(
                                                                  "CORN FLOUR - 1KG",
                                                                  maxLines: 1,
                                                                  style: TextStyle(
                                                                      fontWeight: FontWeight.w600,
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                      color: const Color(0xff282F3A),
                                                                      overflow: TextOverflow.ellipsis),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 41),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                shrinkWrap: true,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 20),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 16)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Text(
                                                                    "CORN FLOUR - 1KG ",
                                                                    maxLines: 1,
                                                                    style: TextStyle(
                                                                        fontWeight: FontWeight.w600,
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                        color: const Color(0xff282F3A),
                                                                        overflow: TextOverflow.ellipsis),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 42),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 40)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      Container(
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xffCDE5FF),
                                                          borderRadius:
                                                              BorderRadius.only(bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                        ),
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Row(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            RichText(
                                                              text: TextSpan(
                                                                text:
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    color: const Color(0xff282F3A),
                                                                    fontWeight: FontWeight.w600),
                                                                children: [
                                                                  TextSpan(
                                                                      text: "Unavailable Reason",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xffF92C38),
                                                                          fontWeight: FontWeight.w600)),
                                                                ],
                                                              ),
                                                            ),
                                                            RichText(
                                                              text: TextSpan(
                                                                text:
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    color: const Color(0xff282F3A),
                                                                    fontWeight: FontWeight.w600),
                                                                children: [
                                                                  TextSpan(
                                                                      text: "Alternative Item Name",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff007AFF),
                                                                          fontWeight: FontWeight.w600)),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 20),
                                                        right: getIt<Functions>().getWidgetWidth(width: 20),
                                                        top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 58),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                        }
                      } else {
                        return const SizedBox();
                      }
                    },
                  ),
                ),
              ],
            ),
          );
        }
        else {
          return Container(
            color: const Color(0xffEEF4FF),
            child: Column(
              children: [
                BlocBuilder<PickListDetailsBloc, PickListDetailsState>(
                  builder: (BuildContext context, PickListDetailsState state) {
                    if (state is PickListDetailsLoading) {
                      return SizedBox(
                        height: getIt<Functions>().getWidgetHeight(height: 235),
                        child: AppBar(
                          backgroundColor: const Color(0xff1D2736),
                          leading: IconButton(
                            onPressed: () {
                              getIt<Variables>().generalVariables.indexName = getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList[getIt<Variables>().generalVariables.pickListRouteList.length - 1];
                              context.read<NavigationBloc>().add(const NavigationInitialEvent());
                              getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList
                                  .removeAt(getIt<Variables>().generalVariables.pickListRouteList.length - 1);
                            },
                            icon: const Icon(
                              Icons.arrow_back,
                              color: Color(0xffffffff),
                            ),
                          ),
                          titleSpacing: 0,
                          title: AnimatedCrossFade(
                            firstChild: Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                Expanded(
                                  child: Shimmer.fromColors(
                                    baseColor: Colors.white24,
                                    highlightColor: Colors.grey,
                                    child: Column(
                                      mainAxisAlignment: MainAxisAlignment.start,
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: [
                                        Text(
                                          getIt<Variables>().generalVariables.currentLanguage.picklist,
                                          style: TextStyle(
                                              fontWeight: FontWeight.w600,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 21),
                                              color: const Color(0xffffffff)),
                                          overflow: TextOverflow.ellipsis,
                                        ),
                                        Skeleton.unite(
                                          unite: false,
                                          child: Text(
                                            getIt<Variables>().generalVariables.currentLanguage.picklistName,
                                            overflow: TextOverflow.ellipsis,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w600,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                color: const Color(0xffffffff)),
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            secondChild: textBars(controller: searchBar),
                            crossFadeState:
                                context.read<PickListDetailsBloc>().searchBarEnabled ? CrossFadeState.showSecond : CrossFadeState.showFirst,
                            duration: const Duration(milliseconds: 100),
                          ),
                          actions: [
                            Container(
                              height: getIt<Functions>().getWidgetHeight(height: 36),
                              width: getIt<Functions>().getWidgetWidth(width: 36),
                              margin: EdgeInsets.only(
                                right: getIt<Functions>().getWidgetWidth(width: 8),
                              ),
                              decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFE0E6EE).withOpacity(0.2)),
                              child: Center(
                                child: SvgPicture.asset(
                                  "assets/pick_list/pick_list_search.svg",
                                  height: getIt<Functions>().getWidgetHeight(height: 16),
                                  width: getIt<Functions>().getWidgetWidth(width: 16),
                                  fit: BoxFit.fill,
                                ),
                              ),
                            ),
                            const SizedBox(width: 6),
                            Container(
                              height: getIt<Functions>().getWidgetHeight(height: 36),
                              width: getIt<Functions>().getWidgetWidth(width: 36),
                              margin: EdgeInsets.only(
                                right: getIt<Functions>().getWidgetWidth(width: 8),
                              ),
                              decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFE0E6EE).withOpacity(0.2)),
                              child: Center(
                                child: SvgPicture.asset(
                                  "assets/pick_list/pick_list_filter.svg",
                                  height: getIt<Functions>().getWidgetHeight(height: 16),
                                  width: getIt<Functions>().getWidgetWidth(width: 16),
                                  fit: BoxFit.fill,
                                ),
                              ),
                            ),
                            const SizedBox(width: 12)
                          ],
                          bottom: PreferredSize(
                            preferredSize: Size(
                                getIt<Functions>().getWidgetWidth(
                                    width: Orientation.portrait == MediaQuery.of(context).orientation
                                        ? getIt<Variables>().generalVariables.width
                                        : getIt<Variables>().generalVariables.height),
                                getIt<Functions>().getWidgetHeight(height: 140)),
                            child: Padding(
                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisSize: MainAxisSize.min,
                                children: [
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                  Shimmer.fromColors(
                                    baseColor: Colors.white24,
                                    highlightColor: Colors.grey,
                                    child: Container(
                                      height: getIt<Functions>().getWidgetHeight(height: 52),
                                      color: Colors.transparent,
                                      child: ListView(
                                        scrollDirection: Axis.horizontal,
                                        children: [
                                          Center(
                                            child: SvgPicture.asset(
                                              "assets/pick_list/status_image.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 20),
                                              width: getIt<Functions>().getWidgetWidth(width: 20),
                                              fit: BoxFit.fill,
                                            ),
                                          ),
                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                          Column(
                                            mainAxisAlignment: MainAxisAlignment.center,
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.status.toUpperCase(),
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w400,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    color: const Color(0xffffffff)),
                                              ),
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.loading,
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w700,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                    color: const Color(0xffF8B11D)),
                                              ),
                                            ],
                                          ),
                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                          Column(
                                            mainAxisAlignment: MainAxisAlignment.center,
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.dateAndTime.toUpperCase(),
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w400,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    color: const Color(0xffffffff)),
                                              ),
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.loading * 2,
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w700,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                    color: const Color(0xff30D158)),
                                              ),
                                            ],
                                          ),
                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                          Column(
                                            mainAxisAlignment: MainAxisAlignment.center,
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.totalItems.toUpperCase(),
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w400,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    color: const Color(0xffffffff)),
                                              ),
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.loading,
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w700,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                    color: const Color(0xff30D158)),
                                              ),
                                            ],
                                          ),
                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                          Column(
                                            mainAxisAlignment: MainAxisAlignment.center,
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.handled.toUpperCase(),
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w400,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    color: const Color(0xffffffff)),
                                              ),
                                              Text(getIt<Variables>().generalVariables.currentLanguage.loading,
                                                  style: TextStyle(
                                                      color: const Color(0xffffffff),
                                                      fontWeight: FontWeight.w500,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                      fontFamily: "Figtree"))
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
                                  Container(
                                    height: getIt<Functions>().getWidgetHeight(height: 50),
                                    padding: EdgeInsets.symmetric(
                                        horizontal: getIt<Functions>().getWidgetWidth(width: 16),
                                        vertical: getIt<Functions>().getWidgetHeight(height: 2)),
                                    decoration: BoxDecoration(color: const Color(0xffFFFFFF), borderRadius: BorderRadius.circular(4)),
                                    child: Row(
                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                      crossAxisAlignment: CrossAxisAlignment.center,
                                      children: [
                                        Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Skeletonizer(
                                              enabled: true,
                                              child: Text(
                                                getIt<Variables>().generalVariables.currentLanguage.timeSpent,
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                    color: const Color(0xff1D2736)),
                                              ),
                                            ),
                                            Skeletonizer(
                                              enabled: true,
                                              child: Text(
                                                "37:28",
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w600,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                    color: const Color(0xff007aff)),
                                              ),
                                            ),
                                          ],
                                        ),
                                        Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 45),
                                          width: getIt<Functions>().getWidgetWidth(width: 105),
                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                                          child: Skeletonizer(
                                            enabled: true,
                                            child: Skeleton.unite(
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Expanded(
                                                      child: Container(
                                                    decoration: const BoxDecoration(
                                                      borderRadius: BorderRadius.only(topLeft: Radius.circular(4), bottomLeft: Radius.circular(4)),
                                                      color: Color(0xff007838),
                                                    ),
                                                    child: Center(
                                                      child: Text(
                                                        "12",
                                                        style: TextStyle(
                                                            color: const Color(0xffffffff),
                                                            fontWeight: FontWeight.w600,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                      ),
                                                    ),
                                                  )),
                                                  Expanded(
                                                      child: Container(
                                                    color: const Color(0xffFF9500),
                                                    child: Center(
                                                      child: Text(
                                                        "12",
                                                        style: TextStyle(
                                                            color: const Color(0xffffffff),
                                                            fontWeight: FontWeight.w600,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                      ),
                                                    ),
                                                  )),
                                                  Expanded(
                                                      child: Container(
                                                    decoration: const BoxDecoration(
                                                      borderRadius: BorderRadius.only(topRight: Radius.circular(4), bottomRight: Radius.circular(4)),
                                                      color: Color(0xffF92C38),
                                                    ),
                                                    child: Center(
                                                      child: Text(
                                                        "12",
                                                        style: TextStyle(
                                                            color: const Color(0xffffffff),
                                                            fontWeight: FontWeight.w600,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                      ),
                                                    ),
                                                  )),
                                                ],
                                              ),
                                            ),
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
                                ],
                              ),
                            ),
                          ),
                        ),
                      );
                    }
                    else {
                      return SizedBox(
                        height: getIt<Functions>().getWidgetHeight(height: 235),
                        child: AppBar(
                          backgroundColor: const Color(0xff1D2736),
                          leading: IconButton(
                            onPressed: () {
                              getIt<Variables>().generalVariables.indexName = getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList[getIt<Variables>().generalVariables.pickListRouteList.length - 1];
                              context.read<NavigationBloc>().add(const NavigationInitialEvent());
                              getIt<Variables>()
                                  .generalVariables
                                  .pickListRouteList
                                  .removeAt(getIt<Variables>().generalVariables.pickListRouteList.length - 1);
                            },
                            icon: const Icon(
                              Icons.arrow_back,
                              color: Color(0xffffffff),
                            ),
                          ),
                          titleSpacing: 0,
                          title: AnimatedCrossFade(
                            firstChild: Row(
                              mainAxisAlignment: MainAxisAlignment.start,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                Expanded(
                                  child: Column(
                                    mainAxisAlignment: MainAxisAlignment.start,
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    children: [
                                      Text(
                                        "${getIt<Variables>().generalVariables.currentLanguage.picklist} #:${context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistNum}",
                                        overflow: TextOverflow.ellipsis,
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 21),
                                            color: const Color(0xffffffff)),
                                      ),
                                      Align(
                                        alignment: Alignment.centerLeft,
                                        child: Text(
                                          "${getIt<Variables>().generalVariables.currentLanguage.picklistName} : ${context.read<PickListDetailsBloc>().pickListDetailsResponse.route}",
                                          overflow: TextOverflow.ellipsis,
                                          style: TextStyle(
                                              fontWeight: FontWeight.w600,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                              color: const Color(0xffffffff)),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ],
                            ),
                            secondChild: textBars(controller: searchBar),
                            crossFadeState:
                                context.read<PickListDetailsBloc>().searchBarEnabled ? CrossFadeState.showSecond : CrossFadeState.showFirst,
                            duration: const Duration(milliseconds: 100),
                          ),
                          actions: [
                            InkWell(
                              splashColor: Colors.transparent,
                              focusColor: Colors.transparent,
                              highlightColor: Colors.transparent,
                              onTap: state is PickListDetailsLoading
                                  ? () {}
                                  : () {
                                      context.read<PickListDetailsBloc>().searchBarEnabled = !context.read<PickListDetailsBloc>().searchBarEnabled;
                                      setState(() {});
                                    },
                              child: Container(
                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                width: getIt<Functions>().getWidgetWidth(width: 36),
                                margin: EdgeInsets.only(
                                  right: getIt<Functions>().getWidgetWidth(width: 8),
                                ),
                                decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFE0E6EE).withOpacity(0.2)),
                                child: Center(
                                  child: SvgPicture.asset(
                                    "assets/pick_list/pick_list_search.svg",
                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                    width: getIt<Functions>().getWidgetWidth(width: 16),
                                    fit: BoxFit.fill,
                                  ),
                                ),
                              ),
                            ),
                            const SizedBox(width: 6),
                            InkWell(
                              onTap: state is PickListDetailsLoading
                                  ? () {}
                                  : () {
                                      Scaffold.of(context).openEndDrawer();
                                    },
                              child: Badge(
                                backgroundColor: const Color(0xff007AFF),
                                smallSize: getIt<Variables>().generalVariables.selectedFilters.isEmpty ? 0 : 8,
                                child: Container(
                                  height: getIt<Functions>().getWidgetHeight(height: 36),
                                  width: getIt<Functions>().getWidgetWidth(width: 36),
                                  margin: EdgeInsets.only(
                                    right: getIt<Functions>().getWidgetWidth(width: 8),
                                  ),
                                  decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFE0E6EE).withOpacity(0.2)),
                                  child: Center(
                                    child: SvgPicture.asset(
                                      "assets/pick_list/pick_list_filter.svg",
                                      height: getIt<Functions>().getWidgetHeight(height: 16),
                                      width: getIt<Functions>().getWidgetWidth(width: 16),
                                      fit: BoxFit.fill,
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            const SizedBox(width: 12)
                          ],
                          bottom: PreferredSize(
                            preferredSize: Size(
                                getIt<Functions>().getWidgetWidth(
                                    width: Orientation.portrait == MediaQuery.of(context).orientation
                                        ? getIt<Variables>().generalVariables.width
                                        : getIt<Variables>().generalVariables.height),
                                getIt<Functions>().getWidgetHeight(height: 140)),
                            child: Padding(
                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                mainAxisSize: MainAxisSize.min,
                                children: [
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                  SizedBox(
                                    height: getIt<Functions>().getWidgetHeight(height: 39),
                                    child: ListView(
                                      scrollDirection: Axis.horizontal,
                                      shrinkWrap: true,
                                      children: [
                                        Center(
                                          child: InkWell(
                                            onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                                ? () {}
                                                : () {
                                                    getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                    Scaffold.of(context).openEndDrawer();
                                                  },
                                            child: SvgPicture.asset(
                                              "assets/pick_list/status_image.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 20),
                                              width: getIt<Functions>().getWidgetWidth(width: 20),
                                              fit: BoxFit.fill,
                                            ),
                                          ),
                                        ),
                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                        InkWell(
                                          onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                              ? () {}
                                              : () {
                                                  getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                  Scaffold.of(context).openEndDrawer();
                                                },
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                getIt<Variables>().generalVariables.currentLanguage.status.toUpperCase(),
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w400,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    color: const Color(0xffffffff)),
                                              ),
                                              Text(
                                                context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistStatus,
                                                style: TextStyle(
                                                    fontWeight: FontWeight.w700,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                    color: const Color(0xffF8B11D)),
                                              ),
                                            ],
                                          ),
                                        ),
                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                        Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.dateAndTime.toUpperCase(),
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w400,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  color: const Color(0xffffffff)),
                                            ),
                                            Text(
                                              context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistTime,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w700,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                  color: const Color(0xff30D158)),
                                            ),
                                          ],
                                        ),
                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                        Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.totalItems.toUpperCase(),
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w400,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  color: const Color(0xffffffff)),
                                            ),
                                            Text(
                                              "${context.read<PickListDetailsBloc>().pickListDetailsResponse.pickedItems}/${context.read<PickListDetailsBloc>().pickListDetailsResponse.totalItems}",
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w700,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                  color: const Color(0xff30D158)),
                                            ),
                                          ],
                                        ),
                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                        Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.handled.toUpperCase(),
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w400,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  color: const Color(0xffffffff)),
                                            ),
                                            context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy.isNotEmpty
                                                ? Column(
                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                    children: [
                                                        InkWell(
                                                          onTap: () {
                                                            getIt<Variables>().generalVariables.popUpWidget = usersDetailsContent(
                                                                handled: context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy);
                                                            getIt<Functions>()
                                                                .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                          },
                                                          child: SizedBox(
                                                            width: getIt<Functions>().getWidgetWidth(width: 55),
                                                            child: Stack(
                                                                children: List<Widget>.generate(
                                                                    context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy.length >= 3
                                                                        ? 3
                                                                        : context
                                                                            .read<PickListDetailsBloc>()
                                                                            .pickListDetailsResponse
                                                                            .handledBy
                                                                            .length,
                                                                    (i) => i == 0
                                                                        ? CircleAvatar(
                                                                            radius: 10,
                                                                            backgroundImage: NetworkImage(
                                                                              context
                                                                                  .read<PickListDetailsBloc>()
                                                                                  .pickListDetailsResponse
                                                                                  .handledBy[i]
                                                                                  .image,
                                                                            ),
                                                                          )
                                                                        : Positioned(
                                                                            left: i * 15,
                                                                            child: Stack(
                                                                              children: [
                                                                                CircleAvatar(
                                                                                  radius: 10,
                                                                                  backgroundImage: NetworkImage(
                                                                                    context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .pickListDetailsResponse
                                                                                        .handledBy[i]
                                                                                        .image,
                                                                                  ),
                                                                                ),
                                                                                context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .pickListDetailsResponse
                                                                                            .handledBy
                                                                                            .length >
                                                                                        3
                                                                                    ? CircleAvatar(
                                                                                        radius: 10,
                                                                                        backgroundColor: Colors.black26.withOpacity(0.6),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                              "+${context.read<PickListDetailsBloc>().pickListDetailsResponse.handledBy.length - 2}",
                                                                                              style: const TextStyle(
                                                                                                color: Colors.white,
                                                                                                fontSize: 12,
                                                                                                fontWeight: FontWeight.bold,
                                                                                              )),
                                                                                        ),
                                                                                      )
                                                                                    : const SizedBox(),
                                                                              ],
                                                                            ),
                                                                          ))),
                                                          ),
                                                        )
                                                      ])
                                                : Row(
                                                    children: [
                                                      Text("-",
                                                          style: TextStyle(
                                                              color: const Color(0xffffffff),
                                                              fontWeight: FontWeight.w500,
                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                              fontFamily: "Figtree")),
                                                    ],
                                                  )
                                          ],
                                        ),
                                      ],
                                    ),
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
                                  Container(
                                    height: getIt<Functions>().getWidgetHeight(height: 50),
                                    padding: EdgeInsets.symmetric(
                                        horizontal: getIt<Functions>().getWidgetWidth(
                                            width: context.read<PickListDetailsBloc>().pickListDetailsResponse.isReadyToMoveComplete ? 2 : 5),
                                        vertical: getIt<Functions>().getWidgetHeight(height: 2)),
                                    decoration: BoxDecoration(color: const Color(0xffFFFFFF), borderRadius: BorderRadius.circular(4)),
                                    child: context.read<PickListDetailsBloc>().pickListDetailsResponse.isReadyToMoveComplete
                                        ? InkWell(
                                            onTap: () {
                                              completedReasonSearchFieldController.clear();
                                              context.read<PickListDetailsBloc>().selectedCompletedReasonName = null;
                                              context.read<PickListDetailsBloc>().selectedCompletedReason = "";
                                              commentsBar.clear();
                                              getIt<Variables>().generalVariables.popUpWidget = completedContent();
                                              getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                            },
                                            child: Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 48),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 8)),
                                              decoration: BoxDecoration(color: Colors.blue, borderRadius: BorderRadius.circular(4)),
                                              child: Center(
                                                child: AutoSizeText(
                                                  getIt<Variables>().generalVariables.currentLanguage.moveComplete,
                                                  textAlign: TextAlign.center,
                                                  style: const TextStyle(
                                                    color: Color(0xffffffff),
                                                    fontWeight: FontWeight.w600,
                                                  ),
                                                ),
                                              ),
                                            ),
                                          )
                                        : Row(
                                            children: [
                                              Expanded(
                                                child: Column(
                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    FittedBox(
                                                      child: Text(
                                                        getIt<Variables>().generalVariables.currentLanguage.timeSpent,
                                                        style: TextStyle(
                                                            fontWeight: FontWeight.w500,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            color: const Color(0xff1D2736)),
                                                      ),
                                                    ),
                                                    Text(
                                                      timerString,
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w600,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff007aff)),
                                                    ),
                                                  ],
                                                ),
                                              ),
                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                              Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 45),
                                                width: getIt<Functions>().getWidgetWidth(width: 105),
                                                decoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Expanded(
                                                        child: Container(
                                                      decoration: const BoxDecoration(
                                                        borderRadius: BorderRadius.only(topLeft: Radius.circular(4), bottomLeft: Radius.circular(4)),
                                                        color: Color(0xff007838),
                                                      ),
                                                      child: Center(
                                                        child: Text(
                                                          context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.picked.toString(),
                                                          style: TextStyle(
                                                              color: const Color(0xffffffff),
                                                              fontWeight: FontWeight.w600,
                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                        ),
                                                      ),
                                                    )),
                                                    Expanded(
                                                        child: Container(
                                                      color: const Color(0xffFF9500),
                                                      child: Center(
                                                        child: Text(
                                                          context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.partial.toString(),
                                                          style: TextStyle(
                                                              color: const Color(0xffffffff),
                                                              fontWeight: FontWeight.w600,
                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                        ),
                                                      ),
                                                    )),
                                                    Expanded(
                                                        child: Container(
                                                      decoration: const BoxDecoration(
                                                        borderRadius:
                                                            BorderRadius.only(topRight: Radius.circular(4), bottomRight: Radius.circular(4)),
                                                        color: Color(0xffF92C38),
                                                      ),
                                                      child: Center(
                                                        child: Text(
                                                          context
                                                              .read<PickListDetailsBloc>()
                                                              .pickListDetailsResponse
                                                              .sessionInfo
                                                              .unavailable
                                                              .toString(),
                                                          style: TextStyle(
                                                              color: const Color(0xffffffff),
                                                              fontWeight: FontWeight.w600,
                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                        ),
                                                      ),
                                                    )),
                                                  ],
                                                ),
                                              ),
                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                              context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.isOpened
                                                  ? Expanded(
                                                      child: InkWell(
                                                        onTap: () {
                                                          getIt<Variables>().generalVariables.popUpWidget = closeSessionContent(contextNew: context);
                                                          getIt<Functions>()
                                                              .showAnimatedDialog(context: context, isFromTop: true, isCloseDisabled: false);
                                                        },
                                                        child: Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 48),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 8)),
                                                          decoration: BoxDecoration(color: Colors.blue, borderRadius: BorderRadius.circular(4)),
                                                          child: Center(
                                                            child: AutoSizeText(
                                                              getIt<Variables>().generalVariables.currentLanguage.closeSession,
                                                              textAlign: TextAlign.center,
                                                              style: const TextStyle(
                                                                color: Color(0xffffffff),
                                                                fontWeight: FontWeight.w600,
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    )
                                                  : Expanded(
                                                      child: SizedBox(
                                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                                        child: AutoSizeText(
                                                          getIt<Variables>().generalVariables.currentLanguage.sessionNotStarted.toUpperCase(),
                                                          textAlign: TextAlign.center,
                                                          style: TextStyle(
                                                              fontWeight: FontWeight.w500,
                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                              color: const Color(0xff1D2736)),
                                                        ),
                                                      ),
                                                    ),
                                            ],
                                          ),
                                  ),
                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
                                ],
                              ),
                            ),
                          ),
                        ),
                      );
                    }
                  },
                ),
                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                BlocBuilder<PickListDetailsBloc, PickListDetailsState>(
                  builder: (BuildContext context, PickListDetailsState state) {
                    if (state is PickListDetailsLoading) {
                      return Skeletonizer(
                        enabled: true,
                        ignoreContainers: true,
                        child: Container(
                          height: getIt<Functions>().getWidgetHeight(height: 50),
                          margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                          decoration: const BoxDecoration(color: Colors.white),
                          child: TabBar(
                            indicatorWeight: 0,
                            controller: tabController,
                            indicator: BoxDecoration(borderRadius: BorderRadius.circular(8.0), color: const Color(0xff007AFF)),
                            labelStyle:
                                TextStyle(color: Colors.white, fontSize: getIt<Functions>().getTextSize(fontSize: 11), fontWeight: FontWeight.w600),
                            unselectedLabelStyle: TextStyle(
                                color: const Color(0xff6F6F6F), fontSize: getIt<Functions>().getTextSize(fontSize: 11), fontWeight: FontWeight.w600),
                            splashBorderRadius: BorderRadius.circular(8),
                            padding: EdgeInsets.symmetric(
                                vertical: getIt<Functions>().getWidgetHeight(height: 3), horizontal: getIt<Functions>().getWidgetWidth(width: 3)),
                            indicatorSize: TabBarIndicatorSize.tab,
                            dividerColor: Colors.transparent,
                            dividerHeight: 0.0,
                            isScrollable: true,
                            tabAlignment: TabAlignment.start,
                            tabs: [
                              Tab(
                                child: Padding(
                                  padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(getIt<Variables>().generalVariables.currentLanguage.yetToUpdate.toUpperCase()),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                      context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick == 0
                                          ? const SizedBox()
                                          : Container(
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                              decoration: BoxDecoration(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 0 ? Colors.white : const Color(0xff007AFF),
                                                  borderRadius: BorderRadius.circular(20)),
                                              child: Text(
                                                context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick < 10
                                                    ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick}"
                                                    : context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick.toString(),
                                                style: TextStyle(
                                                    color: context.read<PickListDetailsBloc>().tabIndex == 0 ? const Color(0xff282F3A) : Colors.white,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    fontWeight: FontWeight.w700),
                                              ),
                                            )
                                    ],
                                  ),
                                ),
                              ),
                              Tab(
                                child: Padding(
                                  padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase()),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                      context.read<PickListDetailsBloc>().pickListDetailsResponse.picked == 0
                                          ? const SizedBox()
                                          : Container(
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                              decoration: BoxDecoration(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 1 ? Colors.white : const Color(0xff007AFF),
                                                  borderRadius: BorderRadius.circular(20)),
                                              child: Text(
                                                context.read<PickListDetailsBloc>().pickListDetailsResponse.picked < 10
                                                    ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.picked}"
                                                    : context.read<PickListDetailsBloc>().pickListDetailsResponse.picked.toString(),
                                                style: TextStyle(
                                                    color: context.read<PickListDetailsBloc>().tabIndex == 1 ? const Color(0xff282F3A) : Colors.white,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    fontWeight: FontWeight.w700),
                                              ),
                                            )
                                    ],
                                  ),
                                ),
                              ),
                              Tab(
                                child: Padding(
                                  padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                      context.read<PickListDetailsBloc>().pickListDetailsResponse.partial == 0
                                          ? const SizedBox()
                                          : Container(
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                              decoration: BoxDecoration(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 2 ? Colors.white : const Color(0xff007AFF),
                                                  borderRadius: BorderRadius.circular(20)),
                                              child: Text(
                                                context.read<PickListDetailsBloc>().pickListDetailsResponse.partial < 10
                                                    ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.partial}"
                                                    : context.read<PickListDetailsBloc>().pickListDetailsResponse.partial.toString(),
                                                style: TextStyle(
                                                    color: context.read<PickListDetailsBloc>().tabIndex == 2 ? const Color(0xff282F3A) : Colors.white,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    fontWeight: FontWeight.w700),
                                              ),
                                            )
                                    ],
                                  ),
                                ),
                              ),
                              Tab(
                                child: Padding(
                                  padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase()),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                      context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable == 0
                                          ? const SizedBox()
                                          : Container(
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                              decoration: BoxDecoration(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 3 ? Colors.white : const Color(0xff007AFF),
                                                  borderRadius: BorderRadius.circular(20)),
                                              child: Text(
                                                context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable < 10
                                                    ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable}"
                                                    : context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable.toString(),
                                                style: TextStyle(
                                                    color: context.read<PickListDetailsBloc>().tabIndex == 3 ? const Color(0xff282F3A) : Colors.white,
                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                    fontWeight: FontWeight.w700),
                                              ),
                                            )
                                    ],
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    } else {
                      return Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                        padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                        decoration: const BoxDecoration(color: Colors.white),
                        child: TabBar(
                          indicatorWeight: 0,
                          controller: tabController,
                          indicator: BoxDecoration(borderRadius: BorderRadius.circular(8.0), color: const Color(0xff007AFF)),
                          labelStyle:
                              TextStyle(color: Colors.white, fontSize: getIt<Functions>().getTextSize(fontSize: 11), fontWeight: FontWeight.w600),
                          unselectedLabelStyle: TextStyle(
                              color: const Color(0xff6F6F6F), fontSize: getIt<Functions>().getTextSize(fontSize: 11), fontWeight: FontWeight.w600),
                          splashBorderRadius: BorderRadius.circular(8),
                          padding: EdgeInsets.symmetric(
                              vertical: getIt<Functions>().getWidgetHeight(height: 3), horizontal: getIt<Functions>().getWidgetWidth(width: 3)),
                          indicatorSize: TabBarIndicatorSize.tab,
                          dividerColor: Colors.transparent,
                          dividerHeight: 0.0,
                          isScrollable: true,
                          tabAlignment: TabAlignment.start,
                          tabs: [
                            Tab(
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.yetToUpdate.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick == 0
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 0 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick < 10
                                                  ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick}"
                                                  : context.read<PickListDetailsBloc>().pickListDetailsResponse.yetToPick.toString(),
                                              style: TextStyle(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 0 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                            Tab(
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context.read<PickListDetailsBloc>().pickListDetailsResponse.picked == 0
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 1 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context.read<PickListDetailsBloc>().pickListDetailsResponse.picked < 10
                                                  ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.picked}"
                                                  : context.read<PickListDetailsBloc>().pickListDetailsResponse.picked.toString(),
                                              style: TextStyle(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 1 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                            Tab(
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context.read<PickListDetailsBloc>().pickListDetailsResponse.partial == 0
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 2 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context.read<PickListDetailsBloc>().pickListDetailsResponse.partial < 10
                                                  ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.partial}"
                                                  : context.read<PickListDetailsBloc>().pickListDetailsResponse.partial.toString(),
                                              style: TextStyle(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 2 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                            Tab(
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable == 0
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<PickListDetailsBloc>().tabIndex == 3 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable < 10
                                                  ? "0${context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable}"
                                                  : context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailable.toString(),
                                              style: TextStyle(
                                                  color: context.read<PickListDetailsBloc>().tabIndex == 3 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ],
                        ),
                      );
                    }
                  },
                ),
                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 6)),
                Expanded(
                  child: BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
                    listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
                      return previous != current;
                    },
                    buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
                      return previous != current;
                    },
                    listener: (BuildContext context, PickListDetailsState state) {
                      if (state is PickListDetailsError) {
                        ScaffoldMessenger.of(context).clearSnackBars();
                        getIt<Widgets>().flushBarWidget(context: context, message: state.message);
                      }
                    },
                    builder: (BuildContext context, PickListDetailsState state) {
                      if (state is PickListDetailsLoaded) {
                        switch (context.read<PickListDetailsBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const ScrollPhysics(),
                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(
                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                          child: IntrinsicHeight(
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                  context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                  getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                      selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                                      index: index,
                                                                      idx: idx,
                                                                      fromWhere: "yet_to_pick",
                                                                      isPicking: false);
                                                                  getIt<Functions>()
                                                                      .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                                },
                                                                child: Container(
                                                                  padding: EdgeInsets.only(
                                                                      left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                      right: getIt<Functions>().getWidgetWidth(width: 12),
                                                                      top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                  color: Colors.white,
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          Container(
                                                                              height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                              width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                              decoration: BoxDecoration(
                                                                                shape: BoxShape.circle,
                                                                                color: Color(int.parse(context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .typeColor)),
                                                                              ),
                                                                              child: Center(
                                                                                child: Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemType,
                                                                                  style: TextStyle(
                                                                                      color: const Color(0xffffffff),
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                      fontWeight: FontWeight.w700),
                                                                                ),
                                                                              )),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                          ),
                                                                          Expanded(
                                                                            child: SingleChildScrollView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: Text(
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .itemName,
                                                                                maxLines: 1,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                    color: const Color(0xff282F3A),
                                                                                    overflow: TextOverflow.ellipsis),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 14),
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                        child: Row(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                          children: [
                                                                            Expanded(
                                                                              child: SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            SizedBox(
                                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                            ),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.end,
                                                                              children: [
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .quantity,
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: const Color(0xff007AFF)),
                                                                                ),
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .qtyToPick
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                      context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                          ? const SizedBox()
                                                                          : const Divider(color: Color(0xffE0E7EC))
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            })
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /* return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  yetToPickRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: yetToPickRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                              textAlign: TextAlign.center,
                                            ),
                                            const SizedBox(height: 150)
                                          ],
                                        ),
                                      )
                                    : ListView.builder(
                                        padding: EdgeInsets.zero,
                                        physics: const ScrollPhysics(),
                                        itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                        shrinkWrap: true,
                                        itemBuilder: (BuildContext context, int index) {
                                          return Container(
                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                            margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 40),
                                                  decoration: const BoxDecoration(
                                                    color: Color(0xffE3E7EA),
                                                    borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                  ),
                                                  padding: EdgeInsets.symmetric(
                                                      horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                      vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                  child: IntrinsicHeight(
                                                    child: Row(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                      children: [
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                        const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                        const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                                ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    shrinkWrap: true,
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                    itemBuilder: (BuildContext context, int idx) {
                                                      return InkWell(
                                                        onTap: () {
                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                              selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                              index: index,
                                                              idx: idx,
                                                              fromWhere: "yet_to_pick",
                                                              isPicking: false);
                                                          getIt<Functions>()
                                                              .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                        },
                                                        child: Container(
                                                          padding: EdgeInsets.only(
                                                              left: getIt<Functions>().getWidgetWidth(width: 12),
                                                              right: getIt<Functions>().getWidgetWidth(width: 12),
                                                              top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                          color: Colors.white,
                                                          child: Column(
                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                            children: [
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Color(int.parse(context
                                                                            .read<PickListDetailsBloc>()
                                                                            .groupedPickedData[index][idx]
                                                                            .typeColor)),
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          context.read<PickListDetailsBloc>().groupedPickedData[index][idx].itemType,
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                  SizedBox(
                                                                    width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                  ),
                                                                  Expanded(
                                                                    child: SingleChildScrollView(
                                                                      scrollDirection: Axis.horizontal,
                                                                      child: Text(
                                                                        context.read<PickListDetailsBloc>().groupedPickedData[index][idx].itemName,
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 14),
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                child: Row(
                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                  children: [
                                                                    Expanded(
                                                                      child: SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                        child: ListView(
                                                                          scrollDirection: Axis.horizontal,
                                                                          physics: const BouncingScrollPhysics(),
                                                                          shrinkWrap: true,
                                                                          padding: EdgeInsets.zero,
                                                                          children: [
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .itemCode
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemCode,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  "UOM",
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .uom,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .packageTerms
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .packageTerms,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                      width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                    ),
                                                                    Column(
                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                      children: [
                                                                        Text(
                                                                          context.read<PickListDetailsBloc>().groupedPickedData[index][idx].quantity,
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                              fontWeight: FontWeight.w600,
                                                                              color: const Color(0xff007AFF)),
                                                                        ),
                                                                        Text(
                                                                          getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                              fontWeight: FontWeight.w500,
                                                                              color: const Color(0xff282F3A)),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                              context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                  ? const SizedBox()
                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    })
                                              ],
                                            ),
                                          );
                                        }),
                              ),
                            );*/
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickingData.isEmpty &&
                                      context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedScrollController,
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: RichText(
                                                                            text: TextSpan(
                                                                              text:
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff282F3A),
                                                                                  fontWeight: FontWeight.w600),
                                                                              children: [
                                                                                TextSpan(
                                                                                    text: context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedKeepersNameList[index]
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .userData
                                                                                                    .userProfile
                                                                                                    .userName
                                                                                                    .toLowerCase() ==
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedKeepersNameList[index]
                                                                                                    .toLowerCase()
                                                                                            ? const Color(0xff007838)
                                                                                            : Colors.grey,
                                                                                        fontWeight: FontWeight.w600)),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: Row(
                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              SvgPicture.asset(
                                                                                "assets/pick_list/progress_live.svg",
                                                                                height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                                width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                                fit: BoxFit.fill,
                                                                                colorFilter: ColorFilter.mode(
                                                                                    getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.black54,
                                                                                    BlendMode.srcIn),
                                                                              ),
                                                                              SizedBox(
                                                                                width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                              ),
                                                                              Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .pickingInProgress
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .userData
                                                                                                  .userProfile
                                                                                                  .userName
                                                                                                  .toLowerCase() ==
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedKeepersNameList[index]
                                                                                                  .toLowerCase()
                                                                                          ? const Color(0xff007838)
                                                                                          : Colors.grey)),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "picked",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                        decoration: BoxDecoration(
                                                                                          shape: BoxShape.circle,
                                                                                          color: Color(int.parse(context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .typeColor)),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickingData[index][idx]
                                                                                                .itemType,
                                                                                            style: TextStyle(
                                                                                                color: const Color(0xffffffff),
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                fontWeight: FontWeight.w700),
                                                                                          ),
                                                                                        )),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    Expanded(
                                                                                      child: Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: IntrinsicHeight(
                                                                                              child: Row(
                                                                                                children: [
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text:
                                                                                                              "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.singleWhere((element) => element.name == context.read<PickListDetailsBloc>().groupedKeepersNameList[index]).pickedItems}/",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007838),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .quantity,
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                  const VerticalDivider(color: Color(0xff8A8D8E)),
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedKeepersNameList[index],
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Container(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .floor
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .floor,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff007838),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "picked",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.symmetric(
                                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .typeColor)),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        SingleChildScrollView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .itemName,
                                                                                            maxLines: 1,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff282F3A),
                                                                                                overflow: TextOverflow.ellipsis),
                                                                                          ),
                                                                                        ),
                                                                                        SizedBox(
                                                                                            height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                        IntrinsicHeight(
                                                                                          child: Row(
                                                                                            children: [
                                                                                              RichText(
                                                                                                  text: TextSpan(
                                                                                                text:
                                                                                                    "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree"),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text: context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .pickedQty,
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree")),
                                                                                                ],
                                                                                              )),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? const VerticalDivider(color: Color(0xff8A8D8E))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? RichText(
                                                                                                      text: TextSpan(
                                                                                                      text:
                                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree"),
                                                                                                      children: [
                                                                                                        TextSpan(
                                                                                                            text: context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .handledBy[0]
                                                                                                                .name,
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                color: const Color(0xff007AFF),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                fontFamily: "Figtree")),
                                                                                                      ],
                                                                                                    ))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? SizedBox(
                                                                                                      width:
                                                                                                          getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .handledBy
                                                                                                          .length >
                                                                                                      1
                                                                                                  ? InkWell(
                                                                                                      onTap: () {
                                                                                                        getIt<Variables>()
                                                                                                                .generalVariables
                                                                                                                .popUpWidget =
                                                                                                            pickedUsersDetailsContent(
                                                                                                                selectedItem: context
                                                                                                                    .read<PickListDetailsBloc>()
                                                                                                                    .groupedPickedData[index][idx]);
                                                                                                        getIt<Functions>().showAnimatedDialog(
                                                                                                            context: context,
                                                                                                            isFromTop: false,
                                                                                                            isCloseDisabled: false);
                                                                                                      },
                                                                                                      child: Container(
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6)),
                                                                                                        decoration: BoxDecoration(
                                                                                                            color: const Color(0xff007AFF),
                                                                                                            borderRadius: BorderRadius.circular(8)),
                                                                                                        child: Text(
                                                                                                          "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w700,
                                                                                                              color: const Color(0xffFFFFFF),
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 10)),
                                                                                                        ),
                                                                                                      ),
                                                                                                    )
                                                                                                  : const SizedBox()
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  pickedRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: pickedRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty &&
                                        context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                              textAlign: TextAlign.center,
                                            ),
                                            const SizedBox(height: 150)
                                          ],
                                        ),
                                      )
                                    : SingleChildScrollView(
                                        child: Column(
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: RichText(
                                                                            text: TextSpan(
                                                                              text:
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff282F3A),
                                                                                  fontWeight: FontWeight.w600),
                                                                              children: [
                                                                                TextSpan(
                                                                                    text: context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedKeepersNameList[index]
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .userData
                                                                                                    .userProfile
                                                                                                    .userName
                                                                                                    .toLowerCase() ==
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedKeepersNameList[index]
                                                                                                    .toLowerCase()
                                                                                            ? const Color(0xff007838)
                                                                                            : Colors.grey,
                                                                                        fontWeight: FontWeight.w600)),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: Row(
                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              SvgPicture.asset(
                                                                                "assets/pick_list/progress_live.svg",
                                                                                height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                                width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                                fit: BoxFit.fill,
                                                                                colorFilter: ColorFilter.mode(
                                                                                    getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.black54,
                                                                                    BlendMode.srcIn),
                                                                              ),
                                                                              SizedBox(
                                                                                width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                              ),
                                                                              Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .pickingInProgress
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .userData
                                                                                                  .userProfile
                                                                                                  .userName
                                                                                                  .toLowerCase() ==
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedKeepersNameList[index]
                                                                                                  .toLowerCase()
                                                                                          ? const Color(0xff007838)
                                                                                          : Colors.grey)),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "picked",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                        decoration: BoxDecoration(
                                                                                          shape: BoxShape.circle,
                                                                                          color: Color(int.parse(context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .typeColor)),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickingData[index][idx]
                                                                                                .itemType,
                                                                                            style: TextStyle(
                                                                                                color: const Color(0xffffffff),
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                fontWeight: FontWeight.w700),
                                                                                          ),
                                                                                        )),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    Expanded(
                                                                                      child: Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: IntrinsicHeight(
                                                                                              child: Row(
                                                                                                children: [
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text:
                                                                                                              "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.singleWhere((element) => element.name == context.read<PickListDetailsBloc>().groupedKeepersNameList[index]).pickedItems}/",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007838),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .quantity,
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                  const VerticalDivider(color: Color(0xff8A8D8E)),
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedKeepersNameList[index],
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Container(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .floor
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .floor,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff007838),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "picked",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.symmetric(
                                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .typeColor)),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        SingleChildScrollView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .itemName,
                                                                                            maxLines: 1,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff282F3A),
                                                                                                overflow: TextOverflow.ellipsis),
                                                                                          ),
                                                                                        ),
                                                                                        SizedBox(
                                                                                            height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                        IntrinsicHeight(
                                                                                          child: Row(
                                                                                            children: [
                                                                                              RichText(
                                                                                                  text: TextSpan(
                                                                                                text:
                                                                                                    "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree"),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text: context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .pickedQty,
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree")),
                                                                                                ],
                                                                                              )),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? const VerticalDivider(color: Color(0xff8A8D8E))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? RichText(
                                                                                                      text: TextSpan(
                                                                                                      text:
                                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree"),
                                                                                                      children: [
                                                                                                        TextSpan(
                                                                                                            text: context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .handledBy[0]
                                                                                                                .name,
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                color: const Color(0xff007AFF),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                fontFamily: "Figtree")),
                                                                                                      ],
                                                                                                    ))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? SizedBox(
                                                                                                      width:
                                                                                                          getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .handledBy
                                                                                                          .length >
                                                                                                      1
                                                                                                  ? InkWell(
                                                                                                      onTap: () {
                                                                                                        getIt<Variables>()
                                                                                                                .generalVariables
                                                                                                                .popUpWidget =
                                                                                                            pickedUsersDetailsContent(
                                                                                                                selectedItem: context
                                                                                                                    .read<PickListDetailsBloc>()
                                                                                                                    .groupedPickedData[index][idx]);
                                                                                                        getIt<Functions>().showAnimatedDialog(
                                                                                                            context: context,
                                                                                                            isFromTop: false,
                                                                                                            isCloseDisabled: false);
                                                                                                      },
                                                                                                      child: Container(
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6)),
                                                                                                        decoration: BoxDecoration(
                                                                                                            color: const Color(0xff007AFF),
                                                                                                            borderRadius: BorderRadius.circular(8)),
                                                                                                        child: Text(
                                                                                                          "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w700,
                                                                                                              color: const Color(0xffFFFFFF),
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 10)),
                                                                                                        ),
                                                                                                      ),
                                                                                                    )
                                                                                                  : const SizedBox()
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ),
                              ),
                            );*/
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickingData.isEmpty &&
                                      context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: RichText(
                                                                            text: TextSpan(
                                                                              text:
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff282F3A),
                                                                                  fontWeight: FontWeight.w600),
                                                                              children: [
                                                                                TextSpan(
                                                                                    text: context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedKeepersNameList[index]
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .userData
                                                                                                    .userProfile
                                                                                                    .userName
                                                                                                    .toLowerCase() ==
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedKeepersNameList[index]
                                                                                                    .toLowerCase()
                                                                                            ? const Color(0xff007838)
                                                                                            : Colors.grey,
                                                                                        fontWeight: FontWeight.w600)),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: Row(
                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              SvgPicture.asset(
                                                                                "assets/pick_list/progress_live.svg",
                                                                                height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                                width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                                fit: BoxFit.fill,
                                                                                colorFilter: ColorFilter.mode(
                                                                                    getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.black54,
                                                                                    BlendMode.srcIn),
                                                                              ),
                                                                              SizedBox(
                                                                                width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                              ),
                                                                              Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .pickingInProgress
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .userData
                                                                                                  .userProfile
                                                                                                  .userName
                                                                                                  .toLowerCase() ==
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedKeepersNameList[index]
                                                                                                  .toLowerCase()
                                                                                          ? const Color(0xff007838)
                                                                                          : Colors.grey)),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "partial",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                        decoration: BoxDecoration(
                                                                                          shape: BoxShape.circle,
                                                                                          color: Color(int.parse(context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .typeColor)),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickingData[index][idx]
                                                                                                .itemType,
                                                                                            style: TextStyle(
                                                                                                color: const Color(0xffffffff),
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                fontWeight: FontWeight.w700),
                                                                                          ),
                                                                                        )),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    Expanded(
                                                                                      child: Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: IntrinsicHeight(
                                                                                              child: Row(
                                                                                                children: [
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text:
                                                                                                              "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.singleWhere((element) => element.name == context.read<PickListDetailsBloc>().groupedKeepersNameList[index]).pickedItems}/",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007838),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .quantity,
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                  const VerticalDivider(color: Color(0xff8A8D8E)),
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedKeepersNameList[index],
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Container(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .floor
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .floor,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff007838),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "partial",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.symmetric(
                                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .typeColor)),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        SingleChildScrollView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .itemName,
                                                                                            maxLines: 1,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff282F3A),
                                                                                                overflow: TextOverflow.ellipsis),
                                                                                          ),
                                                                                        ),
                                                                                        SizedBox(
                                                                                            height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                        IntrinsicHeight(
                                                                                          child: Row(
                                                                                            children: [
                                                                                              RichText(
                                                                                                  text: TextSpan(
                                                                                                text:
                                                                                                    "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree"),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text:
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].pickedQty}/",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree")),
                                                                                                  TextSpan(
                                                                                                      text: context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .quantity,
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff007AFF),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree")),
                                                                                                ],
                                                                                              )),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? const VerticalDivider(color: Color(0xff8A8D8E))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? RichText(
                                                                                                      text: TextSpan(
                                                                                                      text:
                                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree"),
                                                                                                      children: [
                                                                                                        TextSpan(
                                                                                                            text: context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .handledBy[0]
                                                                                                                .name,
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                color: const Color(0xff007AFF),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                fontFamily: "Figtree")),
                                                                                                      ],
                                                                                                    ))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? SizedBox(
                                                                                                      width:
                                                                                                          getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .handledBy
                                                                                                          .length >
                                                                                                      1
                                                                                                  ? InkWell(
                                                                                                      onTap: () {
                                                                                                        getIt<Variables>()
                                                                                                                .generalVariables
                                                                                                                .popUpWidget =
                                                                                                            pickedUsersDetailsContent(
                                                                                                                selectedItem: context
                                                                                                                    .read<PickListDetailsBloc>()
                                                                                                                    .groupedPickedData[index][idx]);
                                                                                                        getIt<Functions>().showAnimatedDialog(
                                                                                                            context: context,
                                                                                                            isFromTop: false,
                                                                                                            isCloseDisabled: false);
                                                                                                      },
                                                                                                      child: Container(
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6)),
                                                                                                        decoration: BoxDecoration(
                                                                                                            color: const Color(0xff007AFF),
                                                                                                            borderRadius: BorderRadius.circular(8)),
                                                                                                        child: Text(
                                                                                                          "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w700,
                                                                                                              color: const Color(0xffFFFFFF),
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 10)),
                                                                                                        ),
                                                                                                      ),
                                                                                                    )
                                                                                                  : const SizedBox()
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 41),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  partialRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: partialRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty &&
                                        context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                              textAlign: TextAlign.center,
                                            ),
                                            const SizedBox(height: 150)
                                          ],
                                        ),
                                      )
                                    : SingleChildScrollView(
                                        child: Column(
                                          children: [
                                            context.read<PickListDetailsBloc>().groupedPickingData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<PickListDetailsBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: BoxDecoration(
                                                                    color: getIt<Variables>()
                                                                                .generalVariables
                                                                                .userData
                                                                                .userProfile
                                                                                .userName
                                                                                .toLowerCase() ==
                                                                            context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedKeepersNameList[index]
                                                                                .toLowerCase()
                                                                        ? const Color(0xffE8F4EB)
                                                                        : const Color(0xffE0E7EC),
                                                                    borderRadius: const BorderRadius.only(
                                                                        topLeft: Radius.circular(12), topRight: Radius.circular(12)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: RichText(
                                                                            text: TextSpan(
                                                                              text:
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()} : ",
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff282F3A),
                                                                                  fontWeight: FontWeight.w600),
                                                                              children: [
                                                                                TextSpan(
                                                                                    text: context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedKeepersNameList[index]
                                                                                        .toUpperCase(),
                                                                                    style: TextStyle(
                                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                        color: getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .userData
                                                                                                    .userProfile
                                                                                                    .userName
                                                                                                    .toLowerCase() ==
                                                                                                context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedKeepersNameList[index]
                                                                                                    .toLowerCase()
                                                                                            ? const Color(0xff007838)
                                                                                            : Colors.grey,
                                                                                        fontWeight: FontWeight.w600)),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Flexible(
                                                                        child: FittedBox(
                                                                          child: Row(
                                                                            mainAxisAlignment: MainAxisAlignment.end,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              SvgPicture.asset(
                                                                                "assets/pick_list/progress_live.svg",
                                                                                height: getIt<Functions>().getWidgetHeight(height: 15),
                                                                                width: getIt<Functions>().getWidgetWidth(width: 15),
                                                                                fit: BoxFit.fill,
                                                                                colorFilter: ColorFilter.mode(
                                                                                    getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .userData
                                                                                                .userProfile
                                                                                                .userName
                                                                                                .toLowerCase() ==
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedKeepersNameList[index]
                                                                                                .toLowerCase()
                                                                                        ? const Color(0xff007838)
                                                                                        : Colors.black54,
                                                                                    BlendMode.srcIn),
                                                                              ),
                                                                              SizedBox(
                                                                                width: getIt<Functions>().getWidgetWidth(width: 8),
                                                                              ),
                                                                              Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .pickingInProgress
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .userData
                                                                                                  .userProfile
                                                                                                  .userName
                                                                                                  .toLowerCase() ==
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedKeepersNameList[index]
                                                                                                  .toLowerCase()
                                                                                          ? const Color(0xff007838)
                                                                                          : Colors.grey)),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickingData[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                              selectedItem:
                                                                                  context.read<PickListDetailsBloc>().groupedPickingData[index][idx],
                                                                              index: index,
                                                                              idx: idx,
                                                                              fromWhere: "partial",
                                                                              isPicking: true);
                                                                          getIt<Functions>().showAnimatedDialog(
                                                                              context: context, isFromTop: false, isCloseDisabled: false);
                                                                        },
                                                                        child: Container(
                                                                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(12)),
                                                                          clipBehavior: Clip.hardEdge,
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                    vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                        width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                        decoration: BoxDecoration(
                                                                                          shape: BoxShape.circle,
                                                                                          color: Color(int.parse(context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .typeColor)),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickingData[index][idx]
                                                                                                .itemType,
                                                                                            style: TextStyle(
                                                                                                color: const Color(0xffffffff),
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                fontWeight: FontWeight.w700),
                                                                                          ),
                                                                                        )),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                    Expanded(
                                                                                      child: Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<PickListDetailsBloc>()
                                                                                                  .groupedPickingData[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                          SingleChildScrollView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            child: IntrinsicHeight(
                                                                                              child: Row(
                                                                                                children: [
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text:
                                                                                                              "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].handledBy.singleWhere((element) => element.name == context.read<PickListDetailsBloc>().groupedKeepersNameList[index]).pickedItems}/",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007838),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickingData[index][idx]
                                                                                                              .quantity,
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                  const VerticalDivider(color: Color(0xff8A8D8E)),
                                                                                                  RichText(
                                                                                                      text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedKeepersNameList[index],
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  )),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              Container(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                                padding: EdgeInsets.symmetric(
                                                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .floor
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .floor,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index][idx]
                                                                                              .catchWeightStatus ==
                                                                                          "No" ||
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickingData[index][idx]
                                                                                          .catchWeightInfoForList
                                                                                          .isEmpty
                                                                                  ? const SizedBox()
                                                                                  : Row(
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: Container(
                                                                                            decoration: const BoxDecoration(
                                                                                              color: Color(0xffCDE5FF),
                                                                                              borderRadius: BorderRadius.only(
                                                                                                  bottomLeft: Radius.circular(8),
                                                                                                  bottomRight: Radius.circular(8)),
                                                                                            ),
                                                                                            padding: EdgeInsets.only(
                                                                                                left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                                top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                                bottom:
                                                                                                    getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                            child: Wrap(
                                                                                              children: List.generate(
                                                                                                  context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickingData[index][idx]
                                                                                                      .catchWeightInfoForList
                                                                                                      .length,
                                                                                                  (i) => i == 0
                                                                                                      ? Padding(
                                                                                                          padding: const EdgeInsets.only(right: 10.0),
                                                                                                          child: SvgPicture.asset(
                                                                                                            "assets/catch_weight/measurement.svg",
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 20),
                                                                                                            fit: BoxFit.fill,
                                                                                                          ),
                                                                                                        )
                                                                                                      : i == 1
                                                                                                          ? Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 8)),
                                                                                                              child: Text(
                                                                                                                "${context.read<PickListDetailsBloc>().groupedPickingData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w600,
                                                                                                                    color: const Color(0xff282F3A)),
                                                                                                              ),
                                                                                                            )
                                                                                                          : Container(
                                                                                                              height: getIt<Functions>()
                                                                                                                  .getWidgetHeight(height: 20),
                                                                                                              width: getIt<Functions>().getWidgetWidth(
                                                                                                                  width: (context
                                                                                                                              .read<
                                                                                                                                  PickListDetailsBloc>()
                                                                                                                              .groupedPickingData[
                                                                                                                                  index][idx]
                                                                                                                              .catchWeightInfoForList[
                                                                                                                                  i]
                                                                                                                              .length *
                                                                                                                          7) +
                                                                                                                      30),
                                                                                                              padding: EdgeInsets.symmetric(
                                                                                                                  horizontal: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 12)),
                                                                                                              margin: EdgeInsets.only(
                                                                                                                  left: getIt<Functions>()
                                                                                                                      .getWidgetWidth(width: 6),
                                                                                                                  bottom: getIt<Functions>()
                                                                                                                      .getWidgetHeight(height: 2)),
                                                                                                              decoration: BoxDecoration(
                                                                                                                borderRadius:
                                                                                                                    BorderRadius.circular(8),
                                                                                                                color: const Color(0xff7AA440),
                                                                                                              ),
                                                                                                              child: Center(
                                                                                                                child: Text(
                                                                                                                  context
                                                                                                                      .read<PickListDetailsBloc>()
                                                                                                                      .groupedPickingData[index][idx]
                                                                                                                      .catchWeightInfoForList[i],
                                                                                                                  style: TextStyle(
                                                                                                                      fontSize: getIt<Functions>()
                                                                                                                          .getTextSize(fontSize: 12),
                                                                                                                      fontWeight: FontWeight.w500,
                                                                                                                      color: const Color(0xffffffff)),
                                                                                                                ),
                                                                                                              ),
                                                                                                            )),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                        const SizedBox(),
                                                                                      ],
                                                                                    ),
                                                                              idx ==
                                                                                      context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickingData[index]
                                                                                              .length -
                                                                                          1
                                                                                  ? const SizedBox()
                                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      );
                                                                    })
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const ScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][0]
                                                                                .stagingArea,
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff007838),
                                                                                fontWeight: FontWeight.w600)),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                      getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                          selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index]
                                                                              [idx],
                                                                          index: index,
                                                                          idx: idx,
                                                                          fromWhere: "partial",
                                                                          isPicking: false);
                                                                      getIt<Functions>().showAnimatedDialog(
                                                                          context: context, isFromTop: false, isCloseDisabled: false);
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.symmetric(
                                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .typeColor)),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        SingleChildScrollView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .itemName,
                                                                                            maxLines: 1,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff282F3A),
                                                                                                overflow: TextOverflow.ellipsis),
                                                                                          ),
                                                                                        ),
                                                                                        SizedBox(
                                                                                            height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                        IntrinsicHeight(
                                                                                          child: Row(
                                                                                            children: [
                                                                                              RichText(
                                                                                                  text: TextSpan(
                                                                                                text:
                                                                                                    "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A),
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontFamily: "Figtree"),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text:
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].pickedQty}/",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree")),
                                                                                                  TextSpan(
                                                                                                      text: context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .quantity,
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff007AFF),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree")),
                                                                                                ],
                                                                                              )),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? const VerticalDivider(color: Color(0xff8A8D8E))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? RichText(
                                                                                                      text: TextSpan(
                                                                                                      text:
                                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A),
                                                                                                          fontWeight: FontWeight.w500,
                                                                                                          fontFamily: "Figtree"),
                                                                                                      children: [
                                                                                                        TextSpan(
                                                                                                            text: context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .handledBy[0]
                                                                                                                .name,
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                color: const Color(0xff007AFF),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                fontFamily: "Figtree")),
                                                                                                      ],
                                                                                                    ))
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? SizedBox(
                                                                                                      width:
                                                                                                          getIt<Functions>().getWidgetWidth(width: 5),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                              context
                                                                                                          .read<PickListDetailsBloc>()
                                                                                                          .groupedPickedData[index][idx]
                                                                                                          .handledBy
                                                                                                          .length >
                                                                                                      1
                                                                                                  ? InkWell(
                                                                                                      onTap: () {
                                                                                                        getIt<Variables>()
                                                                                                                .generalVariables
                                                                                                                .popUpWidget =
                                                                                                            pickedUsersDetailsContent(
                                                                                                                selectedItem: context
                                                                                                                    .read<PickListDetailsBloc>()
                                                                                                                    .groupedPickedData[index][idx]);
                                                                                                        getIt<Functions>().showAnimatedDialog(
                                                                                                            context: context,
                                                                                                            isFromTop: false,
                                                                                                            isCloseDisabled: false);
                                                                                                      },
                                                                                                      child: Container(
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6)),
                                                                                                        decoration: BoxDecoration(
                                                                                                            color: const Color(0xff007AFF),
                                                                                                            borderRadius: BorderRadius.circular(8)),
                                                                                                        child: Text(
                                                                                                          "+${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].handledBy.length - 1}",
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w700,
                                                                                                              color: const Color(0xffFFFFFF),
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 10)),
                                                                                                        ),
                                                                                                      ),
                                                                                                    )
                                                                                                  : const SizedBox()
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 41),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .room
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .room,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .zone
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .zone,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .catchWeightInfoForList
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .catchWeightInfoForList
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${context.read<PickListDetailsBloc>().groupedPickedData[index][idx].catchWeightInfoForList[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: (context
                                                                                                                        .read<PickListDetailsBloc>()
                                                                                                                        .groupedPickedData[index][idx]
                                                                                                                        .catchWeightInfoForList[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            context
                                                                                                                .read<PickListDetailsBloc>()
                                                                                                                .groupedPickedData[index][idx]
                                                                                                                .catchWeightInfoForList[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx == context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ),
                              ),
                            );*/
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _unavailableEmptyController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const ScrollPhysics(),
                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 38),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Text(
                                                                "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    fontWeight: FontWeight.w600,
                                                                    color: const Color(0xff282F3A)),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            shrinkWrap: true,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                  context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                  getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                      selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                                      index: index,
                                                                      idx: idx,
                                                                      fromWhere: "unavailable",
                                                                      isPicking: false);
                                                                  getIt<Functions>()
                                                                      .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                                },
                                                                child: Column(
                                                                  children: [
                                                                    Container(
                                                                      padding: EdgeInsets.symmetric(
                                                                          horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                          vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Row(
                                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              Container(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                    color: Color(int.parse(context
                                                                                        .read<PickListDetailsBloc>()
                                                                                        .groupedPickedData[index][idx]
                                                                                        .typeColor)),
                                                                                  ),
                                                                                  child: Center(
                                                                                    child: Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .itemType,
                                                                                      style: TextStyle(
                                                                                          color: const Color(0xffffffff),
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          fontWeight: FontWeight.w700),
                                                                                    ),
                                                                                  )),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                              Expanded(
                                                                                child: Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  children: [
                                                                                    SingleChildScrollView(
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      child: Text(
                                                                                        context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .itemName,
                                                                                        maxLines: 1,
                                                                                        style: TextStyle(
                                                                                            fontWeight: FontWeight.w600,
                                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                            color: const Color(0xff282F3A),
                                                                                            overflow: TextOverflow.ellipsis),
                                                                                      ),
                                                                                    ),
                                                                                    SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                                    SingleChildScrollView(
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      child: IntrinsicHeight(
                                                                                        child: Row(
                                                                                          children: [
                                                                                            RichText(
                                                                                                text: TextSpan(
                                                                                              text:
                                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  fontFamily: "Figtree"),
                                                                                              children: [
                                                                                                TextSpan(
                                                                                                    text: context
                                                                                                        .read<PickListDetailsBloc>()
                                                                                                        .groupedPickedData[index][idx]
                                                                                                        .quantity,
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xffF92C38),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree")),
                                                                                              ],
                                                                                            )),
                                                                                            context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .handledBy
                                                                                                    .isNotEmpty
                                                                                                ? const VerticalDivider(color: Color(0xff8A8D8E))
                                                                                                : const SizedBox(),
                                                                                            context
                                                                                                    .read<PickListDetailsBloc>()
                                                                                                    .groupedPickedData[index][idx]
                                                                                                    .handledBy
                                                                                                    .isNotEmpty
                                                                                                ? RichText(
                                                                                                    text: TextSpan(
                                                                                                    text:
                                                                                                        "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                                    style: TextStyle(
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A),
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontFamily: "Figtree"),
                                                                                                    children: [
                                                                                                      TextSpan(
                                                                                                          text: context
                                                                                                              .read<PickListDetailsBloc>()
                                                                                                              .groupedPickedData[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name,
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff007AFF),
                                                                                                              fontWeight: FontWeight.w500,
                                                                                                              fontFamily: "Figtree")),
                                                                                                    ],
                                                                                                  ))
                                                                                                : const SizedBox(),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 42),
                                                                            child: ListView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              physics: const BouncingScrollPhysics(),
                                                                              shrinkWrap: true,
                                                                              padding: EdgeInsets.zero,
                                                                              children: [
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  mainAxisSize: MainAxisSize.min,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .room
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                          color: const Color(0xff8A8D8E)),
                                                                                    ),
                                                                                    Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .room,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  mainAxisSize: MainAxisSize.min,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .zone
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                          color: const Color(0xff8A8D8E)),
                                                                                    ),
                                                                                    Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .zone,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  mainAxisSize: MainAxisSize.min,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .itemCode
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                          color: const Color(0xff8A8D8E)),
                                                                                    ),
                                                                                    Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .itemCode,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  mainAxisSize: MainAxisSize.min,
                                                                                  children: [
                                                                                    Text(
                                                                                      "UOM",
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                          color: const Color(0xff8A8D8E)),
                                                                                    ),
                                                                                    Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .uom,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  mainAxisSize: MainAxisSize.min,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .packageTerms
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                          color: const Color(0xff8A8D8E)),
                                                                                    ),
                                                                                    Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .packageTerms,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    Container(
                                                                      decoration: const BoxDecoration(
                                                                        color: Color(0xffCDE5FF),
                                                                        borderRadius: BorderRadius.only(
                                                                            bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                                      ),
                                                                      padding: EdgeInsets.symmetric(
                                                                          horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                          Row(children: [
                                                                            Text(
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff282F3A),
                                                                                    fontWeight: FontWeight.w600)),
                                                                            Expanded(
                                                                              child: SingleChildScrollView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  child: Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .unavailableReason,
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          color: const Color(0xffF92C38),
                                                                                          fontWeight: FontWeight.w600))),
                                                                            ),
                                                                          ]),
                                                                          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 4)),
                                                                          Row(
                                                                            mainAxisSize: MainAxisSize.min,
                                                                            children: [
                                                                              Text(
                                                                                  "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff282F3A),
                                                                                      fontWeight: FontWeight.w600)),
                                                                              Expanded(
                                                                                child: SingleChildScrollView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  child: Text(
                                                                                      context
                                                                                          .read<PickListDetailsBloc>()
                                                                                          .groupedPickedData[index][idx]
                                                                                          .alternativeItemName,
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          color: const Color(0xff007AFF),
                                                                                          fontWeight: FontWeight.w600)),
                                                                                ),
                                                                              )
                                                                            ],
                                                                          ),
                                                                          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              );
                                                            })
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  unavailableRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: unavailableRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                              textAlign: TextAlign.center,
                                            ),
                                            const SizedBox(height: 150)
                                          ],
                                        ),
                                      )
                                    : ListView.builder(
                                        padding: EdgeInsets.zero,
                                        physics: const ScrollPhysics(),
                                        itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                        shrinkWrap: true,
                                        itemBuilder: (BuildContext context, int index) {
                                          return Container(
                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                            margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                  decoration: const BoxDecoration(
                                                    color: Color(0xffE3E7EA),
                                                    borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                  ),
                                                  padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                  child: Row(
                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                    children: [
                                                      Text(
                                                        "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor}",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A)),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                                ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    shrinkWrap: true,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                    itemBuilder: (BuildContext context, int idx) {
                                                      return InkWell(
                                                        onTap: () {
                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                              selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                              index: index,
                                                              idx: idx,
                                                              fromWhere: "unavailable",
                                                              isPicking: false);
                                                          getIt<Functions>()
                                                              .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                        },
                                                        child: Column(
                                                          children: [
                                                            Container(
                                                              padding: EdgeInsets.symmetric(
                                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                              child: Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                children: [
                                                                  Row(
                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      Container(
                                                                          height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                          width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                          decoration: BoxDecoration(
                                                                            shape: BoxShape.circle,
                                                                            color: Color(int.parse(context
                                                                                .read<PickListDetailsBloc>()
                                                                                .groupedPickedData[index][idx]
                                                                                .typeColor)),
                                                                          ),
                                                                          child: Center(
                                                                            child: Text(
                                                                              context
                                                                                  .read<PickListDetailsBloc>()
                                                                                  .groupedPickedData[index][idx]
                                                                                  .itemType,
                                                                              style: TextStyle(
                                                                                  color: const Color(0xffffffff),
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                  fontWeight: FontWeight.w700),
                                                                            ),
                                                                          )),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                      Expanded(
                                                                        child: Column(
                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                          children: [
                                                                            SingleChildScrollView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: Text(
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .itemName,
                                                                                maxLines: 1,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                    color: const Color(0xff282F3A),
                                                                                    overflow: TextOverflow.ellipsis),
                                                                              ),
                                                                            ),
                                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                            SingleChildScrollView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: IntrinsicHeight(
                                                                                child: Row(
                                                                                  children: [
                                                                                    RichText(
                                                                                        text: TextSpan(
                                                                                      text:
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          color: const Color(0xff282F3A),
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontFamily: "Figtree"),
                                                                                      children: [
                                                                                        TextSpan(
                                                                                            text: context
                                                                                                .read<PickListDetailsBloc>()
                                                                                                .groupedPickedData[index][idx]
                                                                                                .quantity,
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xffF92C38),
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontFamily: "Figtree")),
                                                                                      ],
                                                                                    )),
                                                                                    context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .handledBy
                                                                                            .isNotEmpty
                                                                                        ? const VerticalDivider(color: Color(0xff8A8D8E))
                                                                                        : const SizedBox(),
                                                                                    context
                                                                                            .read<PickListDetailsBloc>()
                                                                                            .groupedPickedData[index][idx]
                                                                                            .handledBy
                                                                                            .isNotEmpty
                                                                                        ? RichText(
                                                                                            text: TextSpan(
                                                                                            text:
                                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A),
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontFamily: "Figtree"),
                                                                                            children: [
                                                                                              TextSpan(
                                                                                                  text: context
                                                                                                      .read<PickListDetailsBloc>()
                                                                                                      .groupedPickedData[index][idx]
                                                                                                      .handledBy[0]
                                                                                                      .name,
                                                                                                  style: TextStyle(
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 12),
                                                                                                      color: const Color(0xff007AFF),
                                                                                                      fontWeight: FontWeight.w500,
                                                                                                      fontFamily: "Figtree")),
                                                                                            ],
                                                                                          ))
                                                                                        : const SizedBox(),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(
                                                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                  ),
                                                                  SizedBox(
                                                                    height: getIt<Functions>().getWidgetHeight(height: 42),
                                                                    child: ListView(
                                                                      scrollDirection: Axis.horizontal,
                                                                      physics: const BouncingScrollPhysics(),
                                                                      shrinkWrap: true,
                                                                      padding: EdgeInsets.zero,
                                                                      children: [
                                                                        Column(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                          mainAxisSize: MainAxisSize.min,
                                                                          children: [
                                                                            Text(
                                                                              getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w500,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                  color: const Color(0xff8A8D8E)),
                                                                            ),
                                                                            Text(
                                                                              context.read<PickListDetailsBloc>().groupedPickedData[index][idx].room,
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w600,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                  color: const Color(0xff282F3A)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                        Column(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                          mainAxisSize: MainAxisSize.min,
                                                                          children: [
                                                                            Text(
                                                                              getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w500,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                  color: const Color(0xff8A8D8E)),
                                                                            ),
                                                                            Text(
                                                                              context.read<PickListDetailsBloc>().groupedPickedData[index][idx].zone,
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w600,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                  color: const Color(0xff282F3A)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                        Column(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                          mainAxisSize: MainAxisSize.min,
                                                                          children: [
                                                                            Text(
                                                                              getIt<Variables>()
                                                                                  .generalVariables
                                                                                  .currentLanguage
                                                                                  .itemCode
                                                                                  .toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w500,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                  color: const Color(0xff8A8D8E)),
                                                                            ),
                                                                            Text(
                                                                              context
                                                                                  .read<PickListDetailsBloc>()
                                                                                  .groupedPickedData[index][idx]
                                                                                  .itemCode,
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w600,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                  color: const Color(0xff282F3A)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                        Column(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                          mainAxisSize: MainAxisSize.min,
                                                                          children: [
                                                                            Text(
                                                                              "UOM",
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w500,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                  color: const Color(0xff8A8D8E)),
                                                                            ),
                                                                            Text(
                                                                              context.read<PickListDetailsBloc>().groupedPickedData[index][idx].uom,
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w600,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                  color: const Color(0xff282F3A)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                        SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                        Column(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                          mainAxisSize: MainAxisSize.min,
                                                                          children: [
                                                                            Text(
                                                                              getIt<Variables>()
                                                                                  .generalVariables
                                                                                  .currentLanguage
                                                                                  .packageTerms
                                                                                  .toUpperCase(),
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w500,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                  color: const Color(0xff8A8D8E)),
                                                                            ),
                                                                            Text(
                                                                              context
                                                                                  .read<PickListDetailsBloc>()
                                                                                  .groupedPickedData[index][idx]
                                                                                  .packageTerms,
                                                                              style: TextStyle(
                                                                                  fontWeight: FontWeight.w600,
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                  color: const Color(0xff282F3A)),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            Container(
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffCDE5FF),
                                                                borderRadius: BorderRadius.only(
                                                                    bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                mainAxisSize: MainAxisSize.min,
                                                                children: [
                                                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                  Row(children: [
                                                                    Text(
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A),
                                                                            fontWeight: FontWeight.w600)),
                                                                    Expanded(
                                                                      child: SingleChildScrollView(
                                                                          scrollDirection: Axis.horizontal,
                                                                          child: Text(
                                                                              context
                                                                                  .read<PickListDetailsBloc>()
                                                                                  .groupedPickedData[index][idx]
                                                                                  .unavailableReason,
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xffF92C38),
                                                                                  fontWeight: FontWeight.w600))),
                                                                    ),
                                                                  ]),
                                                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 4)),
                                                                  Row(
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600)),
                                                                      Expanded(
                                                                        child: SingleChildScrollView(
                                                                          scrollDirection: Axis.horizontal,
                                                                          child: Text(
                                                                              context
                                                                                  .read<PickListDetailsBloc>()
                                                                                  .groupedPickedData[index][idx]
                                                                                  .alternativeItemName,
                                                                              style: TextStyle(
                                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                  color: const Color(0xff007AFF),
                                                                                  fontWeight: FontWeight.w600)),
                                                                        ),
                                                                      )
                                                                    ],
                                                                  ),
                                                                  SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      );
                                                    })
                                              ],
                                            ),
                                          );
                                        }),
                              ),
                            );*/
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const ScrollPhysics(),
                                                itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(
                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                          child: IntrinsicHeight(
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                                const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                                Text(
                                                                    "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff282F3A))),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                                  context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                                  getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                                      selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                                      index: index,
                                                                      idx: idx,
                                                                      fromWhere: "yet_to_pick",
                                                                      isPicking: false);
                                                                  getIt<Functions>()
                                                                      .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                                },
                                                                child: Container(
                                                                  padding: EdgeInsets.only(
                                                                      left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                      right: getIt<Functions>().getWidgetWidth(width: 12),
                                                                      top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                  color: Colors.white,
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Row(
                                                                        mainAxisAlignment: MainAxisAlignment.start,
                                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                                        children: [
                                                                          Container(
                                                                              height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                              width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                              decoration: BoxDecoration(
                                                                                shape: BoxShape.circle,
                                                                                color: Color(int.parse(context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .typeColor)),
                                                                              ),
                                                                              child: Center(
                                                                                child: Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemType,
                                                                                  style: TextStyle(
                                                                                      color: const Color(0xffffffff),
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                      fontWeight: FontWeight.w700),
                                                                                ),
                                                                              )),
                                                                          SizedBox(
                                                                            width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                          ),
                                                                          Expanded(
                                                                            child: SingleChildScrollView(
                                                                              scrollDirection: Axis.horizontal,
                                                                              child: Text(
                                                                                context
                                                                                    .read<PickListDetailsBloc>()
                                                                                    .groupedPickedData[index][idx]
                                                                                    .itemName,
                                                                                maxLines: 1,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                    color: const Color(0xff282F3A),
                                                                                    overflow: TextOverflow.ellipsis),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 14),
                                                                      ),
                                                                      SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                        child: Row(
                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                                          children: [
                                                                            Expanded(
                                                                              child: SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                                child: ListView(
                                                                                  scrollDirection: Axis.horizontal,
                                                                                  physics: const BouncingScrollPhysics(),
                                                                                  shrinkWrap: true,
                                                                                  padding: EdgeInsets.zero,
                                                                                  children: [
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      mainAxisSize: MainAxisSize.min,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .itemCode
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .itemCode,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          "UOM",
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .uom,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .packageTerms
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              color: const Color(0xff8A8D8E)),
                                                                                        ),
                                                                                        Text(
                                                                                          context
                                                                                              .read<PickListDetailsBloc>()
                                                                                              .groupedPickedData[index][idx]
                                                                                              .packageTerms,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            SizedBox(
                                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                            ),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.end,
                                                                              children: [
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .quantity,
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                      fontWeight: FontWeight.w600,
                                                                                      color: const Color(0xff007AFF)),
                                                                                ),
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .qtyToPick
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                      context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                          ? const SizedBox()
                                                                          : const Divider(color: Color(0xffE0E7EC))
                                                                    ],
                                                                  ),
                                                                ),
                                                              );
                                                            })
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          /*return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: SmartRefresher(
                                enablePullDown: true,
                                enablePullUp: false,
                                physics: const BouncingScrollPhysics(),
                                onRefresh: () {
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                  yetToPickRefreshController.refreshCompleted();
                                  setState(() {});
                                },
                                controller: yetToPickRefreshController,
                                child: context.read<PickListDetailsBloc>().groupedPickedData.isEmpty
                                    ? Center(
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SvgPicture.asset(
                                              "assets/general/no_response.svg",
                                              height: getIt<Functions>().getWidgetHeight(height: 200),
                                              width: getIt<Functions>().getWidgetWidth(width: 200),
                                              colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.pickListIsEmpty,
                                              style: TextStyle(
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                  color: const Color(0xff282F3A),
                                                  fontWeight: FontWeight.w600),
                                              textAlign: TextAlign.center,
                                            ),
                                            const SizedBox(height: 150)
                                          ],
                                        ),
                                      )
                                    : ListView.builder(
                                        padding: EdgeInsets.zero,
                                        physics: const ScrollPhysics(),
                                        itemCount: context.read<PickListDetailsBloc>().groupedPickedData.length,
                                        shrinkWrap: true,
                                        itemBuilder: (BuildContext context, int index) {
                                          return Container(
                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                            margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                            child: Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              children: [
                                                Container(
                                                  height: getIt<Functions>().getWidgetHeight(height: 40),
                                                  decoration: const BoxDecoration(
                                                    color: Color(0xffE3E7EA),
                                                    borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                                  ),
                                                  padding: EdgeInsets.symmetric(
                                                      horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                      vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                  child: IntrinsicHeight(
                                                    child: Row(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                      children: [
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].floor} ",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                        const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].room}",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                        const VerticalDivider(color: Color(0xff8A8D8E), width: 0, thickness: 1),
                                                        Text(
                                                            "${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : ${context.read<PickListDetailsBloc>().groupedPickedData[index][0].zone}",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                fontWeight: FontWeight.w600,
                                                                color: const Color(0xff282F3A))),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                                ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    shrinkWrap: true,
                                                    itemCount: context.read<PickListDetailsBloc>().groupedPickedData[index].length,
                                                    itemBuilder: (BuildContext context, int idx) {
                                                      return InkWell(
                                                        onTap: () {
                                                          context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                          getIt<Variables>().generalVariables.popUpWidget = yetToPickContent(
                                                              selectedItem: context.read<PickListDetailsBloc>().groupedPickedData[index][idx],
                                                              index: index,
                                                              idx: idx,
                                                              fromWhere: "yet_to_pick",
                                                              isPicking: false);
                                                          getIt<Functions>()
                                                              .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                        },
                                                        child: Container(
                                                          padding: EdgeInsets.only(
                                                              left: getIt<Functions>().getWidgetWidth(width: 12),
                                                              right: getIt<Functions>().getWidgetWidth(width: 12),
                                                              top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                          color: Colors.white,
                                                          child: Column(
                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                            children: [
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Color(int.parse(context
                                                                            .read<PickListDetailsBloc>()
                                                                            .groupedPickedData[index][idx]
                                                                            .typeColor)),
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          context.read<PickListDetailsBloc>().groupedPickedData[index][idx].itemType,
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                  SizedBox(
                                                                    width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                  ),
                                                                  Expanded(
                                                                    child: SingleChildScrollView(
                                                                      scrollDirection: Axis.horizontal,
                                                                      child: Text(
                                                                        context.read<PickListDetailsBloc>().groupedPickedData[index][idx].itemName,
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 14),
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                child: Row(
                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                  children: [
                                                                    Expanded(
                                                                      child: SizedBox(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                        child: ListView(
                                                                          scrollDirection: Axis.horizontal,
                                                                          physics: const BouncingScrollPhysics(),
                                                                          shrinkWrap: true,
                                                                          padding: EdgeInsets.zero,
                                                                          children: [
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .itemCode
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .itemCode,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  "UOM",
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .uom,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .packageTerms
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<PickListDetailsBloc>()
                                                                                      .groupedPickedData[index][idx]
                                                                                      .packageTerms,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                      width: getIt<Functions>().getWidgetWidth(width: 10),
                                                                    ),
                                                                    Column(
                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                      children: [
                                                                        Text(
                                                                          context.read<PickListDetailsBloc>().groupedPickedData[index][idx].quantity,
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                              fontWeight: FontWeight.w600,
                                                                              color: const Color(0xff007AFF)),
                                                                        ),
                                                                        Text(
                                                                          getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                              fontWeight: FontWeight.w500,
                                                                              color: const Color(0xff282F3A)),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                              context.read<PickListDetailsBloc>().groupedPickedData[index].length - 1 == idx
                                                                  ? const SizedBox()
                                                                  : const Divider(color: Color(0xffE0E7EC))
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    })
                                              ],
                                            ),
                                          );
                                        }),
                              ),
                            );*/
                        }
                      }
                      else if (state is PickListDetailsListLoading) {
                        switch (context.read<PickListDetailsBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 12),
                                                        right: getIt<Functions>().getWidgetWidth(width: 12),
                                                        top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 48),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "CORN FLOUR - 1KG",
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                      Row(
                                                                        children: [
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "10/",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007838),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                              TextSpan(
                                                                                  text: "24",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "STORE KEEPER",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 41),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "StagingArea",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "CORN FLOUR - 1KG",
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                      Row(
                                                                        children: [
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "10/",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007838),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                              TextSpan(
                                                                                  text: "24",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "STORE KEEPER",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 41),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                shrinkWrap: true,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "CORN FLOUR - 1KG ",
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                      Row(
                                                                        children: [
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "24",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007838),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "STORE KEEPER",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 42),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      Container(
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xffCDE5FF),
                                                          borderRadius:
                                                              BorderRadius.only(bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                        ),
                                                        padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          mainAxisSize: MainAxisSize.min,
                                                          children: [
                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                            Row(
                                                              children: [
                                                                RichText(
                                                                  text: TextSpan(
                                                                    text:
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        color: const Color(0xff282F3A),
                                                                        fontWeight: FontWeight.w600),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: "Unavailable Reason",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xffF92C38),
                                                                              fontWeight: FontWeight.w600)),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 4)),
                                                            Row(
                                                              children: [
                                                                RichText(
                                                                  text: TextSpan(
                                                                    text:
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        color: const Color(0xff282F3A),
                                                                        fontWeight: FontWeight.w600),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: "Alternative Item Name",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff007AFF),
                                                                              fontWeight: FontWeight.w600)),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 12),
                                                        right: getIt<Functions>().getWidgetWidth(width: 12),
                                                        top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 30),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                        }
                      }
                      else if (state is PickListDetailsLoading) {
                        switch (context.read<PickListDetailsBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 12),
                                                        right: getIt<Functions>().getWidgetWidth(width: 12),
                                                        top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 48),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "CORN FLOUR - 1KG",
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                      Row(
                                                                        children: [
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "10/",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007838),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                              TextSpan(
                                                                                  text: "24",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "STORE KEEPER",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 41),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "StagingArea",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "CORN FLOUR - 1KG",
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                      Row(
                                                                        children: [
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "10/",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007838),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                              TextSpan(
                                                                                  text: "24",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "STORE KEEPER",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 5)),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 41),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                }),
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Text(
                                                    "${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A)),
                                                  ),
                                                  RichText(
                                                    text: TextSpan(
                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                      style: TextStyle(
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600),
                                                      children: [
                                                        TextSpan(
                                                            text: "Staging Area",
                                                            style: TextStyle(
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                color: const Color(0xff007838),
                                                                fontWeight: FontWeight.w600)),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                shrinkWrap: true,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Column(
                                                    children: [
                                                      Container(
                                                        padding: EdgeInsets.symmetric(
                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                            vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Row(
                                                              mainAxisAlignment: MainAxisAlignment.start,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                Skeleton.shade(
                                                                  child: Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                      decoration: const BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Colors.purpleAccent,
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          "D",
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                ),
                                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                Expanded(
                                                                  child: Column(
                                                                    mainAxisAlignment: MainAxisAlignment.center,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "CORN FLOUR - 1KG ",
                                                                        maxLines: 1,
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                            color: const Color(0xff282F3A),
                                                                            overflow: TextOverflow.ellipsis),
                                                                      ),
                                                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                                                                      Row(
                                                                        children: [
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "24",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007838),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                          RichText(
                                                                              text: TextSpan(
                                                                            text:
                                                                                "${getIt<Variables>().generalVariables.currentLanguage.storeKeeper.toUpperCase()}  :  ",
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff282F3A),
                                                                                fontWeight: FontWeight.w500,
                                                                                fontFamily: "Figtree"),
                                                                            children: [
                                                                              TextSpan(
                                                                                  text: "STORE KEEPER",
                                                                                  style: TextStyle(
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                      color: const Color(0xff007AFF),
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontFamily: "Figtree")),
                                                                            ],
                                                                          )),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 16),
                                                            ),
                                                            SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 42),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "R",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Z",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F001",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                      Container(
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xffCDE5FF),
                                                          borderRadius:
                                                              BorderRadius.only(bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                        ),
                                                        padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          mainAxisSize: MainAxisSize.min,
                                                          children: [
                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                            Row(
                                                              children: [
                                                                RichText(
                                                                  text: TextSpan(
                                                                    text:
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()}  :  ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        color: const Color(0xff282F3A),
                                                                        fontWeight: FontWeight.w600),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: "Unavailable Reason",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xffF92C38),
                                                                              fontWeight: FontWeight.w600)),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 4)),
                                                            Row(
                                                              children: [
                                                                RichText(
                                                                  text: TextSpan(
                                                                    text:
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.altItem.toUpperCase()}  :  ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                        color: const Color(0xff282F3A),
                                                                        fontWeight: FontWeight.w600),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: "Alternative Item Name",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff007AFF),
                                                                              fontWeight: FontWeight.w600)),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: Skeletonizer(
                                enabled: true,
                                child: ListView.builder(
                                    padding: EdgeInsets.zero,
                                    physics: const ScrollPhysics(),
                                    itemCount: 1,
                                    shrinkWrap: true,
                                    itemBuilder: (BuildContext context, int index) {
                                      return Container(
                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          children: [
                                            Container(
                                              height: getIt<Functions>().getWidgetHeight(height: 40),
                                              decoration: const BoxDecoration(
                                                color: Color(0xffE3E7EA),
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                              ),
                                              padding: EdgeInsets.symmetric(
                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                              child: IntrinsicHeight(
                                                child: Row(
                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                  children: [
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                    Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                        style: TextStyle(
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                            fontWeight: FontWeight.w600,
                                                            color: const Color(0xff282F3A))),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: 1,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return Container(
                                                    padding: EdgeInsets.only(
                                                        left: getIt<Functions>().getWidgetWidth(width: 12),
                                                        right: getIt<Functions>().getWidgetWidth(width: 12),
                                                        top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Row(
                                                          mainAxisAlignment: MainAxisAlignment.start,
                                                          crossAxisAlignment: CrossAxisAlignment.center,
                                                          children: [
                                                            Skeleton.shade(
                                                              child: Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                  decoration: const BoxDecoration(
                                                                    shape: BoxShape.circle,
                                                                    color: Colors.purpleAccent,
                                                                  ),
                                                                  child: Center(
                                                                    child: Text(
                                                                      "D",
                                                                      style: TextStyle(
                                                                          color: const Color(0xffffffff),
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          fontWeight: FontWeight.w700),
                                                                    ),
                                                                  )),
                                                            ),
                                                            SizedBox(
                                                              width: getIt<Functions>().getWidgetWidth(width: 10),
                                                            ),
                                                            Expanded(
                                                              child: Text(
                                                                "CORN FLOUR - 1KG",
                                                                maxLines: 1,
                                                                style: TextStyle(
                                                                    fontWeight: FontWeight.w600,
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                    color: const Color(0xff282F3A),
                                                                    overflow: TextOverflow.ellipsis),
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 14),
                                                        ),
                                                        SizedBox(
                                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Expanded(
                                                                child: SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 30),
                                                                  child: ListView(
                                                                    scrollDirection: Axis.horizontal,
                                                                    physics: const BouncingScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    padding: EdgeInsets.zero,
                                                                    children: [
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        mainAxisSize: MainAxisSize.min,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .itemCode
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "F008",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "UOM",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Variables>()
                                                                                .generalVariables
                                                                                .currentLanguage
                                                                                .packageTerms
                                                                                .toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                color: const Color(0xff8A8D8E)),
                                                                          ),
                                                                          Text(
                                                                            "Package Terms",
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                width: getIt<Functions>().getWidgetWidth(width: 10),
                                                              ),
                                                              Column(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Text(
                                                                    "24",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                        fontWeight: FontWeight.w600,
                                                                        color: const Color(0xff007AFF)),
                                                                  ),
                                                                  Text(
                                                                    getIt<Variables>().generalVariables.currentLanguage.qtyToPick.toUpperCase(),
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                        fontWeight: FontWeight.w500,
                                                                        color: const Color(0xff282F3A)),
                                                                  ),
                                                                ],
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                      ],
                                                    ),
                                                  );
                                                })
                                          ],
                                        ),
                                      );
                                    }),
                              ),
                            );
                        }
                      }
                      else {
                        return const SizedBox();
                      }
                    },
                  ),
                ),
              ],
            ),
          );
        }
      }),
    );
  }

  Widget textBars({required TextEditingController controller}) {
    return BlocBuilder<PickListDetailsBloc, PickListDetailsState>(
      builder: (BuildContext context, PickListDetailsState pickList) {
        return Padding(
          padding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
          child: SizedBox(
            height: getIt<Functions>().getWidgetHeight(height: 36),
            width: getIt<Functions>().getWidgetWidth(width: 268),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(
                  height: getIt<Functions>().getWidgetHeight(height: 36),
                  child: TextFormField(
                    onChanged: (value) {
                      if (timer?.isActive ?? false) timer?.cancel();
                      timer = Timer(const Duration(milliseconds: 500), () {
                        if (value.isNotEmpty) {
                          context.read<PickListDetailsBloc>().searchText = value.toLowerCase();
                          context.read<PickListDetailsBloc>().pageIndex = 1;
                          context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                        } else {
                          context.read<PickListDetailsBloc>().searchText = "";
                          context.read<PickListDetailsBloc>().pageIndex = 1;
                          context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                        }
                      });
                    },
                    controller: controller,
                    cursorColor: Colors.white,
                    keyboardType: TextInputType.text,
                    style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 15), fontWeight: FontWeight.w500, color: Colors.white),
                    decoration: InputDecoration(
                        fillColor: const Color(0xff767680).withOpacity(0.12),
                        filled: true,
                        contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8),
                            borderSide: BorderSide(color: const Color(0xff767680).withOpacity(0.12), width: 0.68)),
                        enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8),
                            borderSide: BorderSide(color: const Color(0xff767680).withOpacity(0.12), width: 0.68)),
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8),
                            borderSide: BorderSide(color: const Color(0xff767680).withOpacity(0.12), width: 0.68)),
                        errorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8),
                            borderSide: BorderSide(color: const Color(0xff767680).withOpacity(0.12), width: 0.68)),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8),
                            borderSide: BorderSide(color: const Color(0xff767680).withOpacity(0.12), width: 0.68)),
                        focusedErrorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8),
                            borderSide: BorderSide(color: const Color(0xff767680).withOpacity(0.12), width: 0.68)),
                        prefixIcon: const Icon(Icons.search, color: Color(0xff8F9BB3)),
                        suffixIcon: controller.text.isNotEmpty
                            ? IconButton(
                                onPressed: () {
                                  controller.clear();
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                  context.read<PickListDetailsBloc>().searchText = "";
                                  context.read<PickListDetailsBloc>().pageIndex = 1;
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsTabChangingEvent(isLoading: false));
                                },
                                icon: const Icon(Icons.clear, color: Colors.white, size: 15))
                            : const SizedBox(),
                        hintText: getIt<Variables>().generalVariables.currentLanguage.search,
                        hintStyle: TextStyle(
                            color: const Color(0xff8F9BB3), fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 15))),
                  ),
                )
              ],
            ),
          ),
        );
      },
    );
  }

  Widget usersDetailsContent({required List<HandledByPickList> handled}) {
    return BlocConsumer<PickListBloc, PickListState>(
      listenWhen: (PickListState previous, PickListState current) {
        return previous != current;
      },
      buildWhen: (PickListState previous, PickListState current) {
        return previous != current;
      },
      listener: (BuildContext context, PickListState state) {},
      builder: (BuildContext context, PickListState state) {
        return SizedBox(
          height: getIt<Functions>().getWidgetHeight(height: 500),
          width: getIt<Functions>().getWidgetWidth(width: 420),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Container(
                      height: getIt<Functions>().getWidgetHeight(height: 44),
                      width: getIt<Functions>().getWidgetHeight(height: 44),
                      decoration: const BoxDecoration(
                          shape: BoxShape.circle,
                          image: DecorationImage(
                            image: AssetImage("assets/pick_list/store_keep.png"),
                            fit: BoxFit.fill,
                          )),
                    ),
                    SizedBox(
                      width: getIt<Functions>().getWidgetWidth(width: 10),
                    ),
                    Text(
                      getIt<Variables>().generalVariables.currentLanguage.storeKeeper,
                      style: TextStyle(
                          fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 18), color: const Color(0xff282F3A)),
                    ),
                  ],
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: 20),
              ),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              Expanded(
                child: ListView.builder(
                    padding: EdgeInsets.only(
                        left: getIt<Functions>().getWidgetWidth(width: 20),
                        right: getIt<Functions>().getWidgetWidth(width: 20),
                        top: getIt<Functions>().getWidgetHeight(height: 20)),
                    physics: const BouncingScrollPhysics(),
                    shrinkWrap: true,
                    itemCount: handled.length,
                    itemBuilder: (BuildContext context, int index) {
                      return Container(
                        height: getIt<Functions>().getWidgetHeight(height: 60),
                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 15)),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Container(
                              height: getIt<Functions>().getWidgetHeight(height: 50),
                              width: getIt<Functions>().getWidgetHeight(height: 50),
                              decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  image: DecorationImage(
                                    image: getIt<Variables>().generalVariables.isNetworkOffline
                                        ? const AssetImage("assets/general/profile_default.png")
                                        : NetworkImage(handled[index].image),
                                    fit: BoxFit.fill,
                                  )),
                            ),
                            SizedBox(
                              width: getIt<Functions>().getWidgetWidth(width: 10),
                            ),
                            Expanded(
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(
                                        handled[index].name.toUpperCase(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w500,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                            color: const Color(0xff282F3A)),
                                      ),
                                      Text(
                                        handled[index].pickedItems,
                                        style: TextStyle(
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                            fontWeight: FontWeight.w600,
                                            color: const Color(0xff007838)),
                                      ),
                                    ],
                                  ),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Text(
                                        "Emp code:${handled[index].code}",
                                        style: TextStyle(
                                            fontWeight: FontWeight.w400,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 13),
                                            color: const Color(0xff8A8D8E)),
                                      ),
                                      Text(
                                        getIt<Variables>().generalVariables.currentLanguage.pickedItem.toUpperCase(),
                                        style: TextStyle(
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                            fontWeight: FontWeight.w500,
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      );
                    }),
              ),
              InkWell(
                onTap: () {
                  FocusManager.instance.primaryFocus!.unfocus();
                  Navigator.pop(context);
                },
                child: Container(
                  height: getIt<Functions>().getWidgetHeight(height: 50),
                  decoration: const BoxDecoration(
                    color: Color(0xffEEF4FF),
                    borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                  ),
                  child: Center(
                    child: Text(
                      getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                      style: TextStyle(
                          color: const Color(0xff1D2736), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }

  Widget yetToPickContent({
    required String fromWhere,
    required bool isPicking,
    required PickListDetailsItem selectedItem,
    required int index,
    required int idx,
  }) {
    context.read<PickListDetailsBloc>().selectedItem = selectedItem;
    context.read<PickListDetailsBloc>().selectedPickListItemId = selectedItem.id;
    context.read<PickListDetailsBloc>().selectedItemId = selectedItem.itemId;
    context.read<PickListDetailsBloc>().pickedQuantityData = {};
    context.read<PickListDetailsBloc>().pickedCatchWeightData = [];
    context.read<PickListDetailsBloc>().updateLoader = false;
    context.read<PickListDetailsBloc>().formatError = false;
    List<TextEditingController> controllersList = selectedItem.catchWeightStatus == "No"
        ? List<TextEditingController>.generate(selectedItem.batchesList.length, (i) {
            return TextEditingController();
          })
        : [];
    if (selectedItem.catchWeightStatus != "No") {
      List<CatchWeightItem> catchWeightInfoPickedTemp = [];
      catchWeightInfoPickedTemp.addAll(selectedItem.catchWeightInfoPicked);
      for (int i = 0; i < selectedItem.catchWeightInfo.length; i++) {
        if (fromWhere == "picked") {
          selectedItem.catchWeightInfo[i].isSelected = true;
          selectedItem.catchWeightInfo[i].isSelectedAlready = true;
        } else if (fromWhere == "partial") {
          selectedItem.catchWeightInfo[i].isSelected = false;
          selectedItem.catchWeightInfo[i].isSelectedAlready = false;
          for (int j = 0; j < catchWeightInfoPickedTemp.length; j++) {
            if (catchWeightInfoPickedTemp[j].data == selectedItem.catchWeightInfo[i].data) {
              selectedItem.catchWeightInfo[i].isSelected = true;
              selectedItem.catchWeightInfo[i].isSelectedAlready = true;
              catchWeightInfoPickedTemp.removeAt(j);
              break;
            }
          }
        } else {
          selectedItem.catchWeightInfo[i].isSelected = false;
          selectedItem.catchWeightInfo[i].isSelectedAlready = false;
        }
      }
      selectedItem.catchWeightInfo.sort((a, b) {
        if (a.isSelected == b.isSelected) return 0;
        return a.isSelected == true ? -1 : 1;
      });
    }
    return SizedBox(
      width: getIt<Functions>().getWidgetWidth(width: 600),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        crossAxisAlignment: CrossAxisAlignment.start,
        mainAxisSize: MainAxisSize.min,
        children: [
          Padding(
            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                Container(
                    height: getIt<Functions>().getWidgetHeight(height: 35),
                    width: getIt<Functions>().getWidgetWidth(width: 35),
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      color: Color(int.parse(selectedItem.typeColor)),
                    ),
                    child: Center(
                      child: Text(
                        selectedItem.itemType,
                        style: TextStyle(
                            color: const Color(0xffffffff),
                            fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 24 : 12),
                            fontWeight: FontWeight.w700),
                      ),
                    )),
                SizedBox(
                  width: getIt<Functions>().getWidgetWidth(width: 10),
                ),
                Expanded(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: Text(
                          selectedItem.itemName,
                          maxLines: 1,
                          style: TextStyle(
                              fontWeight: FontWeight.w600,
                              fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 18 : 14),
                              color: const Color(0xff282F3A),
                              overflow: TextOverflow.ellipsis),
                        ),
                      ),
                      SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: IntrinsicHeight(
                          child: Row(
                            children: [
                              Text(
                                context.read<PickListDetailsBloc>().tabIndex == 2
                                    ? "${getIt<Variables>().generalVariables.currentLanguage.totalItems} : ${selectedItem.quantity}  "
                                    : "${getIt<Variables>().generalVariables.currentLanguage.totalQuantityToPick} : ${selectedItem.quantity}  ",
                                style: TextStyle(
                                    fontWeight: FontWeight.w500,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                    color: const Color(0xff007AFF)),
                              ),
                              SizedBox(
                                height: getIt<Functions>().getWidgetHeight(height: 15),
                                child: const VerticalDivider(
                                  width: 0,
                                  thickness: 1,
                                  color: Color(0xff8A8D8E),
                                ),
                              ),
                              Text(
                                "  UOM : ${selectedItem.uom}  ",
                                style: TextStyle(
                                    fontWeight: FontWeight.w500,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                    color: const Color(0xff007AFF)),
                              ),
                              context.read<PickListDetailsBloc>().tabIndex == 2
                                  ? SizedBox(
                                      height: getIt<Functions>().getWidgetHeight(height: 15),
                                      child: const VerticalDivider(
                                        width: 0,
                                        thickness: 1,
                                        color: Color(0xff8A8D8E),
                                      ),
                                    )
                                  : const SizedBox(),
                              context.read<PickListDetailsBloc>().tabIndex == 2
                                  ? Text(
                                      "  ${getIt<Variables>().generalVariables.currentLanguage.qtyNeeded} : ${(num.parse(selectedItem.quantity) - num.parse(selectedItem.pickedQty)).toStringAsFixed(3)}",
                                      style: TextStyle(
                                          fontWeight: FontWeight.w500,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                          color: const Color(0xffF92C38)))
                                  : const SizedBox(),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)),
          const Divider(height: 0, thickness: 1, color: Color(0xffE0E7EC)),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)),
          Container(
            height:
                getIt<Functions>().getWidgetHeight(height: (selectedItem.batchesList.length >= 4 ? 160 : selectedItem.batchesList.length * 40) + 50),
            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
            child: DataTable2(
                columnSpacing: getIt<Functions>().getWidgetWidth(width: 0),
                horizontalMargin: getIt<Functions>().getWidgetWidth(width: 15),
                headingRowColor: const WidgetStatePropertyAll<Color>(Color(0xffE0E7EC)),
                headingRowDecoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                headingRowHeight: getIt<Functions>().getWidgetHeight(height: 40),
                dividerThickness: 0,
                dataRowHeight: getIt<Functions>().getWidgetHeight(height: 40),
                columns: selectedItem.catchWeightStatus == "No"
                    ? fromWhere == "partial"
                        ? [
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 8),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.L,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 8),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.L,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 8),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.stockType,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 8),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: Padding(
                                padding: const EdgeInsets.only(right: 3),
                                child: AutoSizeText(
                                  maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                                  minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 5),
                                  maxLines: 3,
                                  softWrap: true,
                                  getIt<Variables>().generalVariables.currentLanguage.pickedQty,
                                  style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                                ),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 8),
                                maxLines: 2,
                                softWrap: true,
                                context.read<PickListDetailsBloc>().tabIndex == 1
                                    ? getIt<Variables>().generalVariables.currentLanguage.pickedQty
                                    : getIt<Variables>().generalVariables.currentLanguage.qty,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                                textAlign: TextAlign.center,
                              ),
                              size: ColumnSize.S,
                            ),
                          ]
                        : [
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                style: TextStyle(
                                    color: const Color(0xff282F3A),
                                    fontWeight: FontWeight.w700,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                              ),
                              size: ColumnSize.L,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.stockType,
                                style: TextStyle(
                                    color: const Color(0xff282F3A),
                                    fontWeight: FontWeight.w700,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.isDeviceTablet
                                    ? getIt<Variables>().generalVariables.currentLanguage.requiredQty
                                    : getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                style: TextStyle(
                                    color: const Color(0xff282F3A),
                                    fontWeight: FontWeight.w700,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: Center(
                                child: AutoSizeText(
                                  maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                  minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                  maxLines: 2,
                                  softWrap: true,
                                  context.read<PickListDetailsBloc>().tabIndex == 1
                                      ? getIt<Variables>().generalVariables.currentLanguage.pickedQty
                                      : getIt<Variables>().generalVariables.currentLanguage.qty,
                                  style: TextStyle(
                                      color: const Color(0xff282F3A),
                                      fontWeight: FontWeight.w700,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                ),
                              ),
                              size: ColumnSize.M,
                            ),
                          ]
                    : fromWhere == "partial"
                        ? [
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.L,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.stockType,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.pickedQty,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                          ]
                        : [
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.L,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.currentLanguage.stockType,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.L,
                            ),
                            DataColumn2(
                              label: AutoSizeText(
                                maxFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                minFontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 9),
                                maxLines: 2,
                                softWrap: true,
                                getIt<Variables>().generalVariables.isDeviceTablet
                                    ? getIt<Variables>().generalVariables.currentLanguage.requiredQty
                                    : getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                style: const TextStyle(color: Color(0xff282F3A), fontWeight: FontWeight.w700),
                              ),
                              size: ColumnSize.M,
                            ),
                          ],
                rows: List<DataRow>.generate(selectedItem.batchesList.length, (i) {
                  return DataRow(
                      cells: selectedItem.catchWeightStatus == "No"
                          ? fromWhere == "partial"
                              ? [
                                  DataCell(Text(selectedItem.batchesList[i].batchNum,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Padding(
                                    padding: const EdgeInsets.only(right: 5),
                                    child: FittedBox(
                                      child: Text(selectedItem.batchesList[i].expiryDate,
                                          style: TextStyle(
                                              color: const Color(0xff282F3A),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))),
                                    ),
                                  )),
                                  DataCell(Text(selectedItem.batchesList[i].stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Center(
                                      child: Text(selectedItem.batchesList[i].quantity,
                                          style: TextStyle(
                                              color: const Color(0xffC38C19),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                  DataCell(Center(
                                      child: Text(selectedItem.batchesList[i].pickedQty,
                                          style: TextStyle(
                                              color: const Color(0xffC38C19),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                  DataCell(Column(
                                    children: [
                                      SizedBox(
                                        height: getIt<Functions>().getWidgetHeight(height: 30),
                                        child: TextFormField(
                                          controller: controllersList[i],
                                          readOnly: selectedItem.batchesList[i].quantity == selectedItem.batchesList[i].pickedQty ? true : false,
                                          enabled: selectedItem.batchesList[i].quantity != selectedItem.batchesList[i].pickedQty &&
                                              getIt<Variables>().generalVariables.userData.userProfile.id == selectedItem.handledBy[0].id,
                                          cursorColor: Colors.black,
                                          textAlign: TextAlign.center,
                                          autofocus: true,
                                          inputFormatters: [
                                            NumberInputFormatter(onError: (value) {
                                              context.read<PickListDetailsBloc>().formatError = value;
                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                            })
                                          ],
                                          style: TextStyle(
                                              color: const Color(0xff282F3A),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                          keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                          decoration: InputDecoration(
                                            hintText: "00",
                                            hintStyle: TextStyle(
                                                fontWeight: FontWeight.w400,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                                color: Colors.grey),
                                            border: const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            enabledBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            disabledBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            errorBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                            focusedBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.blue, width: 0.73)),
                                            focusedErrorBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                            errorStyle: const TextStyle(height: 0.001),
                                          ),
                                          autovalidateMode: AutovalidateMode.onUserInteraction,
                                          validator: (String? value) {
                                            if (value != null && value != "") {
                                              if (value == ".") {
                                              } else if ((num.parse(value) + num.parse(selectedItem.batchesList[i].pickedQty)) >
                                                  num.parse(selectedItem.batchesList[i].quantity)) {
                                                context.read<PickListDetailsBloc>().formatError = false;
                                                context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                context.read<PickListDetailsBloc>().moreQuantityError = true;
                                                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                return "";
                                              } else {
                                                context.read<PickListDetailsBloc>().formatError = false;
                                                context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                              }
                                            } else {
                                              context.read<PickListDetailsBloc>().formatError = false;
                                              context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                            }
                                            return null;
                                          },
                                        ),
                                      ),
                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                    ],
                                  )),
                                ]
                              : [
                                  DataCell(Text(selectedItem.batchesList[i].batchNum,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Text(selectedItem.batchesList[i].expiryDate,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Text(selectedItem.batchesList[i].stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Center(
                                      child: Text(selectedItem.batchesList[i].quantity,
                                          style: TextStyle(
                                              color: const Color(0xffC38C19),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                  DataCell(Column(
                                    children: [
                                      SizedBox(
                                        height: getIt<Functions>().getWidgetHeight(height: 30),
                                        child: fromWhere == "picked"
                                            ? TextFormField(
                                                initialValue: selectedItem.batchesList[i].pickedQty,
                                                readOnly: true,
                                                cursorColor: Colors.black,
                                                textAlign: TextAlign.center,
                                                style: TextStyle(
                                                    color: const Color(0xff282F3A),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                                enabled: false,
                                                keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                decoration: InputDecoration(
                                                  hintText: "00",
                                                  hintStyle: TextStyle(
                                                      fontWeight: FontWeight.w400,
                                                      fontSize: getIt<Functions>()
                                                          .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                                      color: Colors.grey),
                                                  border: const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  enabledBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  disabledBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  errorBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                  focusedBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.blue, width: 0.73)),
                                                  focusedErrorBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                  errorStyle: const TextStyle(height: 0.001),
                                                ),
                                              )
                                            : TextFormField(
                                                controller: controllersList[i],
                                                cursorColor: Colors.black,
                                                textAlign: TextAlign.center,
                                                autofocus: true,
                                                inputFormatters: [
                                                  NumberInputFormatter(onError: (value) {
                                                    context.read<PickListDetailsBloc>().formatError = value;
                                                    context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                  })
                                                ],
                                                style: TextStyle(
                                                    color: const Color(0xff282F3A),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                                keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                decoration: InputDecoration(
                                                  hintText: "00",
                                                  hintStyle: TextStyle(
                                                      fontWeight: FontWeight.w400,
                                                      fontSize: getIt<Functions>()
                                                          .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                                      color: Colors.grey),
                                                  border: const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  enabledBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  disabledBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  errorBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                  focusedBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.blue, width: 0.73)),
                                                  focusedErrorBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                  errorStyle: const TextStyle(height: 0.001),
                                                ),
                                                autovalidateMode: AutovalidateMode.onUserInteraction,
                                                validator: (String? value) {
                                                  if (value != null && value != "") {
                                                    if (value == ".") {
                                                    } else if (num.parse(value) > num.parse(selectedItem.batchesList[i].quantity)) {
                                                      context.read<PickListDetailsBloc>().formatError = false;
                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                      context.read<PickListDetailsBloc>().moreQuantityError = true;
                                                      context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                      return "";
                                                    } else {
                                                      context.read<PickListDetailsBloc>().formatError = false;
                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                      context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                    }
                                                  } else {
                                                    context.read<PickListDetailsBloc>().formatError = false;
                                                    context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                    context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                    context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                  }
                                                  return null;
                                                },
                                              ),
                                      ),
                                      SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                    ],
                                  )),
                                ]
                          : fromWhere == "partial"
                              ? [
                                  DataCell(Text(selectedItem.batchesList[i].batchNum,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Text(selectedItem.batchesList[i].expiryDate,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Text(selectedItem.batchesList[i].stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Center(
                                      child: Text(selectedItem.batchesList[i].quantity,
                                          style: TextStyle(
                                              color: const Color(0xffC38C19),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                  DataCell(Center(
                                      child: Text(selectedItem.batchesList[i].pickedQty,
                                          style: TextStyle(
                                              color: const Color(0xffC38C19),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>()
                                                  .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                ]
                              : [
                                  DataCell(Text(selectedItem.batchesList[i].batchNum,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Text(selectedItem.batchesList[i].expiryDate,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Text(selectedItem.batchesList[i].stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w500,
                                          fontSize: getIt<Functions>()
                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                  DataCell(Center(
                                      child: Text(selectedItem.batchesList[i].quantity,
                                          style: TextStyle(
                                              color: const Color(0xffC38C19),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11))))),
                                ]);
                })),
          ),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
          BlocBuilder<PickListDetailsBloc, PickListDetailsState>(builder: (BuildContext context, PickListDetailsState state) {
            return Column(
              children: [
                selectedItem.catchWeightStatus != "No" ? SizedBox(height: getIt<Functions>().getWidgetHeight(height: 12)) : const SizedBox(),
                selectedItem.catchWeightStatus != "No" ? const Divider(height: 0, thickness: 1, color: Color(0xffE0E7EC)) : const SizedBox(),
                selectedItem.catchWeightStatus != "No" ? SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)) : const SizedBox(),
                selectedItem.catchWeightStatus != "No"
                    ? Padding(
                        padding: EdgeInsets.symmetric(
                            horizontal: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 12)),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              getIt<Variables>().generalVariables.currentLanguage.catchWeight,
                              style: TextStyle(
                                  color: const Color(0xff282F3A),
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                            ),
                            SizedBox(
                              height: getIt<Functions>().getWidgetHeight(height: 10),
                            ),
                            Row(
                              children: [
                                Expanded(
                                  child: Wrap(
                                    alignment: WrapAlignment.start,
                                    children: List.generate(
                                        selectedItem.catchWeightInfo.length,
                                        (idx) => InkWell(
                                              onTap: context.read<PickListDetailsBloc>().tabIndex == 2
                                                  ? getIt<Variables>().generalVariables.userData.userProfile.id == selectedItem.handledBy[0].id
                                                      ? () {
                                                          if (!selectedItem.catchWeightInfo[idx].isSelectedAlready) {
                                                            selectedItem.catchWeightInfo[idx].isSelected =
                                                                !selectedItem.catchWeightInfo[idx].isSelected;
                                                            if (selectedItem.catchWeightInfo[idx].isSelected) {
                                                              context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                            }
                                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                          }
                                                        }
                                                      : () {}
                                                  : () {
                                                      if (!selectedItem.catchWeightInfo[idx].isSelectedAlready) {
                                                        selectedItem.catchWeightInfo[idx].isSelected = !selectedItem.catchWeightInfo[idx].isSelected;
                                                        if (selectedItem.catchWeightInfo[idx].isSelected) {
                                                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                        }
                                                        context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                      }
                                                    },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 25),
                                                padding: EdgeInsets.symmetric(
                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 8),
                                                    vertical: getIt<Functions>().getWidgetHeight(height: 4)),
                                                margin: EdgeInsets.only(
                                                    left: getIt<Functions>().getWidgetWidth(width: idx == 0 ? 0 : 6),
                                                    top: getIt<Functions>().getWidgetHeight(height: 6)),
                                                decoration: BoxDecoration(
                                                  borderRadius: BorderRadius.circular(8),
                                                  color: selectedItem.catchWeightInfo[idx].isSelected
                                                      ? const Color(0xff29B473)
                                                      : const Color(0xffEEF4FF),
                                                ),
                                                child: Text(
                                                  selectedItem.catchWeightInfo[idx].data,
                                                  style: TextStyle(
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                      fontWeight: FontWeight.w500,
                                                      color: selectedItem.catchWeightInfo[idx].isSelected
                                                          ? const Color(0xffffffff)
                                                          : const Color(0xff1D2736)),
                                                ),
                                              ),
                                            )),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      )
                    : const SizedBox(),
                Padding(
                  padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12.0)),
                  child: Text(
                    context.read<PickListDetailsBloc>().formatError
                        ? "${getIt<Variables>().generalVariables.currentLanguage.lessThan10000} ${context.read<PickListDetailsBloc>().pickListDetailsResponse.items[index].uom} (ex: 9999.999)."
                        : context.read<PickListDetailsBloc>().moreQuantityError
                            ? getIt<Variables>().generalVariables.currentLanguage.enteringMoreQty
                            : context.read<PickListDetailsBloc>().allFieldsEmpty
                                ? getIt<Variables>().generalVariables.currentLanguage.pleaseEnterQuantity
                                : "",
                    style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 10), color: Colors.red, fontWeight: FontWeight.w600),
                  ),
                ),
              ],
            );
          }),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
          BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
            listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
              return previous != current;
            },
            buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
              return previous != current;
            },
            listener: (BuildContext context, PickListDetailsState state) {
              if (state is PickListDetailsSuccess) {
                context.read<PickListDetailsBloc>().updateLoader = false;
                Navigator.pop(context);
                ScaffoldMessenger.of(context).clearSnackBars();
                if (state.message != "") {
                  ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
                }
              }
              if (state is PickListDetailsFailure) {
                context.read<PickListDetailsBloc>().updateLoader = false;
                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
              }
              if (state is PickListDetailsError) {
                ScaffoldMessenger.of(context).clearSnackBars();
                getIt<Widgets>().flushBarWidget(context: context, message: state.message);
              }
            },
            builder: (BuildContext context, PickListDetailsState state) {
              return context.read<PickListDetailsBloc>().pickListDetailsResponse.isCompleted
                  ? InkWell(
                      onTap: () {
                        FocusManager.instance.primaryFocus!.unfocus();
                        Navigator.pop(context);
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xffE0E7EC),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                              style: TextStyle(
                                  color: const Color(0xff282F3A),
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                              textAlign: TextAlign.center),
                        ),
                      ),
                    )
                  : context.read<PickListDetailsBloc>().updateLoader
                      ? Center(
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              const CircularProgressIndicator(),
                              SizedBox(
                                height: getIt<Functions>().getWidgetHeight(height: 15),
                              ),
                            ],
                          ),
                        )
                      : context.read<PickListDetailsBloc>().tabIndex == 0
                          ? SizedBox(
                              height: getIt<Functions>().getWidgetHeight(height: 50),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  InkWell(
                                    onTap: () {
                                      Navigator.pop(context);
                                      getIt<Variables>().generalVariables.popUpWidget = locationUpdatingContent(
                                          selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isPicking: isPicking);
                                      getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                    },
                                    child: Container(
                                      height: getIt<Functions>().getWidgetHeight(height: 50),
                                      width: getIt<Functions>().getWidgetWidth(width: 100),
                                      decoration: const BoxDecoration(
                                        color: Color(0xffEEF4FF),
                                        borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15)),
                                      ),
                                      child: Center(
                                        child: Image.asset(
                                          "assets/pick_list/location_update.png",
                                          height: getIt<Functions>().getWidgetHeight(height: 24),
                                          width: getIt<Functions>().getWidgetWidth(width: 24),
                                          fit: BoxFit.fill,
                                        ),
                                      ),
                                    ),
                                  ),
                                  Expanded(
                                    child: InkWell(
                                      onTap: () {
                                        Navigator.pop(context);
                                        getIt<Variables>().generalVariables.popUpWidget = unavailableContent(
                                            selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isPicking: isPicking);
                                        getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                      },
                                      child: Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                        padding: EdgeInsets.symmetric(
                                            horizontal:
                                                getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 2 : 5)),
                                        decoration: const BoxDecoration(
                                          color: Color(0xffDC474A),
                                        ),
                                        child: Center(
                                          child: AutoSizeText(
                                            maxFontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                            minFontSize: getIt<Functions>().getTextSize(fontSize: 8),
                                            maxLines: 2,
                                            getIt<Variables>().generalVariables.currentLanguage.markAsUnavailable.toUpperCase(),
                                            style: const TextStyle(color: Color(0xffffffff), fontWeight: FontWeight.w600),
                                            textAlign: TextAlign.center,
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  Expanded(
                                    child: InkWell(
                                      onTap: () {
                                        if (selectedItem.catchWeightStatus != "No") {
                                          for (int i = 0; i < selectedItem.catchWeightInfo.length; i++) {
                                            if (selectedItem.catchWeightInfo[i].isSelected) {
                                              context.read<PickListDetailsBloc>().pickedCatchWeightData.add(selectedItem.catchWeightInfo[i].data);
                                            }
                                          }
                                          if (context.read<PickListDetailsBloc>().pickedCatchWeightData.isEmpty) {
                                            context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                          } else {
                                            context.read<PickListDetailsBloc>().updateLoader = true;
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                            context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                          }
                                        }
                                        else {
                                          if (!context.read<PickListDetailsBloc>().moreQuantityError) {
                                            for (int i = 0; i < selectedItem.batchesList.length; i++) {
                                              if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                if (num.parse(controllersList[i].text) != 0) {
                                                  if (num.parse(controllersList[i].text) <= num.parse(selectedItem.batchesList[i].quantity)) {
                                                    context.read<PickListDetailsBloc>().pickedQuantityData[selectedItem.batchesList[i].id] = controllersList[i].text;
                                                  }
                                                }
                                              }
                                            }
                                            if (context.read<PickListDetailsBloc>().pickedQuantityData.keys.isEmpty) {
                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                              context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                            }
                                            else {
                                              context.read<PickListDetailsBloc>().updateLoader = true;
                                              FocusManager.instance.primaryFocus!.unfocus();
                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                              context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                              context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                  controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                            }
                                          }
                                        }
                                      },
                                      child: Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                        padding: EdgeInsets.symmetric(
                                            horizontal:
                                                getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 2 : 5)),
                                        decoration: const BoxDecoration(
                                          color: Color(0xff007838),
                                          borderRadius: BorderRadius.only(bottomRight: Radius.circular(15)),
                                        ),
                                        child: Center(
                                          child: FittedBox(
                                            child: AutoSizeText(
                                                maxFontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                maxLines: 1,
                                                getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase(),
                                                style: const TextStyle(
                                                  color: Color(0xffffffff),
                                                  fontWeight: FontWeight.w600,
                                                ),
                                                textAlign: TextAlign.center),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            )
                          : context.read<PickListDetailsBloc>().tabIndex == 3
                              ? Row(
                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    InkWell(
                                      onTap: () {
                                        Navigator.pop(context);
                                        getIt<Variables>().generalVariables.popUpWidget = locationUpdatingContent(
                                            selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isPicking: isPicking);
                                        getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                      },
                                      child: Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                        width: getIt<Functions>().getWidgetWidth(width: 100),
                                        decoration: const BoxDecoration(
                                          color: Color(0xffEEF4FF),
                                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15)),
                                        ),
                                        child: Center(
                                          child: Image.asset(
                                            "assets/pick_list/location_update.png",
                                            height: getIt<Functions>().getWidgetHeight(height: 24),
                                            width: getIt<Functions>().getWidgetWidth(width: 24),
                                            fit: BoxFit.fill,
                                          ),
                                        ),
                                      ),
                                    ),
                                    InkWell(
                                      onTap: () {
                                        if (selectedItem.catchWeightStatus != "No") {
                                          for (int i = 0; i < selectedItem.catchWeightInfo.length; i++) {
                                            if (selectedItem.catchWeightInfo[i].isSelected) {
                                              context.read<PickListDetailsBloc>().pickedCatchWeightData.add(selectedItem.catchWeightInfo[i].data);
                                            }
                                          }
                                          if (context.read<PickListDetailsBloc>().pickedCatchWeightData.isEmpty) {
                                            context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                          } else {
                                            context.read<PickListDetailsBloc>().updateLoader = true;
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                            context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                          }
                                        } else {
                                          if (!context.read<PickListDetailsBloc>().moreQuantityError) {
                                            for (int i = 0; i < selectedItem.batchesList.length; i++) {
                                              if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                if (num.parse(controllersList[i].text) != 0) {
                                                  if (num.parse(controllersList[i].text) <= num.parse(selectedItem.batchesList[i].quantity)) {
                                                    context.read<PickListDetailsBloc>().pickedQuantityData[selectedItem.batchesList[i].id] =
                                                        controllersList[i].text;
                                                  }
                                                }
                                              }
                                            }
                                            if (context.read<PickListDetailsBloc>().pickedQuantityData.keys.isEmpty) {
                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                              context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                            } else {
                                              context.read<PickListDetailsBloc>().updateLoader = true;
                                              FocusManager.instance.primaryFocus!.unfocus();
                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                              context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                              context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                  controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                            }
                                          }
                                        }
                                      },
                                      child: Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                        width:
                                            getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 500 : 312),
                                        decoration: const BoxDecoration(
                                          color: Color(0xff007838),
                                          borderRadius: BorderRadius.only(bottomRight: Radius.circular(15)),
                                        ),
                                        child: Center(
                                          child: Text(
                                            getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase(),
                                            style: TextStyle(
                                                color: const Color(0xffffffff),
                                                fontWeight: FontWeight.w600,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                )
                              : context.read<PickListDetailsBloc>().tabIndex == 2
                                  ? getIt<Variables>().generalVariables.userData.userProfile.id == selectedItem.handledBy[0].id
                                      ? isPicking
                                          ? SizedBox(
                                              height: getIt<Functions>().getWidgetHeight(height: 50),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Expanded(
                                                    child: InkWell(
                                                      onTap: () {
                                                        context.read<PickListDetailsBloc>().updateLoader = true;
                                                        FocusManager.instance.primaryFocus!.unfocus();
                                                        context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                        context.read<PickListDetailsBloc>().add(const PickListDetailsUndoPickedEvent());
                                                      },
                                                      child: Container(
                                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                                        width: getIt<Functions>()
                                                            .getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 300 : 206),
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xffDC474A),
                                                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15)),
                                                        ),
                                                        child: Center(
                                                          child: AutoSizeText(
                                                            maxFontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                            maxLines: 2,
                                                            getIt<Variables>().generalVariables.currentLanguage.undoPicked.toUpperCase(),
                                                            style: TextStyle(
                                                                color: const Color(0xffffffff),
                                                                fontWeight: FontWeight.w600,
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                            textAlign: TextAlign.center,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Expanded(
                                                    child: InkWell(
                                                      onTap: () {
                                                        if (selectedItem.catchWeightStatus != "No") {
                                                          for (int i = 0; i < selectedItem.catchWeightInfo.length; i++) {
                                                            if (selectedItem.catchWeightInfo[i].isSelected) {
                                                              context
                                                                  .read<PickListDetailsBloc>()
                                                                  .pickedCatchWeightData
                                                                  .add(selectedItem.catchWeightInfo[i].data);
                                                            }
                                                          }
                                                          if (context.read<PickListDetailsBloc>().pickedCatchWeightData.isEmpty) {
                                                            context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                          } else {
                                                            context.read<PickListDetailsBloc>().updateLoader = true;
                                                            FocusManager.instance.primaryFocus!.unfocus();
                                                            context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                            context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                                controllersList:
                                                                    List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                          }
                                                        } else {
                                                          if (!context.read<PickListDetailsBloc>().moreQuantityError) {
                                                            for (int i = 0; i < selectedItem.batchesList.length; i++) {
                                                              if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                                if (num.parse(controllersList[i].text) != 0) {
                                                                  if (num.parse(controllersList[i].text) <=
                                                                      num.parse(selectedItem.batchesList[i].quantity)) {
                                                                    context
                                                                        .read<PickListDetailsBloc>()
                                                                        .pickedQuantityData[selectedItem.batchesList[i].id] = controllersList[i].text;
                                                                  }
                                                                }
                                                              }
                                                            }
                                                            if (context.read<PickListDetailsBloc>().pickedQuantityData.keys.isEmpty) {
                                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                              context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                            } else {
                                                              context.read<PickListDetailsBloc>().updateLoader = true;
                                                              FocusManager.instance.primaryFocus!.unfocus();
                                                              context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                              context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                              context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                                  controllersList:
                                                                      List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                            }
                                                          }
                                                        }
                                                      },
                                                      child: Container(
                                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                                        width: getIt<Functions>()
                                                            .getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 300 : 206),
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xff007838),
                                                          borderRadius: BorderRadius.only(bottomRight: Radius.circular(15)),
                                                        ),
                                                        child: Center(
                                                          child: AutoSizeText(
                                                              maxFontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                              maxLines: 1,
                                                              getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase(),
                                                              style: TextStyle(
                                                                  color: const Color(0xffffffff),
                                                                  fontWeight: FontWeight.w600,
                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                              textAlign: TextAlign.center),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            )
                                          : InkWell(
                                              onTap: () {
                                                if (selectedItem.catchWeightStatus != "No") {
                                                  for (int i = 0; i < selectedItem.catchWeightInfo.length; i++) {
                                                    if (selectedItem.catchWeightInfo[i].isSelected) {
                                                      context
                                                          .read<PickListDetailsBloc>()
                                                          .pickedCatchWeightData
                                                          .add(selectedItem.catchWeightInfo[i].data);
                                                    }
                                                  }
                                                  if (context.read<PickListDetailsBloc>().pickedCatchWeightData.isEmpty) {
                                                    context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                                    context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                  } else {
                                                    context.read<PickListDetailsBloc>().updateLoader = true;
                                                    FocusManager.instance.primaryFocus!.unfocus();
                                                    context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                    context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                    context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                        controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                  }
                                                } else {
                                                  if (!context.read<PickListDetailsBloc>().moreQuantityError) {
                                                    for (int i = 0; i < selectedItem.batchesList.length; i++) {
                                                      if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                        if (num.parse(controllersList[i].text) != 0) {
                                                          if (num.parse(controllersList[i].text) <= num.parse(selectedItem.batchesList[i].quantity)) {
                                                            context.read<PickListDetailsBloc>().pickedQuantityData[selectedItem.batchesList[i].id] =
                                                                controllersList[i].text;
                                                          }
                                                        }
                                                      }
                                                    }
                                                    if (context.read<PickListDetailsBloc>().pickedQuantityData.keys.isEmpty) {
                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                                                      context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                    } else {
                                                      context.read<PickListDetailsBloc>().updateLoader = true;
                                                      FocusManager.instance.primaryFocus!.unfocus();
                                                      context.read<PickListDetailsBloc>().moreQuantityError = false;
                                                      context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                                      context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                      context.read<PickListDetailsBloc>().add(PickListDetailsPickedEvent(
                                                          controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                    }
                                                  }
                                                }
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 50),
                                                decoration: const BoxDecoration(
                                                  color: Color(0xff007838),
                                                  borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                                ),
                                                child: Center(
                                                  child: Text(getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase(),
                                                      style: TextStyle(
                                                          color: const Color(0xffffffff),
                                                          fontWeight: FontWeight.w600,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                      textAlign: TextAlign.center),
                                                ),
                                              ),
                                            )
                                      : InkWell(
                                          onTap: () {
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            Navigator.pop(context);
                                          },
                                          child: Container(
                                            height: getIt<Functions>().getWidgetHeight(height: 50),
                                            decoration: const BoxDecoration(
                                              color: Color(0xffE0E7EC),
                                              borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                            ),
                                            child: Center(
                                              child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                                                  style: TextStyle(
                                                      color: const Color(0xff282F3A),
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                  textAlign: TextAlign.center),
                                            ),
                                          ),
                                        )
                                  : getIt<Variables>().generalVariables.userData.userProfile.id == selectedItem.handledBy[0].id
                                      ? isPicking
                                          ? InkWell(
                                              onTap: () {
                                                context.read<PickListDetailsBloc>().updateLoader = true;
                                                FocusManager.instance.primaryFocus!.unfocus();
                                                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                                context.read<PickListDetailsBloc>().add(const PickListDetailsUndoPickedEvent());
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 50),
                                                decoration: const BoxDecoration(
                                                  color: Color(0xffDC474A),
                                                  borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                                ),
                                                child: Center(
                                                  child: Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.undoPicked.toUpperCase(),
                                                    style: TextStyle(
                                                        color: const Color(0xffffffff),
                                                        fontWeight: FontWeight.w600,
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ),
                                              ),
                                            )
                                          : InkWell(
                                              onTap: () {
                                                FocusManager.instance.primaryFocus!.unfocus();
                                                Navigator.pop(context);
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 50),
                                                decoration: const BoxDecoration(
                                                  color: Color(0xffE0E7EC),
                                                  borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                                ),
                                                child: Center(
                                                  child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                                                      style: TextStyle(
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                      textAlign: TextAlign.center),
                                                ),
                                              ),
                                            )
                                      : InkWell(
                                          onTap: () {
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            Navigator.pop(context);
                                          },
                                          child: Container(
                                            height: getIt<Functions>().getWidgetHeight(height: 50),
                                            decoration: const BoxDecoration(
                                              color: Color(0xffE0E7EC),
                                              borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                            ),
                                            child: Center(
                                              child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                                                  style: TextStyle(
                                                      color: const Color(0xff282F3A),
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                  textAlign: TextAlign.center),
                                            ),
                                          ),
                                        );
            },
          )
        ],
      ),
    );
  }

  Widget unavailableContent({
    required String fromWhere,
    required bool isPicking,
    required PickListDetailsItem selectedItem,
    required int index,
    required int idx,
  }) {
    context.read<PickListDetailsBloc>().selectedPickListItemId = selectedItem.id;
    context.read<PickListDetailsBloc>().selectedItemId = selectedItem.itemId;
    context.read<PickListDetailsBloc>().updateLoader = false;
    context.read<PickListDetailsBloc>().selectItemEmpty = false;
    context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
    context.read<PickListDetailsBloc>().commentTextEmpty = false;
    context.read<PickListDetailsBloc>().selectedReason = "";
    context.read<PickListDetailsBloc>().selectedReasonName = null;
    context.read<PickListDetailsBloc>().selectedAltItemId = "";
    context.read<PickListDetailsBloc>().selectedItemName = null;
    reasonSearchFieldController.clear();
    itemSearchFieldController.clear();
    commentsBar.clear();
    return BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
      listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      listener: (BuildContext context, PickListDetailsState state) {
        if (state is PickListDetailsSuccess) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          Navigator.pop(context);
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
        if (state is PickListDetailsFailure) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
        }
        if (state is PickListDetailsError) {
          ScaffoldMessenger.of(context).clearSnackBars();
          getIt<Widgets>().flushBarWidget(context: context, message: state.message);
        }
      },
      builder: (BuildContext context, PickListDetailsState state) {
        return SizedBox(
          width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 600 : 415),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.start,
            mainAxisSize: MainAxisSize.min,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    InkWell(
                        onTap: context.read<PickListDetailsBloc>().updateLoader
                            ? () {}
                            : () {
                                FocusManager.instance.primaryFocus!.unfocus();
                                Navigator.pop(context);
                                context.read<PickListDetailsBloc>().moreQuantityError = false;
                                context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                getIt<Variables>().generalVariables.popUpWidget =
                                    yetToPickContent(selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isPicking: isPicking);
                                getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                              },
                        child: const Icon(
                          Icons.arrow_back,
                          color: Color(0xff292D32),
                        )),
                    Container(
                        height: getIt<Functions>().getWidgetHeight(height: 35),
                        width: getIt<Functions>().getWidgetWidth(width: 35),
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          color: Color(int.parse(selectedItem.typeColor)),
                        ),
                        child: Center(
                          child: Text(
                            selectedItem.itemType,
                            style: TextStyle(
                                color: const Color(0xffffffff), fontSize: getIt<Functions>().getTextSize(fontSize: 12), fontWeight: FontWeight.w700),
                          ),
                        )),
                    SizedBox(
                      width: getIt<Functions>().getWidgetWidth(width: 10),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          SingleChildScrollView(
                            scrollDirection: Axis.horizontal,
                            child: Text(
                              selectedItem.itemName,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 18 : 14),
                                  color: const Color(0xff282F3A)),
                            ),
                          ),
                          Text(
                            "${getIt<Variables>().generalVariables.currentLanguage.requiredQuantity} : ${selectedItem.quantity}${selectedItem.uom}",
                            style: TextStyle(
                                fontWeight: FontWeight.w500,
                                fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                color: const Color(0xff007AFF)),
                          ),
                        ],
                      ),
                    )
                  ],
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: 24),
              ),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 25),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 75),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            getIt<Variables>().generalVariables.currentLanguage.reason,
                            style: TextStyle(
                                color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 45),
                            child: buildDropButton(isItem: false, isLoading: context.read<PickListDetailsBloc>().updateLoader),
                          )
                        ],
                      ),
                    ),
                    context.read<PickListDetailsBloc>().selectedReasonEmpty
                        ? Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseSelectReason,
                            style: TextStyle(color: Colors.red, fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 10)),
                          )
                        : const SizedBox(),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 15),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 75),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            getIt<Variables>().generalVariables.currentLanguage.comments,
                            style: TextStyle(
                                color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 45),
                            child: TextFormField(
                              controller: commentsBar,
                              onChanged: (value) {
                                context.read<PickListDetailsBloc>().commentTextEmpty = value.isEmpty ? true : false;
                                context.read<PickListDetailsBloc>().commentText = value.isEmpty ? "" : value;
                                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                              },
                              decoration: InputDecoration(
                                fillColor: const Color(0xffffffff),
                                filled: true,
                                contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                enabledBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                disabledBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                errorBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                focusedBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                focusedErrorBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                hintText: getIt<Variables>().generalVariables.currentLanguage.enterComments,
                                hintStyle: TextStyle(
                                  color: const Color(0xff8A8D8E),
                                  fontWeight: FontWeight.w400,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                ),
                              ),
                              validator: (value) =>
                                  value!.isEmpty ? getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheComments : null,
                            ),
                          )
                        ],
                      ),
                    ),
                    context.read<PickListDetailsBloc>().commentTextEmpty
                        ? Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheComments,
                            style: TextStyle(color: Colors.red, fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 10)),
                          )
                        : const SizedBox(),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 15),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 75),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            getIt<Variables>().generalVariables.currentLanguage.alternativeItem,
                            style: TextStyle(
                                color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 45),
                            child: buildDropButton(isItem: true, isLoading: context.read<PickListDetailsBloc>().updateLoader),
                          )
                        ],
                      ),
                    ),
                    context.read<PickListDetailsBloc>().selectItemEmpty
                        ? Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseSelectAlterNativeItem,
                            style: TextStyle(color: Colors.red, fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 10)),
                          )
                        : const SizedBox(),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 45),
                    ),
                  ],
                ),
              ),
              context.read<PickListDetailsBloc>().updateLoader
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const CircularProgressIndicator(),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 15),
                          ),
                        ],
                      ),
                    )
                  : InkWell(
                      onTap: () {
                        if (context.read<PickListDetailsBloc>().selectedReason == "" || commentsBar.text == "") {
                          if (context.read<PickListDetailsBloc>().selectedReason == "") {
                            context.read<PickListDetailsBloc>().selectedReasonEmpty = true;
                            context.read<PickListDetailsBloc>().commentTextEmpty = false;
                            context.read<PickListDetailsBloc>().selectItemEmpty = false;
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          } else if (commentsBar.text == "") {
                            context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
                            context.read<PickListDetailsBloc>().commentTextEmpty = true;
                            context.read<PickListDetailsBloc>().selectItemEmpty = false;
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          } else {}
                        } else {
                          if (context.read<PickListDetailsBloc>().selectedAltItemId == "" && itemSearchFieldController.text.isNotEmpty) {
                            context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
                            context.read<PickListDetailsBloc>().commentTextEmpty = false;
                            context.read<PickListDetailsBloc>().selectItemEmpty = true;
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          } else {
                            context.read<PickListDetailsBloc>().updateLoader = true;
                            FocusManager.instance.primaryFocus!.unfocus();
                            context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
                            context.read<PickListDetailsBloc>().commentTextEmpty = false;
                            context.read<PickListDetailsBloc>().selectItemEmpty = false;
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                            context.read<PickListDetailsBloc>().add(const PickListDetailsUnavailableEvent());
                          }
                        }
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xffF92C38),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(
                            getIt<Variables>().generalVariables.currentLanguage.markAsUnavailable.toUpperCase(),
                            textAlign: TextAlign.center,
                            style: TextStyle(
                                color: const Color(0xffffffff), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                          ),
                        ),
                      ),
                    ),
            ],
          ),
        );
      },
    );
  }

  Widget locationUpdatingContent({
    required String fromWhere,
    required bool isPicking,
    required PickListDetailsItem selectedItem,
    required int index,
    required int idx,
  }) {
    List<TextEditingController> controllersList = List.generate(3, (i) => TextEditingController());
    List<String> nameList = [
      getIt<Variables>().generalVariables.currentLanguage.floor,
      getIt<Variables>().generalVariables.currentLanguage.room,
      getIt<Variables>().generalVariables.currentLanguage.zone
    ];
    String errorString = "";
    context.read<PickListDetailsBloc>().updateLoader = false;
    context.read<PickListDetailsBloc>().selectedFloor = null;
    LocationDisputeInfo locationDisputeInfo = (selectedItem.locationDisputeInfo.runtimeType != List<dynamic>)
        ? LocationDisputeInfo.fromJson(selectedItem.locationDisputeInfo)
        : LocationDisputeInfo.fromJson({});
    return BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
      listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      listener: (BuildContext context, PickListDetailsState state) {
        if (state is PickListDetailsSuccess) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          Navigator.pop(context);
          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
        if (state is PickListDetailsFailure) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
        }
        if (state is PickListDetailsError) {
          ScaffoldMessenger.of(context).clearSnackBars();
          getIt<Widgets>().flushBarWidget(context: context, message: state.message);
        }
      },
      builder: (BuildContext context, PickListDetailsState state) {
        return SizedBox(
          width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 600 : 415),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            mainAxisSize: MainAxisSize.min,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    InkWell(
                        onTap: context.read<PickListDetailsBloc>().updateLoader
                            ? () {}
                            : () {
                                FocusManager.instance.primaryFocus!.unfocus();
                                Navigator.pop(context);
                                context.read<PickListDetailsBloc>().moreQuantityError = false;
                                context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                                getIt<Variables>().generalVariables.popUpWidget =
                                    yetToPickContent(selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isPicking: isPicking);
                                getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                              },
                        child: const Icon(
                          Icons.arrow_back,
                          color: Color(0xff292D32),
                        )),
                    Container(
                        height: getIt<Functions>().getWidgetHeight(height: 35),
                        width: getIt<Functions>().getWidgetWidth(width: 35),
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          color: Color(int.parse(selectedItem.typeColor)),
                        ),
                        child: Center(
                          child: Text(
                            selectedItem.itemType,
                            style: TextStyle(
                                color: const Color(0xffffffff), fontSize: getIt<Functions>().getTextSize(fontSize: 12), fontWeight: FontWeight.w700),
                          ),
                        )),
                    SizedBox(
                      width: getIt<Functions>().getWidgetWidth(width: 10),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          SingleChildScrollView(
                            scrollDirection: Axis.horizontal,
                            child: Text(
                              selectedItem.itemName,
                              maxLines: 1,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 18 : 14),
                                  color: const Color(0xff282F3A),
                                  overflow: TextOverflow.ellipsis),
                            ),
                          ),
                          Text(
                            "${getIt<Variables>().generalVariables.currentLanguage.itemCode} : ${selectedItem.itemCode}",
                            style: TextStyle(
                                fontWeight: FontWeight.w500,
                                fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                color: const Color(0xff007AFF)),
                          ),
                        ],
                      ),
                    )
                  ],
                ),
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 24)),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              locationDisputeInfo.updatedOn == "" ? const SizedBox() : SizedBox(height: getIt<Functions>().getWidgetHeight(height: 12)),
              locationDisputeInfo.updatedOn == ""
                  ? const SizedBox()
                  : Padding(
                      padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              getIt<Variables>().generalVariables.isDeviceTablet
                                  ? Flexible(
                                      child: SizedBox(
                                        child: Text(
                                          getIt<Variables>().generalVariables.currentLanguage.lastUpdatedOn,
                                          style: TextStyle(
                                              color: const Color(0xff007AFF),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                              fontStyle: FontStyle.italic),
                                        ),
                                      ),
                                    )
                                  : Expanded(
                                      child: SizedBox(
                                        child: Text(
                                          getIt<Variables>().generalVariables.currentLanguage.lastUpdatedOn,
                                          style: TextStyle(
                                              color: const Color(0xff007AFF),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                              fontStyle: FontStyle.italic),
                                        ),
                                      ),
                                    ),
                              Text(
                                ":  ",
                                style: TextStyle(
                                    color: const Color(0xff007AFF),
                                    fontWeight: FontWeight.w500,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                    fontStyle: FontStyle.italic),
                              ),
                              Expanded(
                                child: Text(
                                  locationDisputeInfo.updatedOn,
                                  style: TextStyle(
                                      color: const Color(0xff282F3A),
                                      fontWeight: FontWeight.w600,
                                      fontSize: getIt<Functions>().getTextSize(fontSize: 13)),
                                ),
                              ),
                            ],
                          ),
                          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 10)),
                          Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              getIt<Variables>().generalVariables.isDeviceTablet
                                  ? Flexible(
                                      child: SizedBox(
                                        child: Text(
                                          getIt<Variables>().generalVariables.currentLanguage.requestedLocation,
                                          style: TextStyle(
                                              color: const Color(0xff007AFF),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                              fontStyle: FontStyle.italic),
                                        ),
                                      ),
                                    )
                                  : Expanded(
                                      child: SizedBox(
                                        child: Text(
                                          getIt<Variables>().generalVariables.currentLanguage.requestedLocation,
                                          style: TextStyle(
                                              color: const Color(0xff007AFF),
                                              fontWeight: FontWeight.w500,
                                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                              fontStyle: FontStyle.italic),
                                        ),
                                      ),
                                    ),
                              Text(
                                ":  ",
                                style: TextStyle(
                                    color: const Color(0xff007AFF),
                                    fontWeight: FontWeight.w500,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                    fontStyle: FontStyle.italic),
                              ),
                              Expanded(
                                child: Text(
                                  "${getIt<Variables>().generalVariables.currentLanguage.floor.toUpperCase()}-${locationDisputeInfo.floor.toUpperCase()}  |  ${getIt<Variables>().generalVariables.currentLanguage.room.toUpperCase()}-${locationDisputeInfo.room.toUpperCase()}  |  ${getIt<Variables>().generalVariables.currentLanguage.zone.toUpperCase()}-${locationDisputeInfo.zone.toUpperCase()}",
                                  style: TextStyle(
                                      color: const Color(0xff282F3A),
                                      fontWeight: FontWeight.w600,
                                      fontSize: getIt<Functions>().getTextSize(fontSize: 13)),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 23)),
              Container(
                height: getIt<Functions>().getWidgetHeight(height: 75),
                width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 600 : 415),
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                child: ListView.builder(
                    scrollDirection: Axis.horizontal,
                    physics: const NeverScrollableScrollPhysics(),
                    shrinkWrap: true,
                    padding: EdgeInsets.zero,
                    itemCount: 3,
                    itemBuilder: (BuildContext context, int index) {
                      return Row(
                        children: [
                          Column(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                nameList[index],
                                style: TextStyle(
                                    color: const Color(0xff282F3A),
                                    fontWeight: FontWeight.w600,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                              ),
                              SizedBox(
                                height: getIt<Functions>().getWidgetHeight(height: 45),
                                width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 175 : 115),
                                child: index == 0
                                    ? DropdownButtonHideUnderline(
                                        child: DropdownButton2<String>(
                                          isExpanded: true,
                                          hint: Text(getIt<Variables>().generalVariables.currentLanguage.select,
                                              style: TextStyle(
                                                  color: const Color(0xff8A8D8E),
                                                  fontWeight: FontWeight.w400,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14))),
                                          items: context
                                              .read<PickListBloc>()
                                              .searchedFloorData
                                              .map((element) => DropdownMenuItem<String>(
                                                    value: element.label,
                                                    child: Text(
                                                      element.label,
                                                      style: const TextStyle(
                                                        fontSize: 14,
                                                      ),
                                                    ),
                                                  ))
                                              .toList(),
                                          value: context.read<PickListDetailsBloc>().selectedFloor,
                                          onChanged: (String? suggestion) async {
                                            controllersList[0].text = context.read<PickListDetailsBloc>().selectedFloor = suggestion ?? "";
                                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                                          },
                                          iconStyleData: const IconStyleData(
                                              icon: Icon(
                                                Icons.keyboard_arrow_down,
                                              ),
                                              iconSize: 15,
                                              iconEnabledColor: Color(0xff8A8D8E),
                                              iconDisabledColor: Color(0xff8A8D8E)),
                                          buttonStyleData: ButtonStyleData(
                                            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 15)),
                                            decoration: BoxDecoration(
                                                color: const Color(0xffffffff),
                                                borderRadius: BorderRadius.circular(4),
                                                border: Border.all(color: const Color(0xffE0E7EC), width: 0.73)),
                                            width: getIt<Functions>().getWidgetWidth(width: 600),
                                          ),
                                          menuItemStyleData: const MenuItemStyleData(height: 40),
                                          dropdownStyleData: DropdownStyleData(
                                              maxHeight: 200,
                                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(15), color: const Color(0xffffffff)),
                                              elevation: 8,
                                              offset: const Offset(0, 0)),
                                        ),
                                      )
                                    : TextFormField(
                                        controller: controllersList[index],
                                        style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12)),
                                        maxLength: 10,
                                        decoration: InputDecoration(
                                            counterText: "",
                                            fillColor: const Color(0xffffffff),
                                            filled: true,
                                            contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                                            border: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4),
                                                borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            enabledBorder: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4),
                                                borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            disabledBorder: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4),
                                                borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            errorBorder: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4),
                                                borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            focusedBorder: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4),
                                                borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            focusedErrorBorder: OutlineInputBorder(
                                                borderRadius: BorderRadius.circular(4),
                                                borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                            hintText: getIt<Variables>().generalVariables.currentLanguage.typeHere,
                                            hintStyle: TextStyle(
                                                color: const Color(0xff8A8D8E),
                                                fontWeight: FontWeight.w400,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 14))),
                                      ),
                              ),
                            ],
                          ),
                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                        ],
                      );
                    }),
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                child: errorString == ""
                    ? const SizedBox()
                    : Text(errorString,
                        style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 10), color: Colors.red, fontWeight: FontWeight.w600)),
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 35)),
              context.read<PickListDetailsBloc>().updateLoader
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const CircularProgressIndicator(),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 15),
                          ),
                        ],
                      ),
                    )
                  : InkWell(
                      onTap: () {
                        for (int i = 0; i < controllersList.length; i++) {
                          if (controllersList[i].text == "") {
                            switch (i) {
                              case 0:
                                errorString = getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheFloor;
                              case 1:
                                errorString = getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheRoom;
                              case 2:
                                errorString = getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheZone;
                              default:
                                errorString = getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheFloor;
                            }
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                            break;
                          } else {
                            errorString = "";
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          }
                        }
                        if (errorString == "") {
                          context.read<PickListDetailsBloc>().updateLoader = true;
                          FocusManager.instance.primaryFocus!.unfocus();
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          context.read<PickListDetailsBloc>().add(PickListDetailsLocationUpdateEvent(
                              floor: controllersList[0].text, room: controllersList[1].text, zone: controllersList[2].text));
                        }
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xff007838),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(
                            getIt<Variables>().generalVariables.currentLanguage.updateLocation.toUpperCase(),
                            style: TextStyle(
                                color: const Color(0xffffffff), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                          ),
                        ),
                      ),
                    ),
            ],
          ),
        );
      },
    );
  }

  Widget closeSessionContent({required BuildContext contextNew}) {
    context.read<PickListDetailsBloc>().allFieldsEmpty = false;
    context.read<PickListDetailsBloc>().selectedLocation = null;
    context.read<PickListDetailsBloc>().selectedStagingAreaId = "";
    context.read<PickListDetailsBloc>().updateLoader = false;
    return BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
      listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      listener: (BuildContext context, PickListDetailsState state) {
        if (state is PickListDetailsSuccess) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          Navigator.pop(context);
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
        if (state is PickListDetailsFailure) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
        }
        if (state is PickListDetailsError) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          ScaffoldMessenger.of(context).clearSnackBars();
          getIt<Widgets>().flushBarWidget(context: context, message: state.message);
        }
      },
      builder: (BuildContext context, PickListDetailsState state) {
        return SizedBox(
          width: getIt<Functions>().getWidgetWidth(width: 600),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
              SvgPicture.asset("assets/pick_list/close_session.svg",
                  height: getIt<Functions>().getWidgetHeight(height: 70), width: getIt<Functions>().getWidgetWidth(width: 70), fit: BoxFit.fill),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)),
              Text(
                "${getIt<Variables>().generalVariables.currentLanguage.picklist} #${context.read<PickListDetailsBloc>().pickListDetailsResponse.picklistNum}",
                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 26), color: const Color(0xff282F3A), fontWeight: FontWeight.w600),
                textAlign: TextAlign.center,
              ),
              Text(
                "(${context.read<PickListDetailsBloc>().pickListDetailsResponse.route})",
                overflow: TextOverflow.ellipsis,
                style: TextStyle(fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A)),
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 7)),
              Text(
                "${getIt<Variables>().generalVariables.currentLanguage.handledItemsInThisSession} : ${num.parse(context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.picked) + num.parse(context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.unavailable) + num.parse(context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.partial)}",
                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 15), color: const Color(0xff282F3A), fontWeight: FontWeight.w500),
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 27)),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Expanded(
                      child: Container(
                    height: getIt<Functions>().getWidgetHeight(height: 1),
                    decoration: const BoxDecoration(
                      gradient: LinearGradient(colors: [
                        Color(0xffFFFFFF),
                        Color(0xffBBC6CD),
                      ], begin: Alignment.centerLeft, end: Alignment.centerRight),
                    ),
                  )),
                  Container(
                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 400 : 275),
                    padding: EdgeInsets.symmetric(
                        horizontal: getIt<Functions>().getWidgetWidth(width: 3), vertical: getIt<Functions>().getWidgetHeight(height: 9)),
                    decoration: BoxDecoration(border: Border.all(color: const Color(0xffBBC6CD), width: 0.5)),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceAround,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Expanded(
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Text(
                                context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.picked.toString(),
                                style: TextStyle(
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 28 : 17),
                                    fontWeight: FontWeight.w600,
                                    color: const Color(0xff007AFF)),
                              ),
                              Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.picked.toUpperCase(),
                                  style: TextStyle(
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 11),
                                      fontWeight: FontWeight.w500,
                                      color: const Color(0xff282F3A)),
                                  textAlign: TextAlign.center,
                                ),
                              ),
                            ],
                          ),
                        ),
                        Expanded(
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Text(
                                context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.unavailable.toString(),
                                style: TextStyle(
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 28 : 17),
                                    fontWeight: FontWeight.w600,
                                    color: const Color(0xffF92C38)),
                              ),
                              Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase(),
                                  style: TextStyle(
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 11),
                                      fontWeight: FontWeight.w500,
                                      color: const Color(0xff282F3A)),
                                  textAlign: TextAlign.center,
                                ),
                              ),
                            ],
                          ),
                        ),
                        Expanded(
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Text(
                                context.read<PickListDetailsBloc>().pickListDetailsResponse.sessionInfo.partial.toString(),
                                style: TextStyle(
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 28 : 17),
                                    fontWeight: FontWeight.w600,
                                    color: const Color(0xff007AFF)),
                              ),
                              Text(
                                getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase(),
                                style: TextStyle(
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 12 : 11),
                                    fontWeight: FontWeight.w500,
                                    color: const Color(0xff282F3A)),
                                textAlign: TextAlign.center,
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                  Expanded(
                      child: Container(
                    height: getIt<Functions>().getWidgetHeight(height: 1),
                    decoration: const BoxDecoration(
                      gradient: LinearGradient(colors: [
                        Color(0xffBBC6CD),
                        Color(0xffFFFFFF),
                      ], begin: Alignment.centerLeft, end: Alignment.centerRight),
                    ),
                  )),
                ],
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 37)),
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: SizedBox(
                  height: getIt<Functions>().getWidgetHeight(height: 75),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        getIt<Variables>().generalVariables.currentLanguage.selectStagingArea,
                        style: TextStyle(
                            color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                      ),
                      SizedBox(
                        height: getIt<Functions>().getWidgetHeight(height: 45),
                        child: DropdownButtonHideUnderline(
                          child: DropdownButton2<String>(
                            isExpanded: true,
                            hint: Text(
                              getIt<Variables>().generalVariables.currentLanguage.chooseStagingArea,
                              style: TextStyle(
                                  color: const Color(0xff8A8D8E),
                                  fontWeight: FontWeight.w400,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                            ),
                            items: context
                                .read<PickListDetailsBloc>()
                                .stagingAreaList
                                .map((element) => DropdownMenuItem<String>(
                                      value: element.label,
                                      child: Text(
                                        element.label,
                                        style: const TextStyle(
                                          fontSize: 14,
                                        ),
                                      ),
                                    ))
                                .toList(),
                            value: context.read<PickListDetailsBloc>().selectedLocation,
                            onChanged: (String? suggestion) async {
                              context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                              context.read<PickListDetailsBloc>().selectedLocation = suggestion;
                              context.read<PickListDetailsBloc>().selectedStagingAreaId =
                                  context.read<PickListDetailsBloc>().stagingAreaList.singleWhere((element) => element.label == suggestion).id;
                              context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                            },
                            iconStyleData: const IconStyleData(
                                icon: Icon(
                                  Icons.keyboard_arrow_down,
                                ),
                                iconSize: 24,
                                iconEnabledColor: Color(0xff8A8D8E),
                                iconDisabledColor: Color(0xff8A8D8E)),
                            buttonStyleData: ButtonStyleData(
                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 15)),
                              decoration: BoxDecoration(
                                  color: const Color(0xffE0E7EC),
                                  borderRadius: BorderRadius.circular(4),
                                  border: Border.all(color: const Color(0xffE0E7EC), width: 0.73)),
                              width: getIt<Functions>().getWidgetWidth(width: 600),
                            ),
                            menuItemStyleData: const MenuItemStyleData(height: 40),
                            dropdownStyleData: DropdownStyleData(
                                maxHeight: 200,
                                decoration: BoxDecoration(borderRadius: BorderRadius.circular(15), color: const Color(0xffffffff)),
                                elevation: 8,
                                offset: const Offset(0, 0)),
                          ),
                        ),
                      )
                    ],
                  ),
                ),
              ),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: context.read<PickListDetailsBloc>().allFieldsEmpty ? 12 : 0)),
              context.read<PickListDetailsBloc>().allFieldsEmpty
                  ? Row(
                      children: [
                        Padding(
                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20.0)),
                          child: Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseSelectStagingArea,
                            style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 10), color: Colors.red, fontWeight: FontWeight.w600),
                          ),
                        ),
                      ],
                    )
                  : const SizedBox(),
              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 70)),
              context.read<PickListDetailsBloc>().updateLoader
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const CircularProgressIndicator(),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 15),
                          ),
                        ],
                      ),
                    )
                  : InkWell(
                      onTap: () {
                        if (context.read<PickListDetailsBloc>().selectedLocation == null) {
                          context.read<PickListDetailsBloc>().updateLoader = false;
                          context.read<PickListDetailsBloc>().allFieldsEmpty = true;
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                        } else {
                          context.read<PickListDetailsBloc>().updateLoader = true;
                          context.read<PickListDetailsBloc>().allFieldsEmpty = false;
                          FocusManager.instance.primaryFocus!.unfocus();
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSessionCloseEvent());
                        }
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xff007838),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(
                            getIt<Variables>().generalVariables.currentLanguage.moveToStagingArea.toUpperCase(),
                            style: TextStyle(
                                color: const Color(0xffffffff), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                          ),
                        ),
                      ),
                    ),
            ],
          ),
        );
      },
    );
  }

  Widget pickedUsersDetailsContent({required PickListDetailsItem selectedItem}) {
    return BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
      listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      listener: (BuildContext context, PickListDetailsState state) {
        if (state is PickListDetailsSuccess) {
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
      },
      builder: (BuildContext context, PickListDetailsState state) {
        return SizedBox(
          height: getIt<Functions>().getWidgetHeight(height: 500),
          width: getIt<Functions>().getWidgetWidth(width: 600),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Container(
                        height: getIt<Functions>().getWidgetHeight(height: 28),
                        width: getIt<Functions>().getWidgetWidth(width: 28),
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          color: Color(int.parse(selectedItem.typeColor)),
                        ),
                        child: Center(
                          child: Text(
                            selectedItem.itemType,
                            style: TextStyle(
                                color: const Color(0xffffffff), fontSize: getIt<Functions>().getTextSize(fontSize: 16), fontWeight: FontWeight.w700),
                          ),
                        )),
                    SizedBox(
                      width: getIt<Functions>().getWidgetWidth(width: 10),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          SingleChildScrollView(
                            scrollDirection: Axis.horizontal,
                            child: Text(
                              selectedItem.itemName,
                              maxLines: 1,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                  color: const Color(0xff282F3A),
                                  overflow: TextOverflow.ellipsis),
                            ),
                          ),
                          IntrinsicHeight(
                            child: Row(
                              children: [
                                Text(
                                  "${getIt<Variables>().generalVariables.currentLanguage.totalQuantityToPick} : ${selectedItem.quantity}  ",
                                  style: TextStyle(
                                      fontWeight: FontWeight.w500,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 13),
                                      color: const Color(0xff007AFF)),
                                ),
                                SizedBox(
                                  height: getIt<Functions>().getWidgetHeight(height: 15),
                                  child: const VerticalDivider(
                                    width: 0,
                                    thickness: 1,
                                    color: Color(0xff8A8D8E),
                                  ),
                                ),
                                Text(
                                  "  UOM : ${selectedItem.uom}  ",
                                  style: TextStyle(
                                      fontWeight: FontWeight.w500,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 13),
                                      color: const Color(0xff007AFF)),
                                ),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: 20),
              ),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              Expanded(
                child: ListView.builder(
                    padding: EdgeInsets.only(
                        left: getIt<Functions>().getWidgetWidth(width: 20),
                        right: getIt<Functions>().getWidgetWidth(width: 20),
                        top: getIt<Functions>().getWidgetHeight(height: 20)),
                    physics: const BouncingScrollPhysics(),
                    shrinkWrap: true,
                    itemCount: selectedItem.handledBy.length,
                    itemBuilder: (BuildContext context, int index) {
                      return Column(
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Row(
                                mainAxisAlignment: MainAxisAlignment.start,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Container(
                                    height: getIt<Functions>().getWidgetHeight(height: 50),
                                    width: getIt<Functions>().getWidgetWidth(width: 50),
                                    decoration: BoxDecoration(
                                        shape: BoxShape.circle,
                                        image: DecorationImage(
                                          image: NetworkImage(selectedItem.handledBy[index].image),
                                          fit: BoxFit.fill,
                                        )),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: 10),
                                  ),
                                  Column(
                                    mainAxisAlignment: MainAxisAlignment.start,
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    children: [
                                      Text(
                                        selectedItem.handledBy[index].name,
                                        style: TextStyle(
                                            fontWeight: FontWeight.w500,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                            color: const Color(0xff282F3A)),
                                      ),
                                      Text(
                                        selectedItem.handledBy[index].code,
                                        style: TextStyle(
                                            fontWeight: FontWeight.w400,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 13),
                                            color: const Color(0xff8A8D8E)),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                              Column(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Text(
                                    selectedItem.handledBy[index].pickedItems,
                                    style: TextStyle(
                                        fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                        fontWeight: FontWeight.w600,
                                        color: const Color(0xff007838)),
                                  ),
                                  Text(
                                    getIt<Variables>().generalVariables.currentLanguage.pickedQty.toUpperCase(),
                                    style: TextStyle(
                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                        fontWeight: FontWeight.w500,
                                        color: const Color(0xff282F3A)),
                                  ),
                                ],
                              ),
                            ],
                          ),
                          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 33))
                        ],
                      );
                    }),
              ),
              InkWell(
                onTap: () {
                  FocusManager.instance.primaryFocus!.unfocus();
                  Navigator.pop(context);
                },
                child: Container(
                  height: getIt<Functions>().getWidgetHeight(height: 50),
                  decoration: const BoxDecoration(
                    color: Color(0xffEEF4FF),
                    borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                  ),
                  child: Center(
                    child: Text(
                      getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                      style: TextStyle(
                          color: const Color(0xff1D2736), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }

  Widget completedContent() {
    completedReasonSearchFieldController.clear();
    context.read<PickListDetailsBloc>().selectedCompletedReasonName = null;
    context.read<PickListDetailsBloc>().selectedCompletedReason = "";
    context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty = false;
    commentsBar.clear();
    context.read<PickListDetailsBloc>().updateLoader = false;
    context.read<PickListDetailsBloc>().commentTextEmpty = false;
    return BlocConsumer<PickListDetailsBloc, PickListDetailsState>(
      buildWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      listenWhen: (PickListDetailsState previous, PickListDetailsState current) {
        return previous != current;
      },
      listener: (BuildContext context, PickListDetailsState state) {
        if (state is PickListDetailsSuccess) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          Navigator.pop(context);
          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
        if (state is PickListDetailsFailure) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
        }
        if (state is PickListDetailsError) {
          context.read<PickListDetailsBloc>().updateLoader = false;
          ScaffoldMessenger.of(context).clearSnackBars();
          getIt<Widgets>().flushBarWidget(context: context, message: state.message);
        }
      },
      builder: (BuildContext context, PickListDetailsState state) {
        return SizedBox(
          width: getIt<Functions>().getWidgetWidth(width: 600),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: Text(
                  getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase(),
                  style: TextStyle(
                      fontWeight: FontWeight.w600,
                      fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 26 : 24),
                      color: const Color(0xff282F3A)),
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 24 : 20),
              ),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 18),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 75),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            getIt<Variables>().generalVariables.currentLanguage.reason,
                            style: TextStyle(
                                color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 45),
                            child: buildCompletedDropButton(),
                          )
                        ],
                      ),
                    ),
                    context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty
                        ? Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseSelectReason,
                            style: TextStyle(color: Colors.red, fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 10)),
                          )
                        : const SizedBox(),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 12),
                    ),
                    Column(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          getIt<Variables>().generalVariables.currentLanguage.remarks,
                          style: TextStyle(
                              color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                        ),
                        SizedBox(
                          height: getIt<Functions>().getWidgetHeight(height: 13),
                        ),
                        TextFormField(
                          controller: commentsBar,
                          onChanged: (value) {
                            context.read<PickListDetailsBloc>().commentTextEmpty = value.isEmpty ? true : false;
                            context.read<PickListDetailsBloc>().commentText = value.isEmpty ? "" : value;
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                          },
                          maxLines: 3,
                          decoration: InputDecoration(
                            fillColor: const Color(0xffffffff),
                            filled: true,
                            contentPadding: EdgeInsets.symmetric(
                                horizontal: getIt<Functions>().getWidgetWidth(width: 15), vertical: getIt<Functions>().getWidgetHeight(height: 15)),
                            border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                            enabledBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                            disabledBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                            errorBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                            focusedBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                            focusedErrorBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                            hintText: getIt<Variables>().generalVariables.currentLanguage.enterRemarks,
                            hintStyle: TextStyle(
                              color: const Color(0xff8A8D8E),
                              fontWeight: FontWeight.w400,
                              fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                            ),
                          ),
                          validator: (value) => value!.isEmpty ? getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheComments : null,
                        )
                      ],
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 30),
                    ),
                  ],
                ),
              ),
              context.read<PickListDetailsBloc>().updateLoader
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const CircularProgressIndicator(),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 15),
                          ),
                        ],
                      ),
                    )
                  : Row(
                      children: [
                        Expanded(
                          child: InkWell(
                            onTap: () {
                              FocusManager.instance.primaryFocus!.unfocus();
                              Navigator.pop(context);
                            },
                            child: Container(
                              height: getIt<Functions>().getWidgetHeight(height: 50),
                              decoration: const BoxDecoration(
                                color: Color(0xffE0E7EC),
                                borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15)),
                              ),
                              child: Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.cancel.toUpperCase(),
                                  style: TextStyle(
                                      color: const Color(0xff282F3A),
                                      fontWeight: FontWeight.w600,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 13)),
                                ),
                              ),
                            ),
                          ),
                        ),
                        Expanded(
                          child: InkWell(
                            onTap: () {
                              if (context.read<PickListDetailsBloc>().selectedCompletedReason == "") {
                                context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty = true;
                                context.read<PickListDetailsBloc>().commentTextEmpty = false;
                                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                              } else {
                                context.read<PickListDetailsBloc>().updateLoader = true;
                                FocusManager.instance.primaryFocus!.unfocus();
                                context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty = false;
                                context.read<PickListDetailsBloc>().selectedCompletedRemarks = commentsBar.text;
                                context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent());
                                context.read<PickListDetailsBloc>().add(const PickListDetailsCompleteEvent());
                              }
                            },
                            child: Container(
                              height: getIt<Functions>().getWidgetHeight(height: 50),
                              decoration: const BoxDecoration(
                                color: Color(0xff007838),
                                borderRadius: BorderRadius.only(bottomRight: Radius.circular(15)),
                              ),
                              child: Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.submit.toUpperCase(),
                                  style: TextStyle(
                                      color: const Color(0xffffffff),
                                      fontWeight: FontWeight.w600,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 13)),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
            ],
          ),
        );
      },
    );
  }

  Widget buildDropButton({required bool isItem, required bool isLoading}) {
    return Container(
      height: getIt<Functions>().getWidgetHeight(height: 45),
      decoration: BoxDecoration(
          color: const Color(0xffffffff), borderRadius: BorderRadius.circular(4), border: Border.all(color: const Color(0xffE0E7EC), width: 0.73)),
      child: InkWell(
        borderRadius: BorderRadius.circular(15),
        onTap: isLoading == false
            ? isItem
                ? changeAltItem
                : changeReason
            : null,
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 15.0),
          child: Row(
            mainAxisSize: MainAxisSize.min,
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Expanded(
                child: Text(
                  isItem
                      ? context.read<PickListDetailsBloc>().selectedItemName ?? getIt<Variables>().generalVariables.currentLanguage.chooseItem
                      : context.read<PickListDetailsBloc>().selectedReasonName ?? getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                  style: isItem
                      ? TextStyle(
                          fontSize: context.read<PickListDetailsBloc>().selectedItemName == null ? 12 : 15,
                          color: context.read<PickListDetailsBloc>().selectedItemName == null ? Colors.grey.shade500 : Colors.black)
                      : TextStyle(
                          fontSize: context.read<PickListDetailsBloc>().selectedReasonName == null ? 12 : 15,
                          color: context.read<PickListDetailsBloc>().selectedReasonName == null ? Colors.grey.shade500 : Colors.black),
                ),
              ),
              isItem
                  ? context.read<PickListDetailsBloc>().selectedItemName != null
                      ? InkWell(
                          onTap: () {
                            context.read<PickListDetailsBloc>().selectedItemName = null;
                            context.read<PickListDetailsBloc>().selectItemEmpty = false;
                            context.read<PickListDetailsBloc>().selectedAltItemId = "";
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                          },
                          child: const Icon(
                            Icons.close,
                            size: 15,
                            color: Color(0xff8A8D8E),
                          ))
                      : const Icon(
                          Icons.keyboard_arrow_down_sharp,
                          color: Color(0xff8A8D8E),
                          size: 15,
                        )
                  : context.read<PickListDetailsBloc>().selectedReasonName != null
                      ? InkWell(
                          onTap: () {
                            context.read<PickListDetailsBloc>().selectedReasonName = null;
                            context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
                            context.read<PickListDetailsBloc>().selectedReason = "";
                            context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                          },
                          child: const Icon(
                            Icons.close,
                            size: 15,
                            color: Color(0xff8A8D8E),
                          ))
                      : const Icon(
                          Icons.keyboard_arrow_down_sharp,
                          color: Color(0xff8A8D8E),
                          size: 15,
                        ),
            ],
          ),
        ),
      ),
    );
  }

  Future<void> changeAltItem() async {
    List<FilterOptionsResponse> searchItems = context.read<PickListDetailsBloc>().pickListDetailsResponse.alternateItems;
    for (int i = 0; i < searchItems.length; i++) {
      if (searchItems[i].id == context.read<PickListDetailsBloc>().selectedItemId) {
        searchItems.removeAt(i);
      }
    }
    await showModalBottomSheet(
        backgroundColor: Colors.white,
        isScrollControlled: true,
        context: context,
        builder: (BuildContext context) {
          return StatefulBuilder(builder: (context, modelSetState) {
            return Container(
              padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),
              child: Column(
                children: <Widget>[
                  const SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Text(
                        getIt<Variables>().generalVariables.currentLanguage.chooseItem,
                        style: TextStyle(
                            fontSize: getIt<Functions>().getTextSize(fontSize: 26), fontWeight: FontWeight.w600, color: const Color(0xff282F3A)),
                      ),
                      InkWell(
                          onTap: () {
                            Navigator.pop(context);
                          },
                          child: SvgPicture.asset(
                            "assets/catch_weight/close-circle.svg",
                            height: getIt<Functions>().getWidgetHeight(height: 32),
                            width: getIt<Functions>().getWidgetWidth(width: 32),
                            fit: BoxFit.fill,
                          ))
                    ],
                  ),
                  const SizedBox(height: 20),
                  TextField(
                    cursorColor: Colors.black,
                    decoration: InputDecoration(
                        fillColor: const Color(0xffffffff),
                        filled: true,
                        contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        errorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedErrorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        suffixIcon: itemSearchFieldController.text.isNotEmpty
                            ? IconButton(
                                onPressed: () {
                                  itemSearchFieldController.clear();
                                  context.read<PickListDetailsBloc>().selectItemEmpty = false;
                                  context.read<PickListDetailsBloc>().selectedItemName = null;
                                  context.read<PickListDetailsBloc>().selectedItemId = "";
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                                },
                                icon: const Icon(
                                  Icons.close,
                                  size: 15,
                                  color: Color(0xff8A8D8E),
                                ))
                            : const Icon(
                                Icons.keyboard_arrow_down_sharp,
                                color: Color(0xff8A8D8E),
                                size: 15,
                              ),
                        hintText: getIt<Variables>().generalVariables.currentLanguage.chooseItem,
                        hintStyle: TextStyle(
                            color: const Color(0xff8A8D8E), fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 14))),
                    onChanged: (value) {
                      searchItems = context
                          .read<PickListDetailsBloc>()
                          .pickListDetailsResponse
                          .alternateItems
                          .where((element) => element.label.toLowerCase().contains(value.toLowerCase()))
                          .toList();
                      for (int i = 0; i < searchItems.length; i++) {
                        if (searchItems[i].id == context.read<PickListDetailsBloc>().selectedItemId) {
                          searchItems.removeAt(i);
                        }
                      }
                      if (mounted) modelSetState(() {});
                    },
                  ),
                  const SizedBox(height: 20),
                  Expanded(
                    child: ListView.separated(
                      itemCount: searchItems.length,
                      separatorBuilder: (BuildContext context, int index) => const Divider(),
                      itemBuilder: (ctx, index) => ListTile(
                        title: Text(
                          searchItems[index].label,
                          style: const TextStyle(fontWeight: FontWeight.w500, fontSize: 14),
                        ),
                        onTap: () {
                          Navigator.of(context).pop();
                          context.read<PickListDetailsBloc>().selectedItemName = searchItems[index].label;
                          context.read<PickListDetailsBloc>().selectItemEmpty = false;
                          context.read<PickListDetailsBloc>().selectedAltItemId = searchItems[index].id;
                          context.read<PickListDetailsBloc>().selectedAltItemName = searchItems[index].label;
                          context.read<PickListDetailsBloc>().selectedAltItemCode = searchItems[index].code;
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                        },
                      ),
                    ),
                  ),
                ],
              ),
            );
          });
        });
    if (mounted) setState(() {});
  }

  Future<void> changeReason() async {
    List<UnavailableReason> searchReasons = context.read<PickListDetailsBloc>().pickListDetailsResponse.unavailableReasons;
    await showModalBottomSheet(
        backgroundColor: Colors.white,
        isScrollControlled: true,
        context: context,
        builder: (BuildContext context) {
          return StatefulBuilder(builder: (context, modelSetState) {
            return Container(
              padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),
              child: Column(
                children: <Widget>[
                  const SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Text(
                        getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                        style: TextStyle(
                            fontSize: getIt<Functions>().getTextSize(fontSize: 26), fontWeight: FontWeight.w600, color: const Color(0xff282F3A)),
                      ),
                      InkWell(
                          onTap: () {
                            Navigator.pop(context);
                          },
                          child: SvgPicture.asset(
                            "assets/catch_weight/close-circle.svg",
                            height: getIt<Functions>().getWidgetHeight(height: 32),
                            width: getIt<Functions>().getWidgetWidth(width: 32),
                            fit: BoxFit.fill,
                          ))
                    ],
                  ),
                  const SizedBox(height: 20),
                  TextField(
                    cursorColor: Colors.black,
                    decoration: InputDecoration(
                        fillColor: const Color(0xffffffff),
                        filled: true,
                        contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        errorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedErrorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        suffixIcon: reasonSearchFieldController.text.isNotEmpty
                            ? IconButton(
                                onPressed: () {
                                  reasonSearchFieldController.clear();
                                  context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
                                  context.read<PickListDetailsBloc>().selectedReasonName = "";
                                  context.read<PickListDetailsBloc>().selectedReason = "";
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                                },
                                icon: const Icon(
                                  Icons.close,
                                  size: 15,
                                  color: Color(0xff8A8D8E),
                                ))
                            : const Icon(
                                Icons.keyboard_arrow_down_sharp,
                                color: Color(0xff8A8D8E),
                                size: 15,
                              ),
                        hintText: getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                        hintStyle: TextStyle(
                            color: const Color(0xff8A8D8E), fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 14))),
                    onChanged: (value) {
                      searchReasons = context
                          .read<PickListDetailsBloc>()
                          .pickListDetailsResponse
                          .unavailableReasons
                          .where((element) => element.description.toLowerCase().contains(value.toLowerCase()))
                          .toList();
                      if (mounted) modelSetState(() {});
                    },
                  ),
                  const SizedBox(height: 20),
                  Expanded(
                    child: ListView.separated(
                      itemCount: searchReasons.length,
                      separatorBuilder: (BuildContext context, int index) => const Divider(),
                      itemBuilder: (ctx, index) => ListTile(
                        title: Text(
                          searchReasons[index].description,
                          style: const TextStyle(fontWeight: FontWeight.w500, fontSize: 14),
                        ),
                        onTap: () {
                          Navigator.of(context).pop();
                          context.read<PickListDetailsBloc>().selectedReasonName = searchReasons[index].description;
                          context.read<PickListDetailsBloc>().selectedReasonEmpty = false;
                          context.read<PickListDetailsBloc>().selectedReason = searchReasons[index].id;
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                        },
                      ),
                    ),
                  ),
                ],
              ),
            );
          });
        });
    if (mounted) setState(() {});
  }

  Widget buildCompletedDropButton() {
    return Container(
      height: getIt<Functions>().getWidgetHeight(height: 45),
      decoration: BoxDecoration(
          color: const Color(0xffffffff), borderRadius: BorderRadius.circular(4), border: Border.all(color: const Color(0xffE0E7EC), width: 0.73)),
      child: InkWell(
        borderRadius: BorderRadius.circular(15),
        onTap: changeCompletedReason,
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 15.0),
          child: Row(
            mainAxisSize: MainAxisSize.min,
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Expanded(
                child: Text(
                  context.read<PickListDetailsBloc>().selectedCompletedReasonName ?? getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                  style: TextStyle(
                      fontSize: context.read<PickListDetailsBloc>().selectedCompletedReasonName == null ? 12 : 15,
                      color: context.read<PickListDetailsBloc>().selectedCompletedReasonName == null ? Colors.grey.shade500 : Colors.black),
                ),
              ),
              context.read<PickListDetailsBloc>().selectedCompletedReasonName != null
                  ? InkWell(
                      onTap: () {
                        context.read<PickListDetailsBloc>().selectedCompletedReasonName = null;
                        context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty = false;
                        context.read<PickListDetailsBloc>().selectedCompletedReason = "";
                        context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                      },
                      child: const Icon(
                        Icons.close,
                        size: 15,
                        color: Color(0xff8A8D8E),
                      ))
                  : const Icon(
                      Icons.keyboard_arrow_down_sharp,
                      color: Color(0xff8A8D8E),
                      size: 15,
                    ),
            ],
          ),
        ),
      ),
    );
  }

  Future<void> changeCompletedReason() async {
    List<UnavailableReason> searchReasons = context.read<PickListDetailsBloc>().pickListDetailsResponse.completeReasons;
    await showModalBottomSheet(
        backgroundColor: Colors.white,
        isScrollControlled: true,
        context: context,
        builder: (BuildContext context) {
          return StatefulBuilder(builder: (context, modelSetState) {
            return Container(
              padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),
              child: Column(
                children: <Widget>[
                  const SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Text(
                        getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                        style: TextStyle(
                            fontSize: getIt<Functions>().getTextSize(fontSize: 26), fontWeight: FontWeight.w600, color: const Color(0xff282F3A)),
                      ),
                      InkWell(
                          onTap: () {
                            Navigator.pop(context);
                          },
                          child: SvgPicture.asset(
                            "assets/catch_weight/close-circle.svg",
                            height: getIt<Functions>().getWidgetHeight(height: 32),
                            width: getIt<Functions>().getWidgetWidth(width: 32),
                            fit: BoxFit.fill,
                          ))
                    ],
                  ),
                  const SizedBox(height: 20),
                  TextField(
                    cursorColor: Colors.black,
                    decoration: InputDecoration(
                        fillColor: const Color(0xffffffff),
                        filled: true,
                        contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        errorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedErrorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        suffixIcon: completedReasonSearchFieldController.text.isNotEmpty
                            ? IconButton(
                                onPressed: () {
                                  completedReasonSearchFieldController.clear();
                                  context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty = false;
                                  context.read<PickListDetailsBloc>().selectedCompletedReasonName = "";
                                  context.read<PickListDetailsBloc>().selectedCompletedReason = "";
                                  context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                                },
                                icon: const Icon(
                                  Icons.close,
                                  size: 15,
                                  color: Color(0xff8A8D8E),
                                ))
                            : const Icon(
                                Icons.keyboard_arrow_down_sharp,
                                color: Color(0xff8A8D8E),
                                size: 15,
                              ),
                        hintText: getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                        hintStyle: TextStyle(
                            color: const Color(0xff8A8D8E), fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 14))),
                    onChanged: (value) {
                      searchReasons = context
                          .read<PickListDetailsBloc>()
                          .pickListDetailsResponse
                          .completeReasons
                          .where((element) => element.description.toLowerCase().contains(value.toLowerCase()))
                          .toList();
                      if (mounted) modelSetState(() {});
                    },
                  ),
                  const SizedBox(height: 20),
                  Expanded(
                    child: ListView.separated(
                      itemCount: searchReasons.length,
                      separatorBuilder: (BuildContext context, int index) => const Divider(),
                      itemBuilder: (ctx, index) => ListTile(
                        title: Text(
                          searchReasons[index].description,
                          style: const TextStyle(fontWeight: FontWeight.w500, fontSize: 14),
                        ),
                        onTap: () {
                          Navigator.of(context).pop();
                          context.read<PickListDetailsBloc>().selectedCompletedReasonName = searchReasons[index].description;
                          context.read<PickListDetailsBloc>().selectedCompletedReasonEmpty = false;
                          context.read<PickListDetailsBloc>().selectedCompletedReason = searchReasons[index].id;
                          context.read<PickListDetailsBloc>().add(const PickListDetailsSetStateEvent(stillLoading: false));
                        },
                      ),
                    ),
                  ),
                ],
              ),
            );
          });
        });
    if (mounted) setState(() {});
  }
}
