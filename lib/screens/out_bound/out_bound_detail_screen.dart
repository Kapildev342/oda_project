// Dart imports:
import 'dart:async';

// Flutter imports:
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

// Package imports:
import 'package:collection/collection.dart';
import 'package:dotted_border/dotted_border.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:hive_flutter/hive_flutter.dart';
import 'package:oda/local_database/pick_list_box/pick_list.dart';
import 'package:skeletonizer/skeletonizer.dart';

// Project imports:
import 'package:oda/bloc/navigation/navigation_bloc.dart';
import 'package:oda/bloc/out_bound/out_bound_detail/out_bound_detail_bloc.dart';
import 'package:oda/bloc/out_bound/out_bound_entry/out_bound_entry_bloc.dart';
import 'package:oda/bloc/timer/timer_bloc.dart';
import 'package:oda/edited_packages/data_table_library/data_table_2.dart';
import 'package:oda/local_database/trip_box/trip_list.dart';
import 'package:oda/resources/constants.dart';
import 'package:oda/resources/functions.dart';
import 'package:oda/resources/variables.dart';
import 'package:oda/resources/widgets.dart';

class OutBoundDetailScreen extends StatefulWidget {
  static const String id = "out_bound_detail_screen";

  const OutBoundDetailScreen({super.key});

  @override
  State<OutBoundDetailScreen> createState() => _OutBoundDetailScreenState();
}

class _OutBoundDetailScreenState extends State<OutBoundDetailScreen> with TickerProviderStateMixin {
  TextEditingController searchBar = TextEditingController();
  TextEditingController reasonSearchFieldController = TextEditingController();
  TextEditingController commentsBar = TextEditingController();
  late TabController tabController;
  Timer? timer;
  String timerString = "00:00:00";
  Timer? timeSpentTimer;
  final ScrollController _pendingScrollController = ScrollController();
  final ScrollController _pendingEmptyController = ScrollController();
  final ScrollController _sortedScrollController = ScrollController();
  final ScrollController _sortedEmptyController = ScrollController();
  final ScrollController _partialScrollController = ScrollController();
  final ScrollController _partialEmptyController = ScrollController();
  final ScrollController _unavailableScrollController = ScrollController();
  final ScrollController _unavailableEmptyController = ScrollController();
  double pendingTriggerOffset = -140.0;
  double pendingEmptyTriggerOffset = -140.0;
  double sortedTriggerOffset = -140.0;
  double sortedEmptyTriggerOffset = -140.0;
  double partialTriggerOffset = -140.0;
  double partialEmptyTriggerOffset = -140.0;
  double unavailableTriggerOffset = -140.0;
  double unavailableEmptyTriggerOffset = -140.0;
  bool isPendingAlreadyCalled = false;
  bool isPendingEmptyAlreadyCalled = false;
  bool isSortedAlreadyCalled = false;
  bool isSortedEmptyAlreadyCalled = false;
  bool isPartialAlreadyCalled = false;
  bool isPartialEmptyAlreadyCalled = false;
  bool isUnavailableAlreadyCalled = false;
  bool isUnavailableEmptyAlreadyCalled = false;

  @override
  void initState() {
    context.read<OutBoundDetailBloc>().selectedSoList = context.read<OutBoundEntryBloc>().selectedSoList;
    tabController = TabController(length: 4, vsync: this, initialIndex: 0)
      ..addListener(() {
        if (tabController.indexIsChanging) {
          context.read<OutBoundDetailBloc>().pageIndex = 1;
          context.read<OutBoundDetailBloc>().tabIndex = tabController.index;
          switch (context.read<OutBoundDetailBloc>().tabIndex) {
            case 0:
              context.read<OutBoundDetailBloc>().tabName = "Pending";
            case 1:
              context.read<OutBoundDetailBloc>().tabName = "Loaded";
            case 2:
              context.read<OutBoundDetailBloc>().tabName = "Partial";
            case 3:
              context.read<OutBoundDetailBloc>().tabName = "Unavailable";
            default:
              context.read<OutBoundDetailBloc>().tabName = "Pending";
          }
          context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        }
      });
    _pendingScrollController.addListener(_onScroll);
    _pendingEmptyController.addListener(_onScrollEmpty);
    _sortedScrollController.addListener(_onScroll2);
    _sortedEmptyController.addListener(_onScroll2Empty);
    _partialScrollController.addListener(_onScroll3);
    _partialEmptyController.addListener(_onScroll3Empty);
    _unavailableScrollController.addListener(_onScroll4);
    _unavailableEmptyController.addListener(_onScroll4Empty);
    context.read<OutBoundDetailBloc>().add(const OutBoundDetailInitialEvent());
    timerFunction();
    super.initState();
  }

  timerFunction() async {
    await Hive.openBox<TripList>('trip_list').then((value) {
      context.read<OutBoundDetailBloc>().selectedForSortedTrip.sessionInfo.sessionStartTimestamp = value.values
          .toList()
          .singleWhere((element) => element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId)
          .sessionInfo
          .sessionStartTimestamp;
      return null;
    });
    timeSpentTimer = Timer.periodic(const Duration(seconds: 1), (timer) {
      timerString = getIt<Functions>().durationToString(
          timeStamp: context
              .read<OutBoundDetailBloc>()
              .selectedForSortedTrip
              .sessionInfo
              .sessionStartTimestamp /*context.read<OutBoundDetailBloc>().selectedForSortedTrip.sessionInfo.isOpened?context.read<OutBoundDetailBloc>().selectedForSortedTrip.sessionInfo.sessionStartTimestamp:""*/,
          currentTime: DateTime.now());
      context.read<TimerBloc>().add(const TimerInitialEvent());
    });
  }

  void _onScroll() {
    if (_pendingScrollController.offset == 0.0) {
      isPendingAlreadyCalled = false;
    }
    if (_pendingScrollController.offset < pendingTriggerOffset) {
      if (isPendingAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isPendingAlreadyCalled = true;
      }
    }
  }

  void _onScrollEmpty() {
    if (_pendingEmptyController.offset == 0.0) {
      isPendingEmptyAlreadyCalled = false;
    }
    if (_pendingEmptyController.offset < pendingEmptyTriggerOffset) {
      if (isPendingEmptyAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isPendingEmptyAlreadyCalled = true;
      }
    }
  }

  void _onScroll2() {
    if (_sortedScrollController.offset == 0.0) {
      isSortedAlreadyCalled = false;
    }
    if (_sortedScrollController.offset < sortedTriggerOffset) {
      if (isSortedAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isSortedAlreadyCalled = true;
      }
    }
  }

  void _onScroll2Empty() {
    if (_sortedEmptyController.offset == 0.0) {
      isSortedEmptyAlreadyCalled = false;
    }
    if (_sortedEmptyController.offset < sortedEmptyTriggerOffset) {
      if (isSortedEmptyAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isSortedEmptyAlreadyCalled = true;
      }
    }
  }

  void _onScroll3() {
    if (_partialScrollController.offset == 0.0) {
      isPartialAlreadyCalled = false;
    }
    if (_partialScrollController.offset < partialTriggerOffset) {
      if (isPartialAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isPartialAlreadyCalled = true;
      }
    }
  }

  void _onScroll3Empty() {
    if (_partialEmptyController.offset == 0.0) {
      isPartialEmptyAlreadyCalled = false;
    }
    if (_partialEmptyController.offset < partialEmptyTriggerOffset) {
      if (isPartialEmptyAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isPartialEmptyAlreadyCalled = true;
      }
    }
  }

  void _onScroll4() {
    if (_unavailableScrollController.offset == 0.0) {
      isUnavailableAlreadyCalled = false;
    }
    if (_unavailableScrollController.offset < unavailableTriggerOffset) {
      if (isUnavailableAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isUnavailableAlreadyCalled = true;
      }
    }
  }

  void _onScroll4Empty() {
    if (_unavailableEmptyController.offset == 0.0) {
      isUnavailableEmptyAlreadyCalled = false;
    }
    if (_unavailableEmptyController.offset < unavailableEmptyTriggerOffset) {
      if (isUnavailableEmptyAlreadyCalled == false) {
        context.read<OutBoundDetailBloc>().add(const OutBoundDetailTabChangingEvent());
        isUnavailableEmptyAlreadyCalled = true;
      }
    }
  }

  @override
  void dispose() {
    timeSpentTimer!.cancel();
    _pendingScrollController.removeListener(_onScroll);
    _pendingScrollController.dispose();
    _pendingEmptyController.removeListener(_onScroll);
    _pendingEmptyController.dispose();
    _sortedScrollController.removeListener(_onScroll2);
    _sortedScrollController.dispose();
    _sortedEmptyController.removeListener(_onScroll2);
    _sortedEmptyController.dispose();
    _partialScrollController.removeListener(_onScroll3);
    _partialScrollController.dispose();
    _partialEmptyController.removeListener(_onScroll3);
    _partialEmptyController.dispose();
    _unavailableScrollController.removeListener(_onScroll4);
    _unavailableScrollController.dispose();
    _unavailableEmptyController.removeListener(_onScroll4);
    _unavailableEmptyController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return PopScope(
      canPop: false,
      onPopInvoked: (value) {
        getIt<Variables>().generalVariables.indexName =
            getIt<Variables>().generalVariables.outBoundRouteList[getIt<Variables>().generalVariables.outBoundRouteList.length - 1];
        context.read<NavigationBloc>().add(const NavigationInitialEvent());
        getIt<Variables>().generalVariables.outBoundRouteList.removeAt(getIt<Variables>().generalVariables.outBoundRouteList.length - 1);
      },
      child: LayoutBuilder(builder: (BuildContext context, BoxConstraints constraints) {
        if (constraints.maxWidth > 480) {
          return Container(
            color: const Color(0xffEEF4FF),
            child: Column(
              children: [
                BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(
                  builder: (BuildContext context, OutBoundDetailState state) {
                    return SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 154),
                      child: AppBar(
                        backgroundColor: const Color(0xffEEF4FF),
                        leading: IconButton(
                          onPressed: () {
                            getIt<Variables>().generalVariables.indexName = getIt<Variables>()
                                .generalVariables
                                .outBoundRouteList[getIt<Variables>().generalVariables.outBoundRouteList.length - 1];
                            context.read<NavigationBloc>().add(const NavigationInitialEvent());
                            getIt<Variables>()
                                .generalVariables
                                .outBoundRouteList
                                .removeAt(getIt<Variables>().generalVariables.outBoundRouteList.length - 1);
                          },
                          icon: const Icon(Icons.arrow_back, color: Color(0xffffffff)),
                        ),
                        titleSpacing: 0,
                        title: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.end,
                          children: [
                            Text(
                              "${getIt<Variables>().generalVariables.currentLanguage.so.toUpperCase()} # ${context.read<OutBoundDetailBloc>().selectedSoList[0].soNum}  ",
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 22),
                                  color: const Color(0xffffffff)),
                            ),
                            context.read<OutBoundDetailBloc>().selectedSoList.length > 1
                                ? Tooltip(
                                    triggerMode: TooltipTriggerMode.tap,
                                    message: List<String>.generate(context.read<OutBoundDetailBloc>().selectedSoList.length,
                                        (i) => context.read<OutBoundDetailBloc>().selectedSoList[i].soNum).join(" , "),
                                    child: Text(
                                      "+${context.read<OutBoundDetailBloc>().selectedSoList.length - 1} more",
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                          color: const Color(0xffffffff),
                                          decoration: TextDecoration.underline,
                                          decorationColor: Colors.white),
                                    ),
                                  )
                                : const SizedBox(),
                          ],
                        ),
                        flexibleSpace: Container(
                          decoration: BoxDecoration(
                            gradient: LinearGradient(
                              begin: const Alignment(0.00, 1.00),
                              end: const Alignment(0, -1),
                              colors: [
                                getIt<Variables>().generalVariables.currentBackGround.bgColor1,
                                getIt<Variables>().generalVariables.currentBackGround.bgColor2
                              ],
                            ),
                          ),
                        ),
                        actions: [
                          AnimatedCrossFade(
                            firstChild: const SizedBox(),
                            secondChild: textBars(controller: searchBar),
                            crossFadeState:
                                context.read<OutBoundDetailBloc>().searchBarEnabled ? CrossFadeState.showSecond : CrossFadeState.showFirst,
                            duration: const Duration(milliseconds: 100),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 14),
                          ),
                          Container(
                            height: getIt<Functions>().getWidgetHeight(height: 35),
                            width: getIt<Functions>().getWidgetWidth(width: 118),
                            decoration: BoxDecoration(
                              color: const Color(0xffFFFFFF),
                              borderRadius: BorderRadius.circular(7),
                            ),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                InkWell(
                                  onTap: state is OutBoundDetailLoading
                                      ? () {}
                                      : () {
                                          getIt<Variables>().generalVariables.currentBackGround =
                                              getIt<Variables>().generalVariables.backGroundChangesList[0];
                                          context.read<OutBoundDetailBloc>().currentListIndex = 0;
                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                        },
                                  child: context.read<OutBoundDetailBloc>().currentListIndex == 0
                                      ? Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 29),
                                          width: getIt<Functions>().getWidgetWidth(width: 28),
                                          margin: EdgeInsets.only(
                                              top: getIt<Functions>().getWidgetHeight(height: 3),
                                              bottom: getIt<Functions>().getWidgetHeight(height: 3),
                                              left: getIt<Functions>().getWidgetWidth(width: 3)),
                                          decoration: BoxDecoration(
                                              borderRadius: BorderRadius.circular(6),
                                              color: getIt<Variables>().generalVariables.backGroundChangesList[0].color),
                                          child: Center(
                                              child: Text(getIt<Variables>().generalVariables.backGroundChangesList[0].symbol,
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                      color: Colors.white))),
                                        )
                                      : Center(
                                          child: Padding(
                                          padding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 11)),
                                          child: Text(getIt<Variables>().generalVariables.backGroundChangesList[0].symbol,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                  color: Colors.black)),
                                        )),
                                ),
                                InkWell(
                                  onTap: state is OutBoundDetailLoading
                                      ? () {}
                                      : () {
                                          getIt<Variables>().generalVariables.currentBackGround =
                                              getIt<Variables>().generalVariables.backGroundChangesList[1];
                                          context.read<OutBoundDetailBloc>().currentListIndex = 1;
                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                        },
                                  child: context.read<OutBoundDetailBloc>().currentListIndex == 1
                                      ? Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 29),
                                          width: getIt<Functions>().getWidgetWidth(width: 28),
                                          margin: EdgeInsets.only(
                                              top: getIt<Functions>().getWidgetHeight(height: 3),
                                              bottom: getIt<Functions>().getWidgetHeight(height: 3)),
                                          decoration: BoxDecoration(
                                              borderRadius: BorderRadius.circular(6),
                                              color: getIt<Variables>().generalVariables.backGroundChangesList[1].color),
                                          child: Center(
                                              child: Text(getIt<Variables>().generalVariables.backGroundChangesList[1].symbol,
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                      color: Colors.white))),
                                        )
                                      : Center(
                                          child: Text(getIt<Variables>().generalVariables.backGroundChangesList[1].symbol,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                  color: Colors.black))),
                                ),
                                InkWell(
                                  onTap: state is OutBoundDetailLoading
                                      ? () {}
                                      : () {
                                          getIt<Variables>().generalVariables.currentBackGround =
                                              getIt<Variables>().generalVariables.backGroundChangesList[2];
                                          context.read<OutBoundDetailBloc>().currentListIndex = 2;
                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                        },
                                  child: context.read<OutBoundDetailBloc>().currentListIndex == 2
                                      ? Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 29),
                                          width: getIt<Functions>().getWidgetWidth(width: 28),
                                          margin: EdgeInsets.only(
                                              top: getIt<Functions>().getWidgetHeight(height: 3),
                                              bottom: getIt<Functions>().getWidgetHeight(height: 3),
                                              right: getIt<Functions>().getWidgetWidth(width: 3)),
                                          decoration: BoxDecoration(
                                              borderRadius: BorderRadius.circular(6),
                                              color: getIt<Variables>().generalVariables.backGroundChangesList[2].color),
                                          child: Center(
                                              child: Text(getIt<Variables>().generalVariables.backGroundChangesList[2].symbol,
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                      color: Colors.white))),
                                        )
                                      : Center(
                                          child: Padding(
                                          padding: EdgeInsets.only(right: getIt<Functions>().getWidgetWidth(width: 11)),
                                          child: Text(getIt<Variables>().generalVariables.backGroundChangesList[2].symbol,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                  color: Colors.black)),
                                        )),
                                ),
                              ],
                            ),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 14),
                          ),
                          InkWell(
                            onTap: state is OutBoundDetailLoading
                                ? () {}
                                : () {
                                    context.read<OutBoundDetailBloc>().searchBarEnabled = !context.read<OutBoundDetailBloc>().searchBarEnabled;
                                    if (context.read<OutBoundDetailBloc>().searchBarEnabled == false) {
                                      searchBar.clear();
                                      FocusManager.instance.primaryFocus!.unfocus();
                                      context.read<OutBoundDetailBloc>().searchText = "";
                                    }
                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                  },
                            child: Container(
                              height: getIt<Functions>().getWidgetHeight(height: 37),
                              width: getIt<Functions>().getWidgetWidth(width: 37),
                              decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFFFFFFF).withOpacity(0.2)),
                              child: Center(
                                child: SvgPicture.asset(
                                  'assets/warehouse_list/search_icon.svg',
                                  height: getIt<Functions>().getWidgetHeight(height: 15.5),
                                  width: getIt<Functions>().getWidgetWidth(width: 15.5),
                                  fit: BoxFit.fill,
                                ),
                              ),
                            ),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 14),
                          ),
                          InkWell(
                            onTap: state is OutBoundDetailLoading
                                ? () {}
                                : () {
                                    getIt<Variables>().generalVariables.filterSelectedMainIndex = 0;
                                    Scaffold.of(context).openEndDrawer();
                                  },
                            child: Badge(
                              backgroundColor: const Color(0xff007AFF),
                              smallSize: getIt<Variables>().generalVariables.selectedFilters.isEmpty ? 0 : 8,
                              child: Container(
                                height: getIt<Functions>().getWidgetHeight(height: 37),
                                width: getIt<Functions>().getWidgetWidth(width: 37),
                                decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFFFFFFF).withOpacity(0.2)),
                                child: Center(
                                  child: SvgPicture.asset(
                                    'assets/warehouse_list/filter_icon.svg',
                                    height: getIt<Functions>().getWidgetHeight(height: 18),
                                    width: getIt<Functions>().getWidgetWidth(width: 18),
                                    fit: BoxFit.fill,
                                  ),
                                ),
                              ),
                            ),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 26),
                          ),
                        ],
                        bottom: PreferredSize(
                          preferredSize: Size(
                              getIt<Functions>().getWidgetWidth(
                                  width: Orientation.portrait == MediaQuery.of(context).orientation
                                      ? getIt<Variables>().generalVariables.width
                                      : getIt<Variables>().generalVariables.height),
                              getIt<Functions>().getWidgetHeight(height: 104)),
                          child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 16)),
                            child: Column(
                              mainAxisAlignment: MainAxisAlignment.center,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                SizedBox(
                                  height: getIt<Functions>().getWidgetHeight(height: 42),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Expanded(
                                        child: Row(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            InkWell(
                                              onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                                  ? () {}
                                                  : () {
                                                      getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                      Scaffold.of(context).openEndDrawer();
                                                    },
                                              child: Center(
                                                child: SvgPicture.asset(
                                                  "assets/pick_list/status_image.svg",
                                                  height: getIt<Functions>().getWidgetHeight(height: 30),
                                                  width: getIt<Functions>().getWidgetWidth(width: 30),
                                                  fit: BoxFit.fill,
                                                ),
                                              ),
                                            ),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 12)),
                                            InkWell(
                                              onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                                  ? () {}
                                                  : () {
                                                      getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                      Scaffold.of(context).openEndDrawer();
                                                    },
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                mainAxisSize: MainAxisSize.min,
                                                children: [
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.status.toUpperCase(),
                                                    style: TextStyle(
                                                        fontWeight: FontWeight.w400,
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        color: const Color(0xffffffff)),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.tripListMainIdData.tripStatus == "Pending"
                                                        ? getIt<Variables>().generalVariables.currentLanguage.pending.toUpperCase()
                                                        : getIt<Variables>().generalVariables.tripListMainIdData.tripStatus == "Partial"
                                                            ? getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()
                                                            : getIt<Variables>().generalVariables.currentLanguage.completed.toUpperCase(),
                                                    style: TextStyle(
                                                        fontWeight: FontWeight.w700,
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                        color: const Color(0xffF8B11D)),
                                                  ),
                                                ],
                                              ),
                                            ),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 6)),
                                            const VerticalDivider(color: Color(0xffE0E7EC)),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 6)),
                                            Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.center,
                                              mainAxisSize: MainAxisSize.min,
                                              children: [
                                                Text(
                                                  getIt<Variables>().generalVariables.currentLanguage.totalItems.toUpperCase(),
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w400,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                      color: const Color(0xffffffff)),
                                                ),
                                                Text(
                                                  (List<int>.generate(context.read<OutBoundDetailBloc>().selectedSoList.length,
                                                          (i) => int.parse(context.read<OutBoundDetailBloc>().selectedSoList[i].soNoOfItems)))
                                                      .fold<int>(0, (a, b) => a + b)
                                                      .toString(),
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w700,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                      color: const Color(0xff50D464)),
                                                ),
                                              ],
                                            ),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 6)),
                                            const VerticalDivider(color: Color(0xffE0E7EC)),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 6)),
                                            Column(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              mainAxisSize: MainAxisSize.min,
                                              children: [
                                                Text(
                                                  getIt<Variables>().generalVariables.currentLanguage.route.toUpperCase(),
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w400,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                      color: const Color(0xffffffff)),
                                                ),
                                                SizedBox(
                                                  width: getIt<Functions>().getWidgetWidth(width: 75),
                                                  child: SingleChildScrollView(
                                                    scrollDirection: Axis.horizontal,
                                                    child: Text(
                                                      getIt<Variables>().generalVariables.tripListMainIdData.tripRoute,
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff50D464)),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 6)),
                                            const VerticalDivider(color: Color(0xffE0E7EC)),
                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 6)),
                                            SizedBox(
                                              width: getIt<Functions>().getWidgetWidth(width: 85),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                mainAxisSize: MainAxisSize.min,
                                                children: [
                                                  FittedBox(
                                                    fit: BoxFit.scaleDown,
                                                    child: Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.dateAndTime.toUpperCase(),
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w400,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xffffffff)),
                                                    ),
                                                  ),
                                                  FittedBox(
                                                    fit: BoxFit.scaleDown,
                                                    child: Text(
                                                      getIt<Variables>().generalVariables.tripListMainIdData.tripCreatedTime,
                                                      maxLines: 2,
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w700,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff50D464)),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 12)),
                                      Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 45),
                                        width: getIt<Functions>().getWidgetWidth(width: 300),
                                        padding: EdgeInsets.symmetric(
                                            horizontal: getIt<Functions>().getWidgetWidth(width: 5),
                                            vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                        decoration: BoxDecoration(color: const Color(0xffFFFFFF), borderRadius: BorderRadius.circular(6)),
                                        child: Row(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            SizedBox(
                                              width: getIt<Functions>().getWidgetWidth(width: 60),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                children: [
                                                  FittedBox(
                                                    fit: BoxFit.scaleDown,
                                                    child: Text(
                                                      getIt<Variables>().generalVariables.currentLanguage.timeSpent,
                                                      style: TextStyle(
                                                          fontWeight: FontWeight.w500,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                          color: const Color(0xff1D2736)),
                                                    ),
                                                  ),
                                                  BlocBuilder<TimerBloc, TimerState>(
                                                    builder: (BuildContext context, TimerState state) {
                                                      return Text(
                                                        timerString,
                                                        style: TextStyle(
                                                            fontWeight: FontWeight.w600,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                            color: const Color(0xff007AFF)),
                                                      );
                                                    },
                                                  ),
                                                ],
                                              ),
                                            ),
                                            Container(
                                              width: getIt<Functions>().getWidgetWidth(width: 90),
                                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Expanded(
                                                      child: Container(
                                                    decoration: const BoxDecoration(
                                                      borderRadius: BorderRadius.only(topLeft: Radius.circular(4), bottomLeft: Radius.circular(4)),
                                                      color: Color(0xff007838),
                                                    ),
                                                    child: Center(
                                                      child: Text(
                                                        /*context
                                                            .read<OutBoundDetailBloc>()
                                                            .searchedItemsList*/
                                                        Hive.box<ItemsList>('items_list')
                                                            .values
                                                            .toList()
                                                            .where((element) =>
                                                                element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId &&
                                                                element.itemLoadedStatus == "Loaded" &&
                                                                element.isProgressStatus &&
                                                                (element.handledBy.isNotEmpty
                                                                    ? (element.handledBy[0].code ==
                                                                        getIt<Variables>().generalVariables.userDataEmployeeCode)
                                                                    : false))
                                                            .toList()
                                                            .length
                                                            .toString(),
                                                        style: TextStyle(
                                                            color: const Color(0xffFFFFFF),
                                                            fontWeight: FontWeight.w500,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                      ),
                                                    ),
                                                  )),
                                                  Expanded(
                                                      child: Container(
                                                    color: const Color(0xffFF9500),
                                                    child: Center(
                                                      child: Text(
                                                        /*context
                                                            .read<OutBoundDetailBloc>()
                                                            .searchedItemsList*/
                                                        Hive.box<ItemsList>('items_list')
                                                            .values
                                                            .toList()
                                                            .where((element) =>
                                                                element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId &&
                                                                element.itemLoadedStatus == "Partial" &&
                                                                element.isProgressStatus &&
                                                                (element.handledBy.isNotEmpty
                                                                    ? (element.handledBy[0].code ==
                                                                        getIt<Variables>().generalVariables.userDataEmployeeCode)
                                                                    : false))
                                                            .toList()
                                                            .length
                                                            .toString(),
                                                        style: TextStyle(
                                                            color: const Color(0xffffffff),
                                                            fontWeight: FontWeight.w500,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                      ),
                                                    ),
                                                  )),
                                                  Expanded(
                                                      child: Container(
                                                    decoration: const BoxDecoration(
                                                      borderRadius: BorderRadius.only(topRight: Radius.circular(4), bottomRight: Radius.circular(4)),
                                                      color: Color(0xffF92C38),
                                                    ),
                                                    child: Center(
                                                      child: Text(
                                                        /*context
                                                            .read<OutBoundDetailBloc>()
                                                            .searchedItemsList*/
                                                        Hive.box<ItemsList>('items_list')
                                                            .values
                                                            .toList()
                                                            .where((element) =>
                                                                element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId &&
                                                                element.itemLoadedStatus == "Unavailable" &&
                                                                element.isProgressStatus &&
                                                                (element.handledBy.isNotEmpty
                                                                    ? (element.handledBy[0].code ==
                                                                        getIt<Variables>().generalVariables.userDataEmployeeCode)
                                                                    : false))
                                                            .toList()
                                                            .length
                                                            .toString(),
                                                        style: TextStyle(
                                                            color: const Color(0xffffffff),
                                                            fontWeight: FontWeight.w500,
                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                      ),
                                                    ),
                                                  )),
                                                ],
                                              ),
                                            ),
                                            InkWell(
                                              onTap: () {
                                                getIt<Variables>().generalVariables.popUpWidget = moveToLoadingBay();
                                                getIt<Functions>().showAnimatedDialog(context: context, isFromTop: true, isCloseDisabled: false);
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 40),
                                                width: getIt<Functions>().getWidgetWidth(width: 120),
                                                padding: EdgeInsets.symmetric(
                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 4.5),
                                                    vertical: getIt<Functions>().getWidgetHeight(height: 2.5)),
                                                decoration: BoxDecoration(color: Colors.blue, borderRadius: BorderRadius.circular(4)),
                                                child: Center(
                                                  child: Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.loadingCompleted,
                                                    textAlign: TextAlign.center,
                                                    maxLines: 2,
                                                    style: TextStyle(
                                                      color: const Color(0xffFFFFFF),
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                      fontWeight: FontWeight.w600,
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20))
                              ],
                            ),
                          ),
                        ),
                      ),
                    );
                  },
                ),
                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 12)),
                BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(
                  builder: (BuildContext context, OutBoundDetailState state) {
                    return Container(
                      height: getIt<Functions>().getWidgetHeight(height: 50),
                      margin: EdgeInsets.only(
                          bottom: getIt<Functions>().getWidgetHeight(height: 20),
                          left: getIt<Functions>().getWidgetWidth(width: 20),
                          right: getIt<Functions>().getWidgetWidth(width: 20)),
                      decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(7)),
                      child: TabBar(
                        indicatorWeight: 0,
                        controller: tabController,
                        indicator: BoxDecoration(borderRadius: BorderRadius.circular(7), color: const Color(0xff007AFF)),
                        labelStyle:
                            TextStyle(color: Colors.white, fontSize: getIt<Functions>().getTextSize(fontSize: 14), fontWeight: FontWeight.w600),
                        unselectedLabelStyle: TextStyle(
                            color: const Color(0xff6F6F6F), fontSize: getIt<Functions>().getTextSize(fontSize: 14), fontWeight: FontWeight.w600),
                        splashBorderRadius: BorderRadius.circular(7),
                        padding: EdgeInsets.symmetric(
                            vertical: getIt<Functions>().getWidgetHeight(height: 7), horizontal: getIt<Functions>().getWidgetWidth(width: 7)),
                        indicatorSize: TabBarIndicatorSize.tab,
                        dividerColor: Colors.transparent,
                        dividerHeight: 0.0,
                        isScrollable: false,
                        tabAlignment: TabAlignment.fill,
                        tabs: [
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.yetToLoad.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Pending")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 0 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Pending")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 0 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.loaded.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Loaded")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 1 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Loaded")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 1 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Partial")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 2 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Partial")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 2 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Unavailable")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 3 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Unavailable")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 3 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    );
                  },
                ),
                Expanded(
                  child: BlocConsumer<OutBoundDetailBloc, OutBoundDetailState>(
                    listenWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
                      return previous != current;
                    },
                    buildWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
                      return previous != current;
                    },
                    listener: (BuildContext context, OutBoundDetailState state) {},
                    builder: (BuildContext context, OutBoundDetailState state) {
                      if (state is OutBoundDetailLoaded) {
                        switch (context.read<OutBoundDetailBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 38),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              /* RichText(
                                                                  text: TextSpan(
                                                                    text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                    style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                          style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                    ],
                                                                  ),
                                                                ),*/
                                                              RichText(
                                                                text: TextSpan(
                                                                  text: "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                  style: TextStyle(
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                      color: const Color(0xff282F3A),
                                                                      fontWeight: FontWeight.w600,
                                                                      fontFamily: "overpassmono"),
                                                                  children: [
                                                                    TextSpan(
                                                                        text:
                                                                            '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff007AFF),
                                                                            fontWeight: FontWeight.w600,
                                                                            fontFamily: "overpassmono")),
                                                                  ],
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  if (context
                                                                          .read<OutBoundDetailBloc>()
                                                                          .singleTabGroupedItemsList[index][idx]
                                                                          .itemPickedStatus ==
                                                                      "Picked") {
                                                                    context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                    getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                        selectedItem:
                                                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx],
                                                                        index: index,
                                                                        idx: idx,
                                                                        fromWhere: "yet_to_sort",
                                                                        isSorting: false);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  } else {
                                                                    ScaffoldMessenger.of(context).clearSnackBars();
                                                                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                        content:
                                                                            Text(getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                  }
                                                                },
                                                                child: Column(
                                                                  children: [
                                                                    Container(
                                                                      padding: EdgeInsets.only(
                                                                        left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                        right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                        top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                        bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                      ),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Row(
                                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              Container(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                    color: Color(int.parse(
                                                                                        "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                  ),
                                                                                  child: Center(
                                                                                    child: Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                          .itemType,
                                                                                      style: TextStyle(
                                                                                          color: const Color(0xffffffff),
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                          fontWeight: FontWeight.w700),
                                                                                    ),
                                                                                  )),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                              Expanded(
                                                                                child: Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  children: [
                                                                                    Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                          .itemName,
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          color: const Color(0xff282F3A),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                    Text(
                                                                                      "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].remarks}",
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff6F6F6F),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                            child: Row(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: ListView(
                                                                                    scrollDirection: Axis.horizontal,
                                                                                    physics: const BouncingScrollPhysics(),
                                                                                    shrinkWrap: true,
                                                                                    padding: EdgeInsets.zero,
                                                                                    children: [
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .itemCode
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .itemCode,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>().generalVariables.currentLanguage.uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .packageTerms
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .packageTerms,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.end,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Functions>().formatNumber(
                                                                                          qty: context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .quantity),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                          fontWeight: FontWeight.w600,
                                                                                          color: const Color(0xff007AFF)),
                                                                                    ),
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .qty
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          fontWeight: FontWeight.w500,
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                    .catchWeightStatus ==
                                                                                "No" ||
                                                                            (getIt<Functions>().getStringToList(
                                                                                    value: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightInfo,
                                                                                    quantity: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .lineLoadedQty,
                                                                                    weightUnit: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .uom))
                                                                                .isEmpty
                                                                        ? const SizedBox()
                                                                        : Row(
                                                                            children: [
                                                                              Expanded(
                                                                                child: Container(
                                                                                  decoration: const BoxDecoration(
                                                                                    color: Color(0xffCDE5FF),
                                                                                    borderRadius: BorderRadius.only(
                                                                                        bottomLeft: Radius.circular(8),
                                                                                        bottomRight: Radius.circular(8)),
                                                                                  ),
                                                                                  padding: EdgeInsets.only(
                                                                                      left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                      top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                      bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                  child: Wrap(
                                                                                    children: List.generate(
                                                                                        (getIt<Functions>().getStringToList(
                                                                                                value: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .catchWeightInfo,
                                                                                                quantity: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .lineLoadedQty,
                                                                                                weightUnit: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom))
                                                                                            .length,
                                                                                        (i) => i == 0
                                                                                            ? Padding(
                                                                                                padding: const EdgeInsets.only(right: 10.0),
                                                                                                child: SvgPicture.asset(
                                                                                                  "assets/catch_weight/measurement.svg",
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 20),
                                                                                                  width: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                                  fit: BoxFit.fill,
                                                                                                ),
                                                                                              )
                                                                                            : i == 1
                                                                                                ? Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 8)),
                                                                                                    child: Text(
                                                                                                      "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].uom))[i]}  : ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                  )
                                                                                                : Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    width: getIt<Functions>().getWidgetWidth(
                                                                                                        width: ((getIt<Functions>().getStringToList(
                                                                                                                        value: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .catchWeightInfo,
                                                                                                                        quantity: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .lineLoadedQty,
                                                                                                                        weightUnit: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .uom))[i]
                                                                                                                    .length *
                                                                                                                7) +
                                                                                                            30),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 12)),
                                                                                                    margin: EdgeInsets.only(
                                                                                                        left: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 6),
                                                                                                        bottom: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 2)),
                                                                                                    decoration: BoxDecoration(
                                                                                                      borderRadius: BorderRadius.circular(8),
                                                                                                      color: const Color(0xff7AA440),
                                                                                                    ),
                                                                                                    child: Center(
                                                                                                      child: Text(
                                                                                                        (getIt<Functions>().getStringToList(
                                                                                                            value: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .catchWeightInfo,
                                                                                                            quantity: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .lineLoadedQty,
                                                                                                            weightUnit: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .uom))[i],
                                                                                                        style: TextStyle(
                                                                                                            fontSize: getIt<Functions>()
                                                                                                                .getTextSize(fontSize: 12),
                                                                                                            fontWeight: FontWeight.w500,
                                                                                                            color: const Color(0xffffffff)),
                                                                                                      ),
                                                                                                    ),
                                                                                                  )),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              const SizedBox(),
                                                                            ],
                                                                          ),
                                                                    idx ==
                                                                            context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index]
                                                                                    .length -
                                                                                1
                                                                        ? const SizedBox()
                                                                        : const Divider(color: Color(0xffE0E7EC))
                                                                  ],
                                                                ),
                                                              );
                                                            }),
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty &&
                                      context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedScrollController,
                                          children: [
                                            context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<OutBoundDetailBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                            margin: EdgeInsets.only(
                                                                bottom: getIt<Functions>().getWidgetHeight(
                                                                    height: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length > 1
                                                                        ? 20
                                                                        : 0)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: const BoxDecoration(
                                                                    color: Color(0xffE3E7EA),
                                                                    borderRadius:
                                                                        BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      /* RichText(
                                                                        text: TextSpan(
                                                                          text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                          style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][0].stagingArea,
                                                                                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),*/
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600,
                                                                              fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text:
                                                                                    '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff007AFF),
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount:
                                                                        context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          if (context
                                                                                  .read<OutBoundDetailBloc>()
                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                  .itemPickedStatus ==
                                                                              "Picked") {
                                                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                            getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                                selectedItem: context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupingItemsList[index][idx],
                                                                                index: index,
                                                                                idx: idx,
                                                                                fromWhere: "Loaded",
                                                                                isSorting: true);
                                                                            getIt<Functions>().showAnimatedDialog(
                                                                                context: context, isFromTop: false, isCloseDisabled: false);
                                                                          } else {
                                                                            ScaffoldMessenger.of(context).clearSnackBars();
                                                                            ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                                content: Text(getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .itemNotPicked)));
                                                                          }
                                                                        },
                                                                        child: Column(
                                                                          children: [
                                                                            Container(
                                                                              padding: EdgeInsets.only(
                                                                                left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                                bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              child: Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                children: [
                                                                                  Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                                    children: [
                                                                                      Container(
                                                                                          height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                          width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                          decoration: BoxDecoration(
                                                                                            shape: BoxShape.circle,
                                                                                            color: Color(int.parse(
                                                                                                "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].typeColor}")),
                                                                                          ),
                                                                                          child: Center(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                                  .itemType,
                                                                                              style: TextStyle(
                                                                                                  color: const Color(0xffffffff),
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 17),
                                                                                                  fontWeight: FontWeight.w700),
                                                                                            ),
                                                                                          )),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                      Expanded(
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                                          children: [
                                                                                            Text(
                                                                                              context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                            Text(
                                                                                              "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].remarks}",
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                  color: const Color(0xff6F6F6F),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: ListView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            physics: const BouncingScrollPhysics(),
                                                                                            shrinkWrap: true,
                                                                                            padding: EdgeInsets.zero,
                                                                                            children: [
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .itemCode
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .itemCode,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .uom,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .uom,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .packageTerms
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .packageTerms,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .sorter
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupingItemsList[index][idx]
                                                                                                          .handledBy
                                                                                                          .isNotEmpty
                                                                                                      ? Text(
                                                                                                          context
                                                                                                              .read<OutBoundDetailBloc>()
                                                                                                              .singleTabGroupingItemsList[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name,
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        )
                                                                                                      : const SizedBox(),
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                          crossAxisAlignment: CrossAxisAlignment.end,
                                                                                          children: [
                                                                                            Text(
                                                                                              getIt<Functions>().formatNumber(
                                                                                                  qty: context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabGroupingItemsList[index][idx]
                                                                                                      .lineLoadedQty),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  color: const Color(0xff007838)),
                                                                                            ),
                                                                                            Text(
                                                                                              getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .currentLanguage
                                                                                                  .loadedQty
                                                                                                  .toUpperCase(),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xff282F3A)),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                            context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                            .catchWeightStatus ==
                                                                                        "No" ||
                                                                                    (getIt<Functions>().getStringToList(
                                                                                            value: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .catchWeightInfo,
                                                                                            quantity: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .lineLoadedQty,
                                                                                            weightUnit: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .uom))
                                                                                        .isEmpty
                                                                                ? const SizedBox()
                                                                                : Row(
                                                                                    children: [
                                                                                      Expanded(
                                                                                        child: Container(
                                                                                          decoration: const BoxDecoration(
                                                                                            color: Color(0xffCDE5FF),
                                                                                            borderRadius: BorderRadius.only(
                                                                                                bottomLeft: Radius.circular(8),
                                                                                                bottomRight: Radius.circular(8)),
                                                                                          ),
                                                                                          padding: EdgeInsets.only(
                                                                                              left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                              top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                              bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                          child: Wrap(
                                                                                            children: List.generate(
                                                                                                (getIt<Functions>().getStringToList(
                                                                                                        value: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .catchWeightInfo,
                                                                                                        quantity: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .lineLoadedQty,
                                                                                                        weightUnit: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .uom))
                                                                                                    .length,
                                                                                                (i) => i == 0
                                                                                                    ? Padding(
                                                                                                        padding: const EdgeInsets.only(right: 10.0),
                                                                                                        child: SvgPicture.asset(
                                                                                                          "assets/catch_weight/measurement.svg",
                                                                                                          height: getIt<Functions>()
                                                                                                              .getWidgetHeight(height: 20),
                                                                                                          width: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 20),
                                                                                                          fit: BoxFit.fill,
                                                                                                        ),
                                                                                                      )
                                                                                                    : i == 1
                                                                                                        ? Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 8)),
                                                                                                            child: Text(
                                                                                                              (getIt<Functions>().getStringToList(
                                                                                                                  value: context
                                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                                      .singleTabGroupingItemsList[
                                                                                                                          index][idx]
                                                                                                                      .catchWeightInfo,
                                                                                                                  quantity: context
                                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                                      .singleTabGroupingItemsList[
                                                                                                                          index][idx]
                                                                                                                      .lineLoadedQty,
                                                                                                                  weightUnit: context
                                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                                      .singleTabGroupingItemsList[
                                                                                                                          index][idx]
                                                                                                                      .uom))[i],
                                                                                                              style: TextStyle(
                                                                                                                  fontSize: getIt<Functions>()
                                                                                                                      .getTextSize(fontSize: 12),
                                                                                                                  fontWeight: FontWeight.w600,
                                                                                                                  color: const Color(0xff282F3A)),
                                                                                                            ),
                                                                                                          )
                                                                                                        : Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>().getWidgetWidth(
                                                                                                                width: ((getIt<Functions>().getStringToList(
                                                                                                                                value: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .catchWeightInfo,
                                                                                                                                quantity: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .lineLoadedQty,
                                                                                                                                weightUnit: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .uom))[i]
                                                                                                                            .length *
                                                                                                                        7) +
                                                                                                                    30),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 12)),
                                                                                                            margin: EdgeInsets.only(
                                                                                                                left: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 6),
                                                                                                                bottom: getIt<Functions>()
                                                                                                                    .getWidgetHeight(height: 2)),
                                                                                                            decoration: BoxDecoration(
                                                                                                              borderRadius: BorderRadius.circular(8),
                                                                                                              color: const Color(0xff7AA440),
                                                                                                            ),
                                                                                                            child: Center(
                                                                                                              child: Text(
                                                                                                                (getIt<Functions>().getStringToList(
                                                                                                                    value: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .catchWeightInfo,
                                                                                                                    quantity: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .lineLoadedQty,
                                                                                                                    weightUnit: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .uom))[i],
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w500,
                                                                                                                    color: const Color(0xffffffff)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      const SizedBox(),
                                                                                    ],
                                                                                  ),
                                                                            idx ==
                                                                                    context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index]
                                                                                            .length -
                                                                                        1
                                                                                ? const SizedBox()
                                                                                : const Divider(color: Color(0xffE0E7EC))
                                                                          ],
                                                                        ),
                                                                      );
                                                                    }),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(
                                                            bottom: getIt<Functions>().getWidgetHeight(
                                                                height: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length > 1
                                                                    ? 20
                                                                    : 0)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  /*RichText(
                                                                    text: TextSpan(
                                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                            style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),*/
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600,
                                                                          fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text:
                                                                                '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff007AFF),
                                                                                fontWeight: FontWeight.w600,
                                                                                fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      if (context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabGroupedItemsList[index][idx]
                                                                              .itemPickedStatus ==
                                                                          "Picked") {
                                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                        getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                            selectedItem: context
                                                                                .read<OutBoundDetailBloc>()
                                                                                .singleTabGroupedItemsList[index][idx],
                                                                            index: index,
                                                                            idx: idx,
                                                                            fromWhere: "Loaded",
                                                                            isSorting: false);
                                                                        getIt<Functions>().showAnimatedDialog(
                                                                            context: context, isFromTop: false, isCloseDisabled: false);
                                                                      } else {
                                                                        ScaffoldMessenger.of(context).clearSnackBars();
                                                                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                            content: Text(
                                                                                getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                      }
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(
                                                                                            "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .itemName,
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              color: const Color(0xff282F3A),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                        Text(
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].remarks}",
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff6F6F6F),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: ListView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        physics: const BouncingScrollPhysics(),
                                                                                        shrinkWrap: true,
                                                                                        padding: EdgeInsets.zero,
                                                                                        children: [
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .itemCode
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .itemCode,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .packageTerms
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .packageTerms,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .sorter
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabGroupedItemsList[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? Text(
                                                                                                      context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                                          .handledBy[0]
                                                                                                          .name,
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Functions>().formatNumber(
                                                                                              qty: context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupedItemsList[index][idx]
                                                                                                  .lineLoadedQty),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                              fontWeight: FontWeight.w600,
                                                                                              color: const Color(0xff007838)),
                                                                                        ),
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .loadedQty
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                (getIt<Functions>().getStringToList(
                                                                                        value: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .catchWeightInfo,
                                                                                        quantity: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .lineLoadedQty,
                                                                                        weightUnit: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .uom))
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            (getIt<Functions>().getStringToList(
                                                                                                    value: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .catchWeightInfo,
                                                                                                    quantity: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .lineLoadedQty,
                                                                                                    weightUnit: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .uom))
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          (getIt<Functions>().getStringToList(
                                                                                                              value: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabGroupedItemsList[index]
                                                                                                                      [idx]
                                                                                                                  .catchWeightInfo,
                                                                                                              quantity: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabGroupedItemsList[index]
                                                                                                                      [idx]
                                                                                                                  .lineLoadedQty,
                                                                                                              weightUnit: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabGroupedItemsList[index]
                                                                                                                      [idx]
                                                                                                                  .uom))[i],
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: ((getIt<Functions>().getStringToList(
                                                                                                                            value: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .catchWeightInfo,
                                                                                                                            quantity: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .lineLoadedQty,
                                                                                                                            weightUnit: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .uom))[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            (getIt<Functions>().getStringToList(
                                                                                                                value: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .catchWeightInfo,
                                                                                                                quantity: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .lineLoadedQty,
                                                                                                                weightUnit: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .uom))[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx ==
                                                                                context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index]
                                                                                        .length -
                                                                                    1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty &&
                                      context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<OutBoundDetailBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                            margin: EdgeInsets.only(
                                                                bottom: getIt<Functions>().getWidgetHeight(
                                                                    height: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length > 1
                                                                        ? 20
                                                                        : 0)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 38),
                                                                  decoration: const BoxDecoration(
                                                                    color: Color(0xffE3E7EA),
                                                                    borderRadius:
                                                                        BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      /*RichText(
                                                                        text: TextSpan(
                                                                          text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                          style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][0].stagingArea,
                                                                                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),*/
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600,
                                                                              fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text:
                                                                                    '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff007AFF),
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount:
                                                                        context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          if (context
                                                                                  .read<OutBoundDetailBloc>()
                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                  .itemPickedStatus ==
                                                                              "Picked") {
                                                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                            getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                                selectedItem: context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupingItemsList[index][idx],
                                                                                index: index,
                                                                                idx: idx,
                                                                                fromWhere: "partial",
                                                                                isSorting: true);
                                                                            getIt<Functions>().showAnimatedDialog(
                                                                                context: context, isFromTop: false, isCloseDisabled: false);
                                                                          } else {
                                                                            ScaffoldMessenger.of(context).clearSnackBars();
                                                                            ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                                content: Text(getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .itemNotPicked)));
                                                                          }
                                                                        },
                                                                        child: Column(
                                                                          children: [
                                                                            Container(
                                                                              padding: EdgeInsets.only(
                                                                                left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                                bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              child: Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                children: [
                                                                                  Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                                    children: [
                                                                                      Container(
                                                                                          height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                          width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                          decoration: BoxDecoration(
                                                                                            shape: BoxShape.circle,
                                                                                            color: Color(int.parse(
                                                                                                "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].typeColor}")),
                                                                                          ),
                                                                                          child: Center(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                                  .itemType,
                                                                                              style: TextStyle(
                                                                                                  color: const Color(0xffffffff),
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 17),
                                                                                                  fontWeight: FontWeight.w700),
                                                                                            ),
                                                                                          )),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                      Expanded(
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                                          children: [
                                                                                            Text(
                                                                                              context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                                  .itemName,
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  color: const Color(0xff282F3A),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                            Text(
                                                                                              "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].remarks}",
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                  color: const Color(0xff6F6F6F),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: ListView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            physics: const BouncingScrollPhysics(),
                                                                                            shrinkWrap: true,
                                                                                            padding: EdgeInsets.zero,
                                                                                            children: [
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .itemCode
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .itemCode,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .uom,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .uom,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .packageTerms
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .packageTerms,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.center,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .sorter
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 12),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  SizedBox(
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 7)),
                                                                                                  context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupingItemsList[index][idx]
                                                                                                          .handledBy
                                                                                                          .isNotEmpty
                                                                                                      ? Text(
                                                                                                          context
                                                                                                              .read<OutBoundDetailBloc>()
                                                                                                              .singleTabGroupingItemsList[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name,
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        )
                                                                                                      : const SizedBox(),
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                          crossAxisAlignment: CrossAxisAlignment.end,
                                                                                          children: [
                                                                                            RichText(
                                                                                              text: TextSpan(
                                                                                                text: getIt<Functions>().formatNumber(
                                                                                                    qty: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .lineLoadedQty),
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                    color: const Color(0xff29B473),
                                                                                                    fontWeight: FontWeight.w600),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text:
                                                                                                          "/${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].quantity}",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 16),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w600)),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .currentLanguage
                                                                                                  .qty
                                                                                                  .toUpperCase(),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xff282F3A)),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                            context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                            .catchWeightStatus ==
                                                                                        "No" ||
                                                                                    (getIt<Functions>().getStringToList(
                                                                                            value: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .catchWeightInfo,
                                                                                            quantity: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .lineLoadedQty,
                                                                                            weightUnit: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .uom))
                                                                                        .isEmpty
                                                                                ? const SizedBox()
                                                                                : Row(
                                                                                    children: [
                                                                                      Expanded(
                                                                                        child: Container(
                                                                                          decoration: const BoxDecoration(
                                                                                            color: Color(0xffCDE5FF),
                                                                                            borderRadius: BorderRadius.only(
                                                                                                bottomLeft: Radius.circular(8),
                                                                                                bottomRight: Radius.circular(8)),
                                                                                          ),
                                                                                          padding: EdgeInsets.only(
                                                                                              left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                              top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                              bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                          child: Wrap(
                                                                                            children: List.generate(
                                                                                                (getIt<Functions>().getStringToList(
                                                                                                        value: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .catchWeightInfo,
                                                                                                        quantity: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .lineLoadedQty,
                                                                                                        weightUnit: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .uom))
                                                                                                    .length,
                                                                                                (i) => i == 0
                                                                                                    ? Padding(
                                                                                                        padding: const EdgeInsets.only(right: 10.0),
                                                                                                        child: SvgPicture.asset(
                                                                                                          "assets/catch_weight/measurement.svg",
                                                                                                          height: getIt<Functions>()
                                                                                                              .getWidgetHeight(height: 20),
                                                                                                          width: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 20),
                                                                                                          fit: BoxFit.fill,
                                                                                                        ),
                                                                                                      )
                                                                                                    : i == 1
                                                                                                        ? Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 8)),
                                                                                                            child: Text(
                                                                                                              (getIt<Functions>().getStringToList(
                                                                                                                  value: context
                                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                                      .singleTabGroupingItemsList[
                                                                                                                          index][idx]
                                                                                                                      .catchWeightInfo,
                                                                                                                  quantity: context
                                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                                      .singleTabGroupingItemsList[
                                                                                                                          index][idx]
                                                                                                                      .lineLoadedQty,
                                                                                                                  weightUnit: context
                                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                                      .singleTabGroupingItemsList[
                                                                                                                          index][idx]
                                                                                                                      .uom))[i],
                                                                                                              style: TextStyle(
                                                                                                                  fontSize: getIt<Functions>()
                                                                                                                      .getTextSize(fontSize: 12),
                                                                                                                  fontWeight: FontWeight.w600,
                                                                                                                  color: const Color(0xff282F3A)),
                                                                                                            ),
                                                                                                          )
                                                                                                        : Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>().getWidgetWidth(
                                                                                                                width: ((getIt<Functions>().getStringToList(
                                                                                                                                value: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .catchWeightInfo,
                                                                                                                                quantity: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .lineLoadedQty,
                                                                                                                                weightUnit: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .uom))[i]
                                                                                                                            .length *
                                                                                                                        7) +
                                                                                                                    30),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 12)),
                                                                                                            margin: EdgeInsets.only(
                                                                                                                left: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 6),
                                                                                                                bottom: getIt<Functions>()
                                                                                                                    .getWidgetHeight(height: 2)),
                                                                                                            decoration: BoxDecoration(
                                                                                                              borderRadius: BorderRadius.circular(8),
                                                                                                              color: const Color(0xff7AA440),
                                                                                                            ),
                                                                                                            child: Center(
                                                                                                              child: Text(
                                                                                                                (getIt<Functions>().getStringToList(
                                                                                                                    value: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .catchWeightInfo,
                                                                                                                    quantity: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .lineLoadedQty,
                                                                                                                    weightUnit: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .uom))[i],
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w500,
                                                                                                                    color: const Color(0xffffffff)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      const SizedBox(),
                                                                                    ],
                                                                                  ),
                                                                            idx ==
                                                                                    context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index]
                                                                                            .length -
                                                                                        1
                                                                                ? const SizedBox()
                                                                                : const Divider(color: Color(0xffE0E7EC))
                                                                          ],
                                                                        ),
                                                                      );
                                                                    }),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(
                                                            bottom: getIt<Functions>().getWidgetHeight(
                                                                height: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length > 1
                                                                    ? 20
                                                                    : 0)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 38),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  /*RichText(
                                                                    text: TextSpan(
                                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                            style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),*/
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600,
                                                                          fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text:
                                                                                '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                color: const Color(0xff007AFF),
                                                                                fontWeight: FontWeight.w600,
                                                                                fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      if (context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabGroupedItemsList[index][idx]
                                                                              .itemPickedStatus ==
                                                                          "Picked") {
                                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                        getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                            selectedItem: context
                                                                                .read<OutBoundDetailBloc>()
                                                                                .singleTabGroupedItemsList[index][idx],
                                                                            index: index,
                                                                            idx: idx,
                                                                            fromWhere: "partial",
                                                                            isSorting: false);
                                                                        getIt<Functions>().showAnimatedDialog(
                                                                            context: context, isFromTop: false, isCloseDisabled: false);
                                                                      } else {
                                                                        ScaffoldMessenger.of(context).clearSnackBars();
                                                                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                            content: Text(
                                                                                getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                      }
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(
                                                                                            "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        Text(
                                                                                          context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .itemName,
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w600,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              color: const Color(0xff282F3A),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                        Text(
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].remarks}",
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff6F6F6F),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: ListView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        physics: const BouncingScrollPhysics(),
                                                                                        shrinkWrap: true,
                                                                                        padding: EdgeInsets.zero,
                                                                                        children: [
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .itemCode
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .itemCode,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .packageTerms
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .packageTerms,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .sorter
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                              context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabGroupedItemsList[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? Text(
                                                                                                      context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                                          .handledBy[0]
                                                                                                          .name,
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                                      children: [
                                                                                        RichText(
                                                                                          text: TextSpan(
                                                                                            text: getIt<Functions>().formatNumber(
                                                                                                qty: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .lineLoadedQty),
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 28),
                                                                                                color: const Color(0xff29B473),
                                                                                                fontWeight: FontWeight.w600),
                                                                                            children: [
                                                                                              TextSpan(
                                                                                                  text:
                                                                                                      "/${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity}",
                                                                                                  style: TextStyle(
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 16),
                                                                                                      color: const Color(0xff007838),
                                                                                                      fontWeight: FontWeight.w600)),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .qty
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                (getIt<Functions>().getStringToList(
                                                                                        value: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .catchWeightInfo,
                                                                                        quantity: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .lineLoadedQty,
                                                                                        weightUnit: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .uom))
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            (getIt<Functions>().getStringToList(
                                                                                                    value: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .catchWeightInfo,
                                                                                                    quantity: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .lineLoadedQty,
                                                                                                    weightUnit: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .uom))
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          (getIt<Functions>().getStringToList(
                                                                                                              value: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabGroupedItemsList[index]
                                                                                                                      [idx]
                                                                                                                  .catchWeightInfo,
                                                                                                              quantity: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabGroupedItemsList[index]
                                                                                                                      [idx]
                                                                                                                  .lineLoadedQty,
                                                                                                              weightUnit: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabGroupedItemsList[index]
                                                                                                                      [idx]
                                                                                                                  .uom))[i],
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: ((getIt<Functions>().getStringToList(
                                                                                                                            value: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .catchWeightInfo,
                                                                                                                            quantity: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .lineLoadedQty,
                                                                                                                            weightUnit: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .uom))[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            (getIt<Functions>().getStringToList(
                                                                                                                value: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .catchWeightInfo,
                                                                                                                quantity: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .lineLoadedQty,
                                                                                                                weightUnit: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .uom))[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx ==
                                                                                context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index]
                                                                                        .length -
                                                                                    1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _unavailableEmptyController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: context.read<OutBoundDetailBloc>().singleTabItemsList.length,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return InkWell(
                                                    onTap: () {
                                                      if (context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemPickedStatus == "Picked") {
                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                        getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                            selectedItem: context.read<OutBoundDetailBloc>().singleTabItemsList[idx],
                                                            index: idx,
                                                            idx: idx,
                                                            fromWhere: "unavailable",
                                                            isSorting: false);
                                                        getIt<Functions>()
                                                            .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                      } else {
                                                        ScaffoldMessenger.of(context).clearSnackBars();
                                                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                            content: Text(getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                      }
                                                    },
                                                    child: Column(
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 38),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              RichText(
                                                                text: TextSpan(
                                                                  text: "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                  style: TextStyle(
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                      color: const Color(0xff282F3A),
                                                                      fontWeight: FontWeight.w600,
                                                                      fontFamily: "overpassmono"),
                                                                  children: [
                                                                    TextSpan(
                                                                        text:
                                                                            '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff007AFF),
                                                                            fontWeight: FontWeight.w600,
                                                                            fontFamily: "overpassmono")),
                                                                  ],
                                                                ),
                                                              ),
                                                              RichText(
                                                                text: TextSpan(
                                                                  text:
                                                                      "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()} : ",
                                                                  style: TextStyle(
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                      color: const Color(0xff282F3A),
                                                                      fontWeight: FontWeight.w600,
                                                                      fontFamily: "overpassmono"),
                                                                  children: [
                                                                    TextSpan(
                                                                        text: context
                                                                            .read<OutBoundDetailBloc>()
                                                                            .singleTabItemsList[idx]
                                                                            .itemLoadedUnavailableReason
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff007AFF),
                                                                            fontWeight: FontWeight.w600,
                                                                            fontFamily: "overpassmono")),
                                                                  ],
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        Container(
                                                          padding: EdgeInsets.only(
                                                            left: getIt<Functions>().getWidgetWidth(width: 20),
                                                            right: getIt<Functions>().getWidgetWidth(width: 20),
                                                            top: getIt<Functions>().getWidgetHeight(height: 16),
                                                            bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                          ),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffFFFFFF),
                                                            borderRadius:
                                                                BorderRadius.only(bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                          ),
                                                          child: Column(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                            children: [
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  Container(
                                                                      height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                      width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                      decoration: BoxDecoration(
                                                                        shape: BoxShape.circle,
                                                                        color: Color(int.parse(
                                                                            "0XFF${context.read<OutBoundDetailBloc>().singleTabItemsList[idx].typeColor}")),
                                                                      ),
                                                                      child: Center(
                                                                        child: Text(
                                                                          context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemType,
                                                                          style: TextStyle(
                                                                              color: const Color(0xffffffff),
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                              fontWeight: FontWeight.w700),
                                                                        ),
                                                                      )),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                  Expanded(
                                                                    child: Column(
                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                      children: [
                                                                        Text(
                                                                          context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemName,
                                                                          maxLines: 1,
                                                                          style: TextStyle(
                                                                              fontWeight: FontWeight.w600,
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                              color: const Color(0xff282F3A),
                                                                              overflow: TextOverflow.ellipsis),
                                                                        ),
                                                                        Text(
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabItemsList[idx].remarks}",
                                                                          maxLines: 1,
                                                                          style: TextStyle(
                                                                              fontWeight: FontWeight.w500,
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                              color: const Color(0xff6F6F6F),
                                                                              overflow: TextOverflow.ellipsis),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                              ),
                                                              SizedBox(
                                                                height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                child: Row(
                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                  children: [
                                                                    Expanded(
                                                                      child: ListView(
                                                                        scrollDirection: Axis.horizontal,
                                                                        physics: const BouncingScrollPhysics(),
                                                                        shrinkWrap: true,
                                                                        padding: EdgeInsets.zero,
                                                                        children: [
                                                                          Column(
                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Text(
                                                                                getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .itemCode
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w500,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff8A8D8E)),
                                                                              ),
                                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                              Text(
                                                                                context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemCode,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff282F3A)),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                          Column(
                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Text(
                                                                                getIt<Variables>().generalVariables.currentLanguage.uom,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w500,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff8A8D8E)),
                                                                              ),
                                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                              Text(
                                                                                context.read<OutBoundDetailBloc>().singleTabItemsList[idx].uom,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff282F3A)),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                          Column(
                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Text(
                                                                                getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .packageTerms
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w500,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff8A8D8E)),
                                                                              ),
                                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                              Text(
                                                                                context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabItemsList[idx]
                                                                                    .packageTerms,
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff282F3A)),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                          Column(
                                                                            mainAxisAlignment: MainAxisAlignment.center,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Text(
                                                                                getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .sorter
                                                                                    .toUpperCase(),
                                                                                style: TextStyle(
                                                                                    fontWeight: FontWeight.w500,
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                    color: const Color(0xff8A8D8E)),
                                                                              ),
                                                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                              context
                                                                                      .read<OutBoundDetailBloc>()
                                                                                      .singleTabItemsList[idx]
                                                                                      .handledBy
                                                                                      .isNotEmpty
                                                                                  ? Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabItemsList[idx]
                                                                                          .handledBy[0]
                                                                                          .name,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          color: const Color(0xff282F3A)),
                                                                                    )
                                                                                  : const SizedBox(),
                                                                            ],
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    Column(
                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                      children: [
                                                                        Text(
                                                                          getIt<Functions>().formatNumber(
                                                                              qty: context
                                                                                  .read<OutBoundDetailBloc>()
                                                                                  .singleTabItemsList[idx]
                                                                                  .quantity),
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                              fontWeight: FontWeight.w600,
                                                                              color: const Color(0xffDC4748)),
                                                                        ),
                                                                        Text(
                                                                          getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase(),
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                              fontWeight: FontWeight.w500,
                                                                              color: const Color(0xff282F3A)),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        context.read<OutBoundDetailBloc>().singleTabItemsList[idx].catchWeightStatus == "No" ||
                                                                (getIt<Functions>().getStringToList(
                                                                        value: context
                                                                            .read<OutBoundDetailBloc>()
                                                                            .singleTabItemsList[idx]
                                                                            .catchWeightInfo,
                                                                        quantity:
                                                                            context.read<OutBoundDetailBloc>().singleTabItemsList[idx].lineLoadedQty,
                                                                        weightUnit: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].uom))
                                                                    .isEmpty
                                                            ? const SizedBox()
                                                            : Row(
                                                                children: [
                                                                  Expanded(
                                                                    child: Container(
                                                                      decoration: const BoxDecoration(
                                                                        color: Color(0xffCDE5FF),
                                                                        borderRadius: BorderRadius.only(
                                                                            bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                                      ),
                                                                      padding: EdgeInsets.only(
                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                      child: Wrap(
                                                                        children: List.generate(
                                                                            (getIt<Functions>().getStringToList(
                                                                                    value: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabItemsList[idx]
                                                                                        .catchWeightInfo,
                                                                                    quantity: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabItemsList[idx]
                                                                                        .lineLoadedQty,
                                                                                    weightUnit: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabItemsList[idx]
                                                                                        .uom))
                                                                                .length,
                                                                            (i) => i == 0
                                                                                ? Padding(
                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                    child: SvgPicture.asset(
                                                                                      "assets/catch_weight/measurement.svg",
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 20),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                      fit: BoxFit.fill,
                                                                                    ),
                                                                                  )
                                                                                : i == 1
                                                                                    ? Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 20),
                                                                                        padding: EdgeInsets.symmetric(
                                                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 8)),
                                                                                        child: Text(
                                                                                          "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].lineLoadedQty, weightUnit: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].uom))[i]}  : ",
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                              fontWeight: FontWeight.w600,
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      )
                                                                                    : Container(
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 20),
                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                            width: ((getIt<Functions>().getStringToList(
                                                                                                            value: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabItemsList[idx]
                                                                                                                .catchWeightInfo,
                                                                                                            quantity: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabItemsList[idx]
                                                                                                                .lineLoadedQty,
                                                                                                            weightUnit: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabItemsList[idx]
                                                                                                                .uom))[i]
                                                                                                        .length *
                                                                                                    7) +
                                                                                                30),
                                                                                        padding: EdgeInsets.symmetric(
                                                                                            horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                                                        margin: EdgeInsets.only(
                                                                                            left: getIt<Functions>().getWidgetWidth(width: 6),
                                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 2)),
                                                                                        decoration: BoxDecoration(
                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                          color: const Color(0xff7AA440),
                                                                                        ),
                                                                                        child: Center(
                                                                                          child: Text(
                                                                                            (getIt<Functions>().getStringToList(
                                                                                                value: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabItemsList[idx]
                                                                                                    .catchWeightInfo,
                                                                                                quantity: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabItemsList[idx]
                                                                                                    .lineLoadedQty,
                                                                                                weightUnit: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabItemsList[idx]
                                                                                                    .uom))[i],
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                fontWeight: FontWeight.w500,
                                                                                                color: const Color(0xffffffff)),
                                                                                          ),
                                                                                        ),
                                                                                      )),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                  const SizedBox(),
                                                                ],
                                                              ),
                                                        /*idx == context.read<OutBoundDetailBloc>().singleTabItemsList.length - 1
                                                              ? const SizedBox()
                                                              : const Divider(color: Color(0xffE0E7EC))*/
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 38),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              /* RichText(
                                                                  text: TextSpan(
                                                                    text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                    style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                          style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 12), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                    ],
                                                                  ),
                                                                ),*/
                                                              RichText(
                                                                text: TextSpan(
                                                                  text: "${getIt<Variables>().generalVariables.currentLanguage.loadingBay} : ",
                                                                  style: TextStyle(
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                      color: const Color(0xff282F3A),
                                                                      fontWeight: FontWeight.w600,
                                                                      fontFamily: "overpassmono"),
                                                                  children: [
                                                                    TextSpan(
                                                                        text:
                                                                            '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff007AFF),
                                                                            fontWeight: FontWeight.w600,
                                                                            fontFamily: "overpassmono")),
                                                                  ],
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  if (context
                                                                          .read<OutBoundDetailBloc>()
                                                                          .singleTabGroupedItemsList[index][idx]
                                                                          .itemPickedStatus ==
                                                                      "Picked") {
                                                                    context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                    getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                        selectedItem:
                                                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx],
                                                                        index: index,
                                                                        idx: idx,
                                                                        fromWhere: "yet_to_sort",
                                                                        isSorting: false);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  } else {
                                                                    ScaffoldMessenger.of(context).clearSnackBars();
                                                                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                        content:
                                                                            Text(getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                  }
                                                                },
                                                                child: Column(
                                                                  children: [
                                                                    Container(
                                                                      padding: EdgeInsets.only(
                                                                        left: getIt<Functions>().getWidgetWidth(width: 20),
                                                                        right: getIt<Functions>().getWidgetWidth(width: 20),
                                                                        top: getIt<Functions>().getWidgetHeight(height: 16),
                                                                        bottom: getIt<Functions>().getWidgetHeight(height: 16),
                                                                      ),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Row(
                                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              Container(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 28),
                                                                                  width: getIt<Functions>().getWidgetWidth(width: 28),
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                    color: Color(int.parse(
                                                                                        "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                  ),
                                                                                  child: Center(
                                                                                    child: Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                          .itemType,
                                                                                      style: TextStyle(
                                                                                          color: const Color(0xffffffff),
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                          fontWeight: FontWeight.w700),
                                                                                    ),
                                                                                  )),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                              Expanded(
                                                                                child: Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  children: [
                                                                                    Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                          .itemName,
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w600,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          color: const Color(0xff282F3A),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                    Text(
                                                                                      "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].remarks}",
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff6F6F6F),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 58),
                                                                            child: Row(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: ListView(
                                                                                    scrollDirection: Axis.horizontal,
                                                                                    physics: const BouncingScrollPhysics(),
                                                                                    shrinkWrap: true,
                                                                                    padding: EdgeInsets.zero,
                                                                                    children: [
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .itemCode
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .itemCode,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>().generalVariables.currentLanguage.uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .packageTerms
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          SizedBox(
                                                                                              height: getIt<Functions>().getWidgetHeight(height: 7)),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .packageTerms,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.end,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Functions>().formatNumber(
                                                                                          qty: context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .quantity),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                                          fontWeight: FontWeight.w600,
                                                                                          color: const Color(0xff007AFF)),
                                                                                    ),
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .qty
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          fontWeight: FontWeight.w500,
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                    .catchWeightStatus ==
                                                                                "No" ||
                                                                            (getIt<Functions>().getStringToList(
                                                                                    value: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightInfo,
                                                                                    quantity: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .lineLoadedQty,
                                                                                    weightUnit: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .uom))
                                                                                .isEmpty
                                                                        ? const SizedBox()
                                                                        : Row(
                                                                            children: [
                                                                              Expanded(
                                                                                child: Container(
                                                                                  decoration: const BoxDecoration(
                                                                                    color: Color(0xffCDE5FF),
                                                                                    borderRadius: BorderRadius.only(
                                                                                        bottomLeft: Radius.circular(8),
                                                                                        bottomRight: Radius.circular(8)),
                                                                                  ),
                                                                                  padding: EdgeInsets.only(
                                                                                      left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                      top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                      bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                  child: Wrap(
                                                                                    children: List.generate(
                                                                                        (getIt<Functions>().getStringToList(
                                                                                                value: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .catchWeightInfo,
                                                                                                quantity: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .lineLoadedQty,
                                                                                                weightUnit: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom))
                                                                                            .length,
                                                                                        (i) => i == 0
                                                                                            ? Padding(
                                                                                                padding: const EdgeInsets.only(right: 10.0),
                                                                                                child: SvgPicture.asset(
                                                                                                  "assets/catch_weight/measurement.svg",
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 20),
                                                                                                  width: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                                  fit: BoxFit.fill,
                                                                                                ),
                                                                                              )
                                                                                            : i == 1
                                                                                                ? Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 8)),
                                                                                                    child: Text(
                                                                                                      "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].uom))[i]}  : ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                  )
                                                                                                : Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    width: getIt<Functions>().getWidgetWidth(
                                                                                                        width: ((getIt<Functions>().getStringToList(
                                                                                                                        value: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .catchWeightInfo,
                                                                                                                        quantity: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .lineLoadedQty,
                                                                                                                        weightUnit: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .uom))[i]
                                                                                                                    .length *
                                                                                                                7) +
                                                                                                            30),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 12)),
                                                                                                    margin: EdgeInsets.only(
                                                                                                        left: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 6),
                                                                                                        bottom: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 2)),
                                                                                                    decoration: BoxDecoration(
                                                                                                      borderRadius: BorderRadius.circular(8),
                                                                                                      color: const Color(0xff7AA440),
                                                                                                    ),
                                                                                                    child: Center(
                                                                                                      child: Text(
                                                                                                        (getIt<Functions>().getStringToList(
                                                                                                            value: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .catchWeightInfo,
                                                                                                            quantity: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .lineLoadedQty,
                                                                                                            weightUnit: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .uom))[i],
                                                                                                        style: TextStyle(
                                                                                                            fontSize: getIt<Functions>()
                                                                                                                .getTextSize(fontSize: 12),
                                                                                                            fontWeight: FontWeight.w500,
                                                                                                            color: const Color(0xffffffff)),
                                                                                                      ),
                                                                                                    ),
                                                                                                  )),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              const SizedBox(),
                                                                            ],
                                                                          ),
                                                                    idx ==
                                                                            context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index]
                                                                                    .length -
                                                                                1
                                                                        ? const SizedBox()
                                                                        : const Divider(color: Color(0xffE0E7EC))
                                                                  ],
                                                                ),
                                                              );
                                                            }),
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                        }
                      } else if (state is OutBoundDetailLoading) {
                        return Container(
                          margin: EdgeInsets.only(
                              left: getIt<Functions>().getWidgetWidth(width: 20), right: getIt<Functions>().getWidgetWidth(width: 20)),
                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                          child: Skeletonizer(
                            enabled: true,
                            child: ListView.builder(
                                padding: EdgeInsets.zero,
                                physics: const ScrollPhysics(),
                                itemCount: 1,
                                shrinkWrap: true,
                                itemBuilder: (BuildContext context, int index) {
                                  return Container(
                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                    child: Column(
                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: [
                                        Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                          decoration: const BoxDecoration(
                                            color: Color(0xffE3E7EA),
                                            borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                          ),
                                          padding: EdgeInsets.symmetric(
                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                          child: IntrinsicHeight(
                                            child: Row(
                                              mainAxisAlignment: MainAxisAlignment.start,
                                              crossAxisAlignment: CrossAxisAlignment.center,
                                              children: [
                                                Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A))),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A))),
                                                SizedBox(width: getIt<Functions>().getWidgetWidth(width: 80)),
                                                Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A))),
                                              ],
                                            ),
                                          ),
                                        ),
                                        ListView.builder(
                                            padding: EdgeInsets.zero,
                                            physics: const NeverScrollableScrollPhysics(),
                                            shrinkWrap: true,
                                            itemCount: 1,
                                            itemBuilder: (BuildContext context, int idx) {
                                              return Container(
                                                padding: EdgeInsets.only(
                                                    left: getIt<Functions>().getWidgetWidth(width: 20),
                                                    right: getIt<Functions>().getWidgetWidth(width: 20),
                                                    top: getIt<Functions>().getWidgetHeight(height: 16)),
                                                child: Column(
                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                      children: [
                                                        Skeleton.shade(
                                                          child: Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 28),
                                                              width: getIt<Functions>().getWidgetWidth(width: 28),
                                                              decoration: const BoxDecoration(
                                                                shape: BoxShape.circle,
                                                                color: Colors.purpleAccent,
                                                              ),
                                                              child: Center(
                                                                child: Text(
                                                                  "D",
                                                                  style: TextStyle(
                                                                      color: const Color(0xffffffff),
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 15),
                                                                      fontWeight: FontWeight.w700),
                                                                ),
                                                              )),
                                                        ),
                                                        SizedBox(
                                                          width: getIt<Functions>().getWidgetWidth(width: 10),
                                                        ),
                                                        Expanded(
                                                          child: Text(
                                                            "CORN FLOUR - 1KG",
                                                            maxLines: 1,
                                                            style: TextStyle(
                                                                fontWeight: FontWeight.w600,
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                color: const Color(0xff282F3A),
                                                                overflow: TextOverflow.ellipsis),
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: getIt<Functions>().getWidgetHeight(height: 14),
                                                    ),
                                                    SizedBox(
                                                      height: getIt<Functions>().getWidgetHeight(height: 58),
                                                      child: Row(
                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                        children: [
                                                          Expanded(
                                                            child: SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 35),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F008",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 60)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                          SizedBox(
                                                            width: getIt<Functions>().getWidgetWidth(width: 10),
                                                          ),
                                                          Column(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Text(
                                                                "24",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 28),
                                                                    fontWeight: FontWeight.w600,
                                                                    color: const Color(0xff007AFF)),
                                                              ),
                                                              Text(
                                                                getIt<Variables>().generalVariables.currentLanguage.qtyToSort.toUpperCase(),
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                    fontWeight: FontWeight.w500,
                                                                    color: const Color(0xff282F3A)),
                                                              ),
                                                            ],
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                  ],
                                                ),
                                              );
                                            })
                                      ],
                                    ),
                                  );
                                }),
                          ),
                        );
                      } else {
                        return const SizedBox();
                      }
                    },
                  ),
                ),
              ],
            ),
          );
        } else {
          return Container(
            color: const Color(0xffEEF4FF),
            child: Column(
              children: [
                BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(
                  builder: (BuildContext context, OutBoundDetailState state) {
                    return SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 252),
                      child: AppBar(
                        backgroundColor: const Color(0xffEEF4FF),
                        leading: IconButton(
                          onPressed: () {
                            getIt<Variables>().generalVariables.indexName = getIt<Variables>()
                                .generalVariables
                                .outBoundRouteList[getIt<Variables>().generalVariables.outBoundRouteList.length - 1];
                            context.read<NavigationBloc>().add(const NavigationInitialEvent());
                            getIt<Variables>()
                                .generalVariables
                                .outBoundRouteList
                                .removeAt(getIt<Variables>().generalVariables.outBoundRouteList.length - 1);
                          },
                          icon: const Icon(Icons.arrow_back, color: Color(0xffffffff)),
                        ),
                        titleSpacing: 0,
                        title: AnimatedCrossFade(
                          firstChild: Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Text(
                                "${getIt<Variables>().generalVariables.currentLanguage.so.toUpperCase()} # ${context.read<OutBoundDetailBloc>().selectedSoList[0].soNum}  ",
                                style: TextStyle(
                                    fontWeight: FontWeight.w600,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                    color: const Color(0xffffffff)),
                              ),
                              context.read<OutBoundDetailBloc>().selectedSoList.length > 1
                                  ? Tooltip(
                                      triggerMode: TooltipTriggerMode.tap,
                                      message: List<String>.generate(context.read<OutBoundDetailBloc>().selectedSoList.length,
                                          (i) => context.read<OutBoundDetailBloc>().selectedSoList[i].soNum).join(" , "),
                                      child: Text(
                                        "+${context.read<OutBoundDetailBloc>().selectedSoList.length - 1} more",
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                            color: const Color(0xffffffff),
                                            decoration: TextDecoration.underline,
                                            decorationColor: Colors.white),
                                      ),
                                    )
                                  : const SizedBox(),
                            ],
                          ),
                          secondChild: textBars(controller: searchBar),
                          crossFadeState: context.read<OutBoundDetailBloc>().searchBarEnabled ? CrossFadeState.showSecond : CrossFadeState.showFirst,
                          duration: const Duration(milliseconds: 100),
                        ),
                        flexibleSpace: Container(
                          decoration: BoxDecoration(
                            gradient: LinearGradient(
                              begin: const Alignment(0.00, 1.00),
                              end: const Alignment(0, -1),
                              colors: [
                                getIt<Variables>().generalVariables.currentBackGround.bgColor1,
                                getIt<Variables>().generalVariables.currentBackGround.bgColor2
                              ],
                            ),
                          ),
                        ),
                        actions: [
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 34),
                            width: getIt<Functions>().getWidgetWidth(width: 34),
                            child: PageView.builder(
                              controller: PageController(),
                              scrollDirection: Axis.vertical,
                              allowImplicitScrolling: true,
                              onPageChanged: state is OutBoundDetailLoading
                                  ? (value) {}
                                  : (value) {
                                      getIt<Variables>().generalVariables.currentBackGround =
                                          getIt<Variables>().generalVariables.backGroundChangesList[value];
                                      context.read<OutBoundDetailBloc>().currentListIndex = value;
                                      context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                    },
                              itemCount: getIt<Variables>().generalVariables.backGroundChangesList.length,
                              itemBuilder: (BuildContext context, int index) {
                                return Container(
                                    height: getIt<Functions>().getWidgetHeight(height: 34),
                                    width: getIt<Functions>().getWidgetWidth(width: 34),
                                    margin: const EdgeInsets.symmetric(vertical: 2),
                                    decoration: BoxDecoration(
                                        borderRadius: BorderRadius.circular(10),
                                        color: getIt<Variables>().generalVariables.backGroundChangesList[index].color,
                                        border: Border.all(color: Colors.white, width: 1)),
                                    child: Center(
                                        child: Text(getIt<Variables>().generalVariables.backGroundChangesList[index].symbol,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w600,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                color: Colors.white))));
                              },
                            ),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 10),
                          ),
                          InkWell(
                            onTap: state is OutBoundDetailLoading
                                ? () {}
                                : () {
                                    context.read<OutBoundDetailBloc>().searchBarEnabled = !context.read<OutBoundDetailBloc>().searchBarEnabled;
                                    if (!context.read<OutBoundDetailBloc>().searchBarEnabled) {
                                      searchBar.clear();
                                      FocusManager.instance.primaryFocus!.unfocus();
                                      context.read<OutBoundDetailBloc>().searchText = "";
                                    }
                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                  },
                            child: Container(
                              height: getIt<Functions>().getWidgetHeight(height: 34),
                              width: getIt<Functions>().getWidgetWidth(width: 34),
                              decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFFFFFFF).withOpacity(0.2)),
                              child: Center(
                                child: SvgPicture.asset(
                                  'assets/warehouse_list/search_icon.svg',
                                  height: getIt<Functions>().getWidgetHeight(height: 15),
                                  width: getIt<Functions>().getWidgetWidth(width: 15),
                                  fit: BoxFit.fill,
                                ),
                              ),
                            ),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 10),
                          ),
                          InkWell(
                            onTap: state is OutBoundDetailLoading
                                ? () {}
                                : () {
                                    getIt<Variables>().generalVariables.filterSelectedMainIndex = 0;
                                    Scaffold.of(context).openEndDrawer();
                                  },
                            child: Badge(
                              backgroundColor: const Color(0xff007AFF),
                              smallSize: getIt<Variables>().generalVariables.selectedFilters.isEmpty ? 0 : 8,
                              child: Container(
                                height: getIt<Functions>().getWidgetHeight(height: 34),
                                width: getIt<Functions>().getWidgetWidth(width: 34),
                                decoration: BoxDecoration(shape: BoxShape.circle, color: const Color(0xFFFFFFFF).withOpacity(0.2)),
                                child: Center(
                                  child: SvgPicture.asset(
                                    'assets/warehouse_list/filter_icon.svg',
                                    height: getIt<Functions>().getWidgetHeight(height: 17.30),
                                    width: getIt<Functions>().getWidgetWidth(width: 17.30),
                                    fit: BoxFit.fill,
                                  ),
                                ),
                              ),
                            ),
                          ),
                          SizedBox(
                            width: getIt<Functions>().getWidgetWidth(width: 10),
                          ),
                        ],
                        bottom: PreferredSize(
                          preferredSize: Size(
                              getIt<Functions>().getWidgetWidth(
                                  width: Orientation.portrait == MediaQuery.of(context).orientation
                                      ? getIt<Variables>().generalVariables.width
                                      : getIt<Variables>().generalVariables.height),
                              getIt<Functions>().getWidgetHeight(height: 104)),
                          child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 16)),
                            child: Column(
                              mainAxisAlignment: MainAxisAlignment.center,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                SizedBox(
                                  height: getIt<Functions>().getWidgetHeight(height: 44),
                                  child: ListView(
                                    scrollDirection: Axis.horizontal,
                                    physics: const BouncingScrollPhysics(),
                                    shrinkWrap: true,
                                    padding: EdgeInsets.zero,
                                    children: [
                                      InkWell(
                                        onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                            ? () {}
                                            : () {
                                                getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                Scaffold.of(context).openEndDrawer();
                                              },
                                        child: Center(
                                          child: SvgPicture.asset(
                                            "assets/pick_list/status_image.svg",
                                            height: getIt<Functions>().getWidgetHeight(height: 20),
                                            width: getIt<Functions>().getWidgetWidth(width: 20),
                                            fit: BoxFit.fill,
                                          ),
                                        ),
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 12)),
                                      InkWell(
                                        onTap: getIt<Variables>().generalVariables.isNetworkOffline
                                            ? () {}
                                            : () {
                                                getIt<Variables>().generalVariables.isStatusDrawer = true;
                                                Scaffold.of(context).openEndDrawer();
                                              },
                                        child: Column(
                                          mainAxisAlignment: MainAxisAlignment.center,
                                          crossAxisAlignment: CrossAxisAlignment.start,
                                          mainAxisSize: MainAxisSize.min,
                                          children: [
                                            Text(
                                              getIt<Variables>().generalVariables.currentLanguage.status.toUpperCase(),
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w400,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                  color: const Color(0xffffffff)),
                                            ),
                                            Text(
                                              getIt<Variables>().generalVariables.tripListMainIdData.tripStatus == "Pending"
                                                  ? getIt<Variables>().generalVariables.currentLanguage.pending.toUpperCase()
                                                  : getIt<Variables>().generalVariables.tripListMainIdData.tripStatus == "Partial"
                                                      ? getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()
                                                      : getIt<Variables>().generalVariables.currentLanguage.completed.toUpperCase(),
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                  color: const Color(0xffF8B11D)),
                                            ),
                                          ],
                                        ),
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 9.33)),
                                      const VerticalDivider(color: Color(0xffE0E7Ec), width: 0),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 9.33)),
                                      Column(
                                        mainAxisAlignment: MainAxisAlignment.center,
                                        crossAxisAlignment: CrossAxisAlignment.center,
                                        mainAxisSize: MainAxisSize.min,
                                        children: [
                                          Text(
                                            getIt<Variables>().generalVariables.currentLanguage.totalItems.toUpperCase(),
                                            style: TextStyle(
                                                fontWeight: FontWeight.w400,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                color: const Color(0xffffffff)),
                                          ),
                                          Text(
                                            (List<int>.generate(context.read<OutBoundDetailBloc>().selectedSoList.length,
                                                    (i) => int.parse(context.read<OutBoundDetailBloc>().selectedSoList[i].soNoOfItems)))
                                                .fold<int>(0, (a, b) => a + b)
                                                .toString(),
                                            style: TextStyle(
                                                fontWeight: FontWeight.w700,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                color: const Color(0xff50D464)),
                                          ),
                                        ],
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 9.33)),
                                      const VerticalDivider(color: Color(0xffE0E7Ec), width: 0),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 9.33)),
                                      Column(
                                        mainAxisAlignment: MainAxisAlignment.center,
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        mainAxisSize: MainAxisSize.min,
                                        children: [
                                          Text(
                                            getIt<Variables>().generalVariables.currentLanguage.route.toUpperCase(),
                                            style: TextStyle(
                                                fontWeight: FontWeight.w400,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                color: const Color(0xffffffff)),
                                          ),
                                          Text(
                                            getIt<Variables>().generalVariables.tripListMainIdData.tripRoute,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w700,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                color: const Color(0xff50D464)),
                                          ),
                                        ],
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 9.33)),
                                      const VerticalDivider(color: Color(0xffE0E7Ec), width: 0),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 9.33)),
                                      Column(
                                        mainAxisAlignment: MainAxisAlignment.center,
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        mainAxisSize: MainAxisSize.min,
                                        children: [
                                          Text(
                                            getIt<Variables>().generalVariables.currentLanguage.dateAndTime.toUpperCase(),
                                            style: TextStyle(
                                                fontWeight: FontWeight.w400,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                color: const Color(0xffffffff)),
                                          ),
                                          Text(
                                            getIt<Variables>().generalVariables.tripListMainIdData.tripCreatedTime,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w700,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 13),
                                                color: const Color(0xff50D464)),
                                          ),
                                        ],
                                      ),
                                    ],
                                  ),
                                ),
                                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 23)),
                                Container(
                                  height: getIt<Functions>().getWidgetHeight(height: 45),
                                  padding: EdgeInsets.symmetric(
                                      horizontal: getIt<Functions>().getWidgetWidth(width: 10),
                                      vertical: getIt<Functions>().getWidgetHeight(height: 4)),
                                  decoration: BoxDecoration(color: const Color(0xffFFFFFF), borderRadius: BorderRadius.circular(7)),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                    crossAxisAlignment: CrossAxisAlignment.center,
                                    children: [
                                      Column(
                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            getIt<Variables>().generalVariables.currentLanguage.timeSpent,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                color: const Color(0xff1D2736)),
                                          ),
                                          BlocBuilder<TimerBloc, TimerState>(builder: (BuildContext context, TimerState state) {
                                            return Text(
                                              timerString,
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                  color: const Color(0xff007aff)),
                                            );
                                          }),
                                        ],
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 12)),
                                      Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 31),
                                        width: getIt<Functions>().getWidgetWidth(width: 105),
                                        decoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                                        child: Row(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          crossAxisAlignment: CrossAxisAlignment.center,
                                          children: [
                                            Expanded(
                                                child: Container(
                                              decoration: const BoxDecoration(
                                                borderRadius: BorderRadius.only(topLeft: Radius.circular(4), bottomLeft: Radius.circular(4)),
                                                color: Color(0xff007838),
                                              ),
                                              child: Center(
                                                child: Text(
                                                  Hive.box<ItemsList>('items_list')
                                                      .values
                                                      .toList()
                                                      .where((element) =>
                                                          element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId &&
                                                          element.itemLoadedStatus == "Loaded" &&
                                                          element.isProgressStatus &&
                                                          (element.handledBy.isNotEmpty
                                                              ? (element.handledBy[0].code ==
                                                                  getIt<Variables>().generalVariables.userDataEmployeeCode)
                                                              : false))
                                                      .toList()
                                                      .length
                                                      .toString(),
                                                  style: TextStyle(
                                                      color: const Color(0xffffffff),
                                                      fontWeight: FontWeight.w500,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                ),
                                              ),
                                            )),
                                            Expanded(
                                                child: Container(
                                              color: const Color(0xffFF9500),
                                              child: Center(
                                                child: Text(
                                                  Hive.box<ItemsList>('items_list')
                                                      .values
                                                      .toList()
                                                      .where((element) =>
                                                          element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId &&
                                                          element.itemLoadedStatus == "Partial" &&
                                                          element.isProgressStatus &&
                                                          (element.handledBy.isNotEmpty
                                                              ? (element.handledBy[0].code ==
                                                                  getIt<Variables>().generalVariables.userDataEmployeeCode)
                                                              : false))
                                                      .toList()
                                                      .length
                                                      .toString(),
                                                  style: TextStyle(
                                                      color: const Color(0xffffffff),
                                                      fontWeight: FontWeight.w500,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                ),
                                              ),
                                            )),
                                            Expanded(
                                                child: Container(
                                              decoration: const BoxDecoration(
                                                borderRadius: BorderRadius.only(topRight: Radius.circular(4), bottomRight: Radius.circular(4)),
                                                color: Color(0xffF92C38),
                                              ),
                                              child: Center(
                                                child: Text(
                                                  Hive.box<ItemsList>('items_list')
                                                      .values
                                                      .toList()
                                                      .where((element) =>
                                                          element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId &&
                                                          element.itemLoadedStatus == "Unavailable" &&
                                                          element.isProgressStatus &&
                                                          (element.handledBy.isNotEmpty
                                                              ? (element.handledBy[0].code ==
                                                                  getIt<Variables>().generalVariables.userDataEmployeeCode)
                                                              : false))
                                                      .toList()
                                                      .length
                                                      .toString(),
                                                  style: TextStyle(
                                                      color: const Color(0xffffffff),
                                                      fontWeight: FontWeight.w500,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                                                ),
                                              ),
                                            )),
                                          ],
                                        ),
                                      ),
                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 12)),
                                      InkWell(
                                        onTap: () {
                                          getIt<Variables>().generalVariables.popUpWidget = moveToLoadingBay();
                                          getIt<Functions>().showAnimatedDialog(context: context, isFromTop: true, isCloseDisabled: false);
                                        },
                                        child: Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                          width: getIt<Functions>().getWidgetWidth(width: 135),
                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 8)),
                                          decoration: BoxDecoration(color: Colors.blue, borderRadius: BorderRadius.circular(4)),
                                          child: FittedBox(
                                            fit: BoxFit.scaleDown,
                                            child: Center(
                                              child: Text(
                                                getIt<Variables>().generalVariables.currentLanguage.loadingCompleted,
                                                maxLines: 1,
                                                textAlign: TextAlign.center,
                                                style: TextStyle(
                                                  color: const Color(0xffffffff),
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                  fontWeight: FontWeight.w600,
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 25)),
                              ],
                            ),
                          ),
                        ),
                      ),
                    );
                  },
                ),
                SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(
                  builder: (BuildContext context, OutBoundDetailState state) {
                    return Container(
                      height: getIt<Functions>().getWidgetHeight(height: 50),
                      margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 14)),
                      decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                      padding: EdgeInsets.symmetric(
                          horizontal: getIt<Functions>().getWidgetWidth(width: 13), vertical: getIt<Functions>().getWidgetHeight(height: 4)),
                      child: TabBar(
                        indicatorWeight: 0,
                        controller: tabController,
                        indicator: BoxDecoration(borderRadius: BorderRadius.circular(8.0), color: const Color(0xff007AFF)),
                        labelStyle:
                            TextStyle(color: Colors.white, fontSize: getIt<Functions>().getTextSize(fontSize: 11), fontWeight: FontWeight.w600),
                        unselectedLabelStyle: TextStyle(
                            color: const Color(0xff6F6F6F), fontSize: getIt<Functions>().getTextSize(fontSize: 11), fontWeight: FontWeight.w600),
                        splashBorderRadius: BorderRadius.circular(8),
                        padding: EdgeInsets.symmetric(
                            vertical: getIt<Functions>().getWidgetHeight(height: 3), horizontal: getIt<Functions>().getWidgetWidth(width: 3)),
                        indicatorSize: TabBarIndicatorSize.tab,
                        dividerColor: Colors.transparent,
                        dividerHeight: 0.0,
                        isScrollable: true,
                        tabAlignment: TabAlignment.start,
                        tabs: [
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.yetToLoad.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Pending")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 0 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Pending")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 0 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 8),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.loaded.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Loaded")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 1 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Loaded")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 1 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 8),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.partial.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Partial")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 2 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Partial")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 2 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 8),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                          Tab(
                            child: FittedBox(
                              fit: BoxFit.scaleDown,
                              child: Padding(
                                padding: EdgeInsets.symmetric(vertical: getIt<Functions>().getWidgetHeight(height: 10)),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.center,
                                  children: [
                                    Text(getIt<Variables>().generalVariables.currentLanguage.unavailable.toUpperCase()),
                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 8)),
                                    context
                                            .read<OutBoundDetailBloc>()
                                            .searchedItemsList
                                            .where((element) => element.itemLoadedStatus == "Unavailable")
                                            .toList()
                                            .isEmpty
                                        ? const SizedBox()
                                        : Container(
                                            padding: EdgeInsets.symmetric(
                                                horizontal: getIt<Functions>().getWidgetWidth(width: 6),
                                                vertical: getIt<Functions>().getWidgetHeight(height: 3)),
                                            decoration: BoxDecoration(
                                                color: context.read<OutBoundDetailBloc>().tabIndex == 3 ? Colors.white : const Color(0xff007AFF),
                                                borderRadius: BorderRadius.circular(20)),
                                            child: Text(
                                              context
                                                  .read<OutBoundDetailBloc>()
                                                  .searchedItemsList
                                                  .where((element) => element.itemLoadedStatus == "Unavailable")
                                                  .toList()
                                                  .length
                                                  .toString(),
                                              style: TextStyle(
                                                  color: context.read<OutBoundDetailBloc>().tabIndex == 3 ? const Color(0xff282F3A) : Colors.white,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 8),
                                                  fontWeight: FontWeight.w700),
                                            ),
                                          )
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    );
                  },
                ),
                Expanded(
                  child: BlocConsumer<OutBoundDetailBloc, OutBoundDetailState>(
                    listenWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
                      return previous != current;
                    },
                    buildWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
                      return previous != current;
                    },
                    listener: (BuildContext context, OutBoundDetailState state) {},
                    builder: (BuildContext context, OutBoundDetailState state) {
                      if (state is OutBoundDetailLoaded) {
                        switch (context.read<OutBoundDetailBloc>().tabIndex) {
                          case 0:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 36),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              /* RichText(
                                                              text: TextSpan(
                                                                text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                children: [
                                                                  TextSpan(
                                                                      text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                      style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                ],
                                                              ),
                                                            ),*/
                                                              RichText(
                                                                text: TextSpan(
                                                                  text:
                                                                      "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                  style: TextStyle(
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                      color: const Color(0xff282F3A),
                                                                      fontWeight: FontWeight.w600,
                                                                      fontFamily: "overpassmono"),
                                                                  children: [
                                                                    TextSpan(
                                                                        text:
                                                                            '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff007AFF),
                                                                            fontWeight: FontWeight.w600,
                                                                            fontFamily: "overpassmono")),
                                                                  ],
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  if (context
                                                                          .read<OutBoundDetailBloc>()
                                                                          .singleTabGroupedItemsList[index][idx]
                                                                          .itemPickedStatus ==
                                                                      "Picked") {
                                                                    context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                    getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                        selectedItem:
                                                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx],
                                                                        index: index,
                                                                        idx: idx,
                                                                        fromWhere: "yet_to_sort",
                                                                        isSorting: false);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  } else {
                                                                    ScaffoldMessenger.of(context).clearSnackBars();
                                                                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                        content:
                                                                            Text(getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                  }
                                                                },
                                                                child: Column(
                                                                  children: [
                                                                    Container(
                                                                      padding: EdgeInsets.symmetric(
                                                                          horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                          vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Row(
                                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              Container(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                    color: Color(int.parse(
                                                                                        "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                  ),
                                                                                  child: Center(
                                                                                    child: Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                          .itemType,
                                                                                      style: TextStyle(
                                                                                          color: const Color(0xffffffff),
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          fontWeight: FontWeight.w700),
                                                                                    ),
                                                                                  )),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                              Expanded(
                                                                                child: Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  children: [
                                                                                    SingleChildScrollView(
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      child: Text(
                                                                                        context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .itemName,
                                                                                        maxLines: 1,
                                                                                        style: TextStyle(
                                                                                            fontWeight: FontWeight.w600,
                                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                            color: const Color(0xff282F3A),
                                                                                            overflow: TextOverflow.ellipsis),
                                                                                      ),
                                                                                    ),
                                                                                    Text(
                                                                                      "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabItemsList[idx].remarks}",
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff6F6F6F),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                            child: Row(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: ListView(
                                                                                    scrollDirection: Axis.horizontal,
                                                                                    physics: const BouncingScrollPhysics(),
                                                                                    shrinkWrap: true,
                                                                                    padding: EdgeInsets.zero,
                                                                                    children: [
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .itemCode
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .itemCode,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            "UOM",
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .packageTerms
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .packageTerms,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.end,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Functions>().formatNumber(
                                                                                          qty: context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .quantity),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          fontWeight: FontWeight.w600,
                                                                                          color: const Color(0xff007AFF)),
                                                                                    ),
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .qty
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          fontWeight: FontWeight.w500,
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                    .catchWeightStatus ==
                                                                                "No" ||
                                                                            (getIt<Functions>().getStringToList(
                                                                                    value: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightInfo,
                                                                                    quantity: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .lineLoadedQty,
                                                                                    weightUnit: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .uom))
                                                                                .isEmpty
                                                                        ? const SizedBox()
                                                                        : Row(
                                                                            children: [
                                                                              Expanded(
                                                                                child: Container(
                                                                                  decoration: const BoxDecoration(
                                                                                    color: Color(0xffCDE5FF),
                                                                                    borderRadius: BorderRadius.only(
                                                                                        bottomLeft: Radius.circular(8),
                                                                                        bottomRight: Radius.circular(8)),
                                                                                  ),
                                                                                  padding: EdgeInsets.only(
                                                                                      left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                      top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                      bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                  child: Wrap(
                                                                                    children: List.generate(
                                                                                        (getIt<Functions>().getStringToList(
                                                                                                value: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .catchWeightInfo,
                                                                                                quantity: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .lineLoadedQty,
                                                                                                weightUnit: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom))
                                                                                            .length,
                                                                                        (i) => i == 0
                                                                                            ? Padding(
                                                                                                padding: const EdgeInsets.only(right: 10.0),
                                                                                                child: SvgPicture.asset(
                                                                                                  "assets/catch_weight/measurement.svg",
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 20),
                                                                                                  width: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                                  fit: BoxFit.fill,
                                                                                                ),
                                                                                              )
                                                                                            : i == 1
                                                                                                ? Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 8)),
                                                                                                    child: Text(
                                                                                                      "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].uom))[i]}  : ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                  )
                                                                                                : Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    width: getIt<Functions>().getWidgetWidth(
                                                                                                        width: ((getIt<Functions>().getStringToList(
                                                                                                                        value: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .catchWeightInfo,
                                                                                                                        quantity: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .lineLoadedQty,
                                                                                                                        weightUnit: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .uom))[i]
                                                                                                                    .length *
                                                                                                                7) +
                                                                                                            30),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 12)),
                                                                                                    margin: EdgeInsets.only(
                                                                                                        left: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 6),
                                                                                                        bottom: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 2)),
                                                                                                    decoration: BoxDecoration(
                                                                                                      borderRadius: BorderRadius.circular(8),
                                                                                                      color: const Color(0xff7AA440),
                                                                                                    ),
                                                                                                    child: Center(
                                                                                                      child: Text(
                                                                                                        (getIt<Functions>().getStringToList(
                                                                                                            value: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .catchWeightInfo,
                                                                                                            quantity: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .lineLoadedQty,
                                                                                                            weightUnit: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .uom))[i],
                                                                                                        style: TextStyle(
                                                                                                            fontSize: getIt<Functions>()
                                                                                                                .getTextSize(fontSize: 12),
                                                                                                            fontWeight: FontWeight.w500,
                                                                                                            color: const Color(0xffffffff)),
                                                                                                      ),
                                                                                                    ),
                                                                                                  )),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              const SizedBox(),
                                                                            ],
                                                                          ),
                                                                    idx ==
                                                                            context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index]
                                                                                    .length -
                                                                                1
                                                                        ? const SizedBox()
                                                                        : const Divider(color: Color(0xffE0E7EC))
                                                                  ],
                                                                ),
                                                              );
                                                            }),
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          case 1:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty &&
                                      context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _sortedScrollController,
                                          children: [
                                            context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<OutBoundDetailBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                            margin: EdgeInsets.only(
                                                                bottom: getIt<Functions>().getWidgetHeight(
                                                                    height: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length > 1
                                                                        ? 20
                                                                        : 0)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                  decoration: const BoxDecoration(
                                                                    color: Color(0xffE3E7EA),
                                                                    borderRadius:
                                                                        BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      /*RichText(
                                                                        text: TextSpan(
                                                                          text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                          style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][0].stagingArea,
                                                                                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),*/
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600,
                                                                              fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text:
                                                                                    '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                    color: const Color(0xff007AFF),
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount:
                                                                        context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          if (context
                                                                                  .read<OutBoundDetailBloc>()
                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                  .itemPickedStatus ==
                                                                              "Picked") {
                                                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                            getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                                selectedItem: context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupingItemsList[index][idx],
                                                                                index: index,
                                                                                idx: idx,
                                                                                fromWhere: "Loaded",
                                                                                isSorting: true);
                                                                            getIt<Functions>().showAnimatedDialog(
                                                                                context: context, isFromTop: false, isCloseDisabled: false);
                                                                          } else {
                                                                            ScaffoldMessenger.of(context).clearSnackBars();
                                                                            ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                                content: Text(getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .itemNotPicked)));
                                                                          }
                                                                        },
                                                                        child: Column(
                                                                          children: [
                                                                            Container(
                                                                              padding: EdgeInsets.symmetric(
                                                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                              child: Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                children: [
                                                                                  Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                                    children: [
                                                                                      Container(
                                                                                          height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                          width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                          decoration: BoxDecoration(
                                                                                            shape: BoxShape.circle,
                                                                                            color: Color(int.parse(
                                                                                                "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].typeColor}")),
                                                                                          ),
                                                                                          child: Center(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                                  .itemType,
                                                                                              style: TextStyle(
                                                                                                  color: const Color(0xffffffff),
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  fontWeight: FontWeight.w700),
                                                                                            ),
                                                                                          )),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                      Expanded(
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                                          children: [
                                                                                            SingleChildScrollView(
                                                                                              scrollDirection: Axis.horizontal,
                                                                                              child: Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupingItemsList[index][idx]
                                                                                                    .itemName,
                                                                                                maxLines: 1,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                    color: const Color(0xff282F3A),
                                                                                                    overflow: TextOverflow.ellipsis),
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].remarks}",
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                  color: const Color(0xff6F6F6F),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: ListView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            physics: const BouncingScrollPhysics(),
                                                                                            shrinkWrap: true,
                                                                                            padding: EdgeInsets.zero,
                                                                                            children: [
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .itemCode
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .itemCode,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 11),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    "UOM",
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .uom,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 11),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .packageTerms
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .packageTerms,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 11),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 30)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .sorter
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupingItemsList[index][idx]
                                                                                                          .handledBy
                                                                                                          .isNotEmpty
                                                                                                      ? Text(
                                                                                                          context
                                                                                                              .read<OutBoundDetailBloc>()
                                                                                                              .singleTabGroupingItemsList[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name,
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 11),
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        )
                                                                                                      : const SizedBox(),
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                          crossAxisAlignment: CrossAxisAlignment.end,
                                                                                          children: [
                                                                                            Text(
                                                                                              getIt<Functions>().formatNumber(
                                                                                                  qty: context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabGroupingItemsList[index][idx]
                                                                                                      .lineLoadedQty),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 17),
                                                                                                  fontWeight: FontWeight.w600,
                                                                                                  color: const Color(0xff29B473)),
                                                                                            ),
                                                                                            Text(
                                                                                              getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .currentLanguage
                                                                                                  .loadedQty
                                                                                                  .toUpperCase(),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xff282F3A)),
                                                                                            ),
                                                                                          ],
                                                                                        )
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                            context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                            .catchWeightStatus ==
                                                                                        "No" ||
                                                                                    (getIt<Functions>().getStringToList(
                                                                                            value: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .catchWeightInfo,
                                                                                            quantity: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .lineLoadedQty,
                                                                                            weightUnit: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .uom))
                                                                                        .isEmpty
                                                                                ? const SizedBox()
                                                                                : Row(
                                                                                    children: [
                                                                                      Expanded(
                                                                                        child: Container(
                                                                                          decoration: const BoxDecoration(
                                                                                            color: Color(0xffCDE5FF),
                                                                                            borderRadius: BorderRadius.only(
                                                                                                bottomLeft: Radius.circular(8),
                                                                                                bottomRight: Radius.circular(8)),
                                                                                          ),
                                                                                          padding: EdgeInsets.only(
                                                                                              left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                              top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                              bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                          child: Wrap(
                                                                                            children: List.generate(
                                                                                                (getIt<Functions>().getStringToList(
                                                                                                        value: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .catchWeightInfo,
                                                                                                        quantity: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .lineLoadedQty,
                                                                                                        weightUnit: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .uom))
                                                                                                    .length,
                                                                                                (i) => i == 0
                                                                                                    ? Padding(
                                                                                                        padding: const EdgeInsets.only(right: 10.0),
                                                                                                        child: SvgPicture.asset(
                                                                                                          "assets/catch_weight/measurement.svg",
                                                                                                          height: getIt<Functions>()
                                                                                                              .getWidgetHeight(height: 20),
                                                                                                          width: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 20),
                                                                                                          fit: BoxFit.fill,
                                                                                                        ),
                                                                                                      )
                                                                                                    : i == 1
                                                                                                        ? Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 8)),
                                                                                                            child: Text(
                                                                                                              "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].uom))[i]}  : ",
                                                                                                              style: TextStyle(
                                                                                                                  fontSize: getIt<Functions>()
                                                                                                                      .getTextSize(fontSize: 12),
                                                                                                                  fontWeight: FontWeight.w600,
                                                                                                                  color: const Color(0xff282F3A)),
                                                                                                            ),
                                                                                                          )
                                                                                                        : Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>().getWidgetWidth(
                                                                                                                width: ((getIt<Functions>().getStringToList(
                                                                                                                                value: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .catchWeightInfo,
                                                                                                                                quantity: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .lineLoadedQty,
                                                                                                                                weightUnit: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .uom))[i]
                                                                                                                            .length *
                                                                                                                        7) +
                                                                                                                    30),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 12)),
                                                                                                            margin: EdgeInsets.only(
                                                                                                                left: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 6),
                                                                                                                bottom: getIt<Functions>()
                                                                                                                    .getWidgetHeight(height: 2)),
                                                                                                            decoration: BoxDecoration(
                                                                                                              borderRadius: BorderRadius.circular(8),
                                                                                                              color: const Color(0xff7AA440),
                                                                                                            ),
                                                                                                            child: Center(
                                                                                                              child: Text(
                                                                                                                (getIt<Functions>().getStringToList(
                                                                                                                    value: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .catchWeightInfo,
                                                                                                                    quantity: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .lineLoadedQty,
                                                                                                                    weightUnit: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .uom))[i],
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w500,
                                                                                                                    color: const Color(0xffffffff)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      const SizedBox(),
                                                                                    ],
                                                                                  ),
                                                                            idx ==
                                                                                    context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index]
                                                                                            .length -
                                                                                        1
                                                                                ? const SizedBox()
                                                                                : const Divider(color: Color(0xffE0E7EC))
                                                                          ],
                                                                        ),
                                                                      );
                                                                    }),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(
                                                            bottom: getIt<Functions>().getWidgetHeight(
                                                                height: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length > 1
                                                                    ? 20
                                                                    : 0)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 36),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  /*RichText(
                                                                    text: TextSpan(
                                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                            style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),*/
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600,
                                                                          fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text:
                                                                                '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff007AFF),
                                                                                fontWeight: FontWeight.w600,
                                                                                fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      if (context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabGroupedItemsList[index][idx]
                                                                              .itemPickedStatus ==
                                                                          "Picked") {
                                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                        getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                            selectedItem: context
                                                                                .read<OutBoundDetailBloc>()
                                                                                .singleTabGroupedItemsList[index][idx],
                                                                            index: index,
                                                                            idx: idx,
                                                                            fromWhere: "Loaded",
                                                                            isSorting: false);
                                                                        getIt<Functions>().showAnimatedDialog(
                                                                            context: context, isFromTop: false, isCloseDisabled: false);
                                                                      } else {
                                                                        ScaffoldMessenger.of(context).clearSnackBars();
                                                                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                            content: Text(
                                                                                getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                      }
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.symmetric(
                                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(
                                                                                            "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        SingleChildScrollView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .itemName,
                                                                                            maxLines: 1,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff282F3A),
                                                                                                overflow: TextOverflow.ellipsis),
                                                                                          ),
                                                                                        ),
                                                                                        Text(
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].remarks}",
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff6F6F6F),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: ListView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        physics: const BouncingScrollPhysics(),
                                                                                        shrinkWrap: true,
                                                                                        padding: EdgeInsets.zero,
                                                                                        children: [
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .itemCode
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .itemCode,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                "UOM",
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .packageTerms
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .packageTerms,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 30)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .sorter
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabGroupedItemsList[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? Text(
                                                                                                      context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                                          .handledBy[0]
                                                                                                          .name,
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 11),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                                      children: [
                                                                                        Text(
                                                                                          getIt<Functions>().formatNumber(
                                                                                              qty: context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupedItemsList[index][idx]
                                                                                                  .lineLoadedQty),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                                              fontWeight: FontWeight.w600,
                                                                                              color: const Color(0xff29B473)),
                                                                                        ),
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .loadedQty
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    )
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                (getIt<Functions>().getStringToList(
                                                                                        value: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .catchWeightInfo,
                                                                                        quantity: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .lineLoadedQty,
                                                                                        weightUnit: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .uom))
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            (getIt<Functions>().getStringToList(
                                                                                                    value: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .catchWeightInfo,
                                                                                                    quantity: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .lineLoadedQty,
                                                                                                    weightUnit: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .uom))
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].uom))[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: ((getIt<Functions>().getStringToList(
                                                                                                                            value: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .catchWeightInfo,
                                                                                                                            quantity: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .lineLoadedQty,
                                                                                                                            weightUnit: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .uom))[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            (getIt<Functions>().getStringToList(
                                                                                                                value: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .catchWeightInfo,
                                                                                                                quantity: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .lineLoadedQty,
                                                                                                                weightUnit: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .uom))[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx ==
                                                                                context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index]
                                                                                        .length -
                                                                                    1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          case 2:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty &&
                                      context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(12)),
                                                        child: DottedBorder(
                                                          color: getIt<Variables>().generalVariables.userData.userProfile.userName.toLowerCase() ==
                                                                  context.read<OutBoundDetailBloc>().groupedKeepersNameList[index].toLowerCase()
                                                              ? const Color(0xff34C759)
                                                              : Colors.grey,
                                                          strokeWidth: 1,
                                                          borderType: BorderType.RRect,
                                                          dashPattern: const [6, 3],
                                                          radius: const Radius.circular(12),
                                                          child: Container(
                                                            decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                            margin: EdgeInsets.only(
                                                                bottom: getIt<Functions>().getWidgetHeight(
                                                                    height: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList.length > 1
                                                                        ? 20
                                                                        : 0)),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Container(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 36),
                                                                  decoration: const BoxDecoration(
                                                                    color: Color(0xffE3E7EA),
                                                                    borderRadius:
                                                                        BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                                  ),
                                                                  padding:
                                                                      EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      /*  RichText(
                                                                        text: TextSpan(
                                                                          text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                          style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][0].stagingArea,
                                                                                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),*/
                                                                      RichText(
                                                                        text: TextSpan(
                                                                          text:
                                                                              "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                              color: const Color(0xff282F3A),
                                                                              fontWeight: FontWeight.w600,
                                                                              fontFamily: "overpassmono"),
                                                                          children: [
                                                                            TextSpan(
                                                                                text:
                                                                                    '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                                style: TextStyle(
                                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                    color: const Color(0xff007AFF),
                                                                                    fontWeight: FontWeight.w600,
                                                                                    fontFamily: "overpassmono")),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                ListView.builder(
                                                                    padding: EdgeInsets.zero,
                                                                    physics: const NeverScrollableScrollPhysics(),
                                                                    shrinkWrap: true,
                                                                    itemCount:
                                                                        context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index].length,
                                                                    itemBuilder: (BuildContext context, int idx) {
                                                                      return InkWell(
                                                                        onTap: () {
                                                                          if (context
                                                                                  .read<OutBoundDetailBloc>()
                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                  .itemPickedStatus ==
                                                                              "Picked") {
                                                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                            getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                                selectedItem: context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupingItemsList[index][idx],
                                                                                index: index,
                                                                                idx: idx,
                                                                                fromWhere: "partial",
                                                                                isSorting: true);
                                                                            getIt<Functions>().showAnimatedDialog(
                                                                                context: context, isFromTop: false, isCloseDisabled: false);
                                                                          } else {
                                                                            ScaffoldMessenger.of(context).clearSnackBars();
                                                                            ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                                content: Text(getIt<Variables>()
                                                                                    .generalVariables
                                                                                    .currentLanguage
                                                                                    .itemNotPicked)));
                                                                          }
                                                                        },
                                                                        child: Column(
                                                                          children: [
                                                                            Container(
                                                                              padding: EdgeInsets.symmetric(
                                                                                  horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                  vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                              child: Column(
                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                children: [
                                                                                  Row(
                                                                                    mainAxisAlignment: MainAxisAlignment.start,
                                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                                    children: [
                                                                                      Container(
                                                                                          height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                          width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                          decoration: BoxDecoration(
                                                                                            shape: BoxShape.circle,
                                                                                            color: Color(int.parse(
                                                                                                "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].typeColor}")),
                                                                                          ),
                                                                                          child: Center(
                                                                                            child: Text(
                                                                                              context
                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                  .singleTabGroupingItemsList[index][idx]
                                                                                                  .itemType,
                                                                                              style: TextStyle(
                                                                                                  color: const Color(0xffffffff),
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                  fontWeight: FontWeight.w700),
                                                                                            ),
                                                                                          )),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                      Expanded(
                                                                                        child: Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                                                          children: [
                                                                                            SingleChildScrollView(
                                                                                              scrollDirection: Axis.horizontal,
                                                                                              child: Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupingItemsList[index][idx]
                                                                                                    .itemName,
                                                                                                maxLines: 1,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                    color: const Color(0xff282F3A),
                                                                                                    overflow: TextOverflow.ellipsis),
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].remarks}",
                                                                                              maxLines: 1,
                                                                                              style: TextStyle(
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                  color: const Color(0xff6F6F6F),
                                                                                                  overflow: TextOverflow.ellipsis),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                                  ),
                                                                                  SizedBox(
                                                                                    height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                                    child: Row(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                                                      children: [
                                                                                        Expanded(
                                                                                          child: ListView(
                                                                                            scrollDirection: Axis.horizontal,
                                                                                            physics: const BouncingScrollPhysics(),
                                                                                            shrinkWrap: true,
                                                                                            padding: EdgeInsets.zero,
                                                                                            children: [
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .itemCode
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .itemCode,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 11),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    "UOM",
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .uom,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 11),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .packageTerms
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  Text(
                                                                                                    context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .packageTerms,
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w600,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 11),
                                                                                                        color: const Color(0xff282F3A)),
                                                                                                  ),
                                                                                                ],
                                                                                              ),
                                                                                              SizedBox(
                                                                                                  width:
                                                                                                      getIt<Functions>().getWidgetWidth(width: 30)),
                                                                                              Column(
                                                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                                crossAxisAlignment: CrossAxisAlignment.start,
                                                                                                mainAxisSize: MainAxisSize.min,
                                                                                                children: [
                                                                                                  Text(
                                                                                                    getIt<Variables>()
                                                                                                        .generalVariables
                                                                                                        .currentLanguage
                                                                                                        .sorter
                                                                                                        .toUpperCase(),
                                                                                                    style: TextStyle(
                                                                                                        fontWeight: FontWeight.w500,
                                                                                                        fontSize: getIt<Functions>()
                                                                                                            .getTextSize(fontSize: 10),
                                                                                                        color: const Color(0xff8A8D8E)),
                                                                                                  ),
                                                                                                  context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupingItemsList[index][idx]
                                                                                                          .handledBy
                                                                                                          .isNotEmpty
                                                                                                      ? Text(
                                                                                                          context
                                                                                                              .read<OutBoundDetailBloc>()
                                                                                                              .singleTabGroupingItemsList[index][idx]
                                                                                                              .handledBy[0]
                                                                                                              .name,
                                                                                                          style: TextStyle(
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 11),
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        )
                                                                                                      : const SizedBox(),
                                                                                                ],
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        Column(
                                                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                          crossAxisAlignment: CrossAxisAlignment.end,
                                                                                          children: [
                                                                                            RichText(
                                                                                              text: TextSpan(
                                                                                                text: getIt<Functions>().formatNumber(
                                                                                                    qty: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupingItemsList[index][idx]
                                                                                                        .lineLoadedQty),
                                                                                                style: TextStyle(
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                    color: const Color(0xff29B473),
                                                                                                    fontWeight: FontWeight.w600),
                                                                                                children: [
                                                                                                  TextSpan(
                                                                                                      text:
                                                                                                          "/${context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].quantity}",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 11),
                                                                                                          color: const Color(0xff007838),
                                                                                                          fontWeight: FontWeight.w600)),
                                                                                                ],
                                                                                              ),
                                                                                            ),
                                                                                            Text(
                                                                                              getIt<Variables>()
                                                                                                  .generalVariables
                                                                                                  .currentLanguage
                                                                                                  .loadedQty
                                                                                                  .toUpperCase(),
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xff282F3A)),
                                                                                            ),
                                                                                          ],
                                                                                        )
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                            ),
                                                                            context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                            .catchWeightStatus ==
                                                                                        "No" ||
                                                                                    (getIt<Functions>().getStringToList(
                                                                                            value: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .catchWeightInfo,
                                                                                            quantity: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .lineLoadedQty,
                                                                                            weightUnit: context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupingItemsList[index][idx]
                                                                                                .uom))
                                                                                        .isEmpty
                                                                                ? const SizedBox()
                                                                                : Row(
                                                                                    children: [
                                                                                      Expanded(
                                                                                        child: Container(
                                                                                          decoration: const BoxDecoration(
                                                                                            color: Color(0xffCDE5FF),
                                                                                            borderRadius: BorderRadius.only(
                                                                                                bottomLeft: Radius.circular(8),
                                                                                                bottomRight: Radius.circular(8)),
                                                                                          ),
                                                                                          padding: EdgeInsets.only(
                                                                                              left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                              top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                              bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                          child: Wrap(
                                                                                            children: List.generate(
                                                                                                (getIt<Functions>().getStringToList(
                                                                                                        value: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .catchWeightInfo,
                                                                                                        quantity: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .lineLoadedQty,
                                                                                                        weightUnit: context
                                                                                                            .read<OutBoundDetailBloc>()
                                                                                                            .singleTabGroupingItemsList[index][idx]
                                                                                                            .uom))
                                                                                                    .length,
                                                                                                (i) => i == 0
                                                                                                    ? Padding(
                                                                                                        padding: const EdgeInsets.only(right: 10.0),
                                                                                                        child: SvgPicture.asset(
                                                                                                          "assets/catch_weight/measurement.svg",
                                                                                                          height: getIt<Functions>()
                                                                                                              .getWidgetHeight(height: 20),
                                                                                                          width: getIt<Functions>()
                                                                                                              .getWidgetWidth(width: 20),
                                                                                                          fit: BoxFit.fill,
                                                                                                        ),
                                                                                                      )
                                                                                                    : i == 1
                                                                                                        ? Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 8)),
                                                                                                            child: Text(
                                                                                                              "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupingItemsList[index][idx].uom))[i]}  : ",
                                                                                                              style: TextStyle(
                                                                                                                  fontSize: getIt<Functions>()
                                                                                                                      .getTextSize(fontSize: 12),
                                                                                                                  fontWeight: FontWeight.w600,
                                                                                                                  color: const Color(0xff282F3A)),
                                                                                                            ),
                                                                                                          )
                                                                                                        : Container(
                                                                                                            height: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 20),
                                                                                                            width: getIt<Functions>().getWidgetWidth(
                                                                                                                width: ((getIt<Functions>().getStringToList(
                                                                                                                                value: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .catchWeightInfo,
                                                                                                                                quantity: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .lineLoadedQty,
                                                                                                                                weightUnit: context
                                                                                                                                    .read<
                                                                                                                                        OutBoundDetailBloc>()
                                                                                                                                    .singleTabGroupingItemsList[
                                                                                                                                        index][idx]
                                                                                                                                    .uom))[i]
                                                                                                                            .length *
                                                                                                                        7) +
                                                                                                                    30),
                                                                                                            padding: EdgeInsets.symmetric(
                                                                                                                horizontal: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 12)),
                                                                                                            margin: EdgeInsets.only(
                                                                                                                left: getIt<Functions>()
                                                                                                                    .getWidgetWidth(width: 6),
                                                                                                                bottom: getIt<Functions>()
                                                                                                                    .getWidgetHeight(height: 2)),
                                                                                                            decoration: BoxDecoration(
                                                                                                              borderRadius: BorderRadius.circular(8),
                                                                                                              color: const Color(0xff7AA440),
                                                                                                            ),
                                                                                                            child: Center(
                                                                                                              child: Text(
                                                                                                                (getIt<Functions>().getStringToList(
                                                                                                                    value: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .catchWeightInfo,
                                                                                                                    quantity: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .lineLoadedQty,
                                                                                                                    weightUnit: context
                                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                                        .singleTabGroupingItemsList[
                                                                                                                            index][idx]
                                                                                                                        .uom))[i],
                                                                                                                style: TextStyle(
                                                                                                                    fontSize: getIt<Functions>()
                                                                                                                        .getTextSize(fontSize: 12),
                                                                                                                    fontWeight: FontWeight.w500,
                                                                                                                    color: const Color(0xffffffff)),
                                                                                                              ),
                                                                                                            ),
                                                                                                          )),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                      const SizedBox(),
                                                                                    ],
                                                                                  ),
                                                                            idx ==
                                                                                    context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupingItemsList[index]
                                                                                            .length -
                                                                                        1
                                                                                ? const SizedBox()
                                                                                : const Divider(color: Color(0xffE0E7EC))
                                                                          ],
                                                                        ),
                                                                      );
                                                                    }),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    }),
                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                                ? const SizedBox()
                                                : ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    physics: const NeverScrollableScrollPhysics(),
                                                    itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                    shrinkWrap: true,
                                                    itemBuilder: (BuildContext context, int index) {
                                                      return Container(
                                                        decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                        margin: EdgeInsets.only(
                                                            bottom: getIt<Functions>().getWidgetHeight(
                                                                height: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length > 1
                                                                    ? 20
                                                                    : 0)),
                                                        child: Column(
                                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                          crossAxisAlignment: CrossAxisAlignment.start,
                                                          children: [
                                                            Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 36),
                                                              decoration: const BoxDecoration(
                                                                color: Color(0xffE3E7EA),
                                                                borderRadius:
                                                                    BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                              ),
                                                              padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                              child: Row(
                                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                children: [
                                                                  /*RichText(
                                                                    text: TextSpan(
                                                                      text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                      style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                            style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),*/
                                                                  RichText(
                                                                    text: TextSpan(
                                                                      text:
                                                                          "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                      style: TextStyle(
                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                          color: const Color(0xff282F3A),
                                                                          fontWeight: FontWeight.w600,
                                                                          fontFamily: "overpassmono"),
                                                                      children: [
                                                                        TextSpan(
                                                                            text:
                                                                                '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff007AFF),
                                                                                fontWeight: FontWeight.w600,
                                                                                fontFamily: "overpassmono")),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                            ListView.builder(
                                                                padding: EdgeInsets.zero,
                                                                physics: const NeverScrollableScrollPhysics(),
                                                                shrinkWrap: true,
                                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                                itemBuilder: (BuildContext context, int idx) {
                                                                  return InkWell(
                                                                    onTap: () {
                                                                      if (context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabGroupedItemsList[index][idx]
                                                                              .itemPickedStatus ==
                                                                          "Picked") {
                                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                        getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                            selectedItem: context
                                                                                .read<OutBoundDetailBloc>()
                                                                                .singleTabGroupedItemsList[index][idx],
                                                                            index: index,
                                                                            idx: idx,
                                                                            fromWhere: "partial",
                                                                            isSorting: false);
                                                                        getIt<Functions>().showAnimatedDialog(
                                                                            context: context, isFromTop: false, isCloseDisabled: false);
                                                                      } else {
                                                                        ScaffoldMessenger.of(context).clearSnackBars();
                                                                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                            content: Text(
                                                                                getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                      }
                                                                    },
                                                                    child: Column(
                                                                      children: [
                                                                        Container(
                                                                          padding: EdgeInsets.symmetric(
                                                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                          child: Column(
                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                            children: [
                                                                              Row(
                                                                                mainAxisAlignment: MainAxisAlignment.start,
                                                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                                                children: [
                                                                                  Container(
                                                                                      height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                      width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                        color: Color(int.parse(
                                                                                            "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                      ),
                                                                                      child: Center(
                                                                                        child: Text(
                                                                                          context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .itemType,
                                                                                          style: TextStyle(
                                                                                              color: const Color(0xffffffff),
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                              fontWeight: FontWeight.w700),
                                                                                        ),
                                                                                      )),
                                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                                  Expanded(
                                                                                    child: Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.center,
                                                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                                                      children: [
                                                                                        SingleChildScrollView(
                                                                                          scrollDirection: Axis.horizontal,
                                                                                          child: Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .itemName,
                                                                                            maxLines: 1,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff282F3A),
                                                                                                overflow: TextOverflow.ellipsis),
                                                                                          ),
                                                                                        ),
                                                                                        Text(
                                                                                          "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].remarks}",
                                                                                          maxLines: 1,
                                                                                          style: TextStyle(
                                                                                              fontWeight: FontWeight.w500,
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                              color: const Color(0xff6F6F6F),
                                                                                              overflow: TextOverflow.ellipsis),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  ),
                                                                                ],
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                              ),
                                                                              SizedBox(
                                                                                height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                                child: Row(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                                  children: [
                                                                                    Expanded(
                                                                                      child: ListView(
                                                                                        scrollDirection: Axis.horizontal,
                                                                                        physics: const BouncingScrollPhysics(),
                                                                                        shrinkWrap: true,
                                                                                        padding: EdgeInsets.zero,
                                                                                        children: [
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .itemCode
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .itemCode,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                "UOM",
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .packageTerms
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              Text(
                                                                                                context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .packageTerms,
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w600,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                    color: const Color(0xff282F3A)),
                                                                                              ),
                                                                                            ],
                                                                                          ),
                                                                                          SizedBox(
                                                                                              width: getIt<Functions>().getWidgetWidth(width: 30)),
                                                                                          Column(
                                                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                            crossAxisAlignment: CrossAxisAlignment.start,
                                                                                            mainAxisSize: MainAxisSize.min,
                                                                                            children: [
                                                                                              Text(
                                                                                                getIt<Variables>()
                                                                                                    .generalVariables
                                                                                                    .currentLanguage
                                                                                                    .sorter
                                                                                                    .toUpperCase(),
                                                                                                style: TextStyle(
                                                                                                    fontWeight: FontWeight.w500,
                                                                                                    fontSize:
                                                                                                        getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                    color: const Color(0xff8A8D8E)),
                                                                                              ),
                                                                                              context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabGroupedItemsList[index][idx]
                                                                                                      .handledBy
                                                                                                      .isNotEmpty
                                                                                                  ? Text(
                                                                                                      context
                                                                                                          .read<OutBoundDetailBloc>()
                                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                                          .handledBy[0]
                                                                                                          .name,
                                                                                                      style: TextStyle(
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 11),
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    )
                                                                                                  : const SizedBox(),
                                                                                            ],
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ),
                                                                                    Column(
                                                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                      crossAxisAlignment: CrossAxisAlignment.end,
                                                                                      children: [
                                                                                        RichText(
                                                                                          text: TextSpan(
                                                                                            text: getIt<Functions>().formatNumber(
                                                                                                qty: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .lineLoadedQty),
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 16),
                                                                                                color: const Color(0xff29B473),
                                                                                                fontWeight: FontWeight.w600),
                                                                                            children: [
                                                                                              TextSpan(
                                                                                                  text:
                                                                                                      "/${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity}",
                                                                                                  style: TextStyle(
                                                                                                      fontSize: getIt<Functions>()
                                                                                                          .getTextSize(fontSize: 11),
                                                                                                      color: const Color(0xff007838),
                                                                                                      fontWeight: FontWeight.w600)),
                                                                                            ],
                                                                                          ),
                                                                                        ),
                                                                                        Text(
                                                                                          getIt<Variables>()
                                                                                              .generalVariables
                                                                                              .currentLanguage
                                                                                              .loadedQty
                                                                                              .toUpperCase(),
                                                                                          style: TextStyle(
                                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                              fontWeight: FontWeight.w500,
                                                                                              color: const Color(0xff282F3A)),
                                                                                        ),
                                                                                      ],
                                                                                    )
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                        context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightStatus ==
                                                                                    "No" ||
                                                                                (getIt<Functions>().getStringToList(
                                                                                        value: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .catchWeightInfo,
                                                                                        quantity: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .lineLoadedQty,
                                                                                        weightUnit: context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .uom))
                                                                                    .isEmpty
                                                                            ? const SizedBox()
                                                                            : Row(
                                                                                children: [
                                                                                  Expanded(
                                                                                    child: Container(
                                                                                      decoration: const BoxDecoration(
                                                                                        color: Color(0xffCDE5FF),
                                                                                        borderRadius: BorderRadius.only(
                                                                                            bottomLeft: Radius.circular(8),
                                                                                            bottomRight: Radius.circular(8)),
                                                                                      ),
                                                                                      padding: EdgeInsets.only(
                                                                                          left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                          top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                          bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                      child: Wrap(
                                                                                        children: List.generate(
                                                                                            (getIt<Functions>().getStringToList(
                                                                                                    value: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .catchWeightInfo,
                                                                                                    quantity: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .lineLoadedQty,
                                                                                                    weightUnit: context
                                                                                                        .read<OutBoundDetailBloc>()
                                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                                        .uom))
                                                                                                .length,
                                                                                            (i) => i == 0
                                                                                                ? Padding(
                                                                                                    padding: const EdgeInsets.only(right: 10.0),
                                                                                                    child: SvgPicture.asset(
                                                                                                      "assets/catch_weight/measurement.svg",
                                                                                                      height: getIt<Functions>()
                                                                                                          .getWidgetHeight(height: 20),
                                                                                                      width: getIt<Functions>()
                                                                                                          .getWidgetWidth(width: 20),
                                                                                                      fit: BoxFit.fill,
                                                                                                    ),
                                                                                                  )
                                                                                                : i == 1
                                                                                                    ? Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 8)),
                                                                                                        child: Text(
                                                                                                          "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].uom))[i]}  : ",
                                                                                                          style: TextStyle(
                                                                                                              fontSize: getIt<Functions>()
                                                                                                                  .getTextSize(fontSize: 12),
                                                                                                              fontWeight: FontWeight.w600,
                                                                                                              color: const Color(0xff282F3A)),
                                                                                                        ),
                                                                                                      )
                                                                                                    : Container(
                                                                                                        height: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 20),
                                                                                                        width: getIt<Functions>().getWidgetWidth(
                                                                                                            width: ((getIt<Functions>().getStringToList(
                                                                                                                            value: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .catchWeightInfo,
                                                                                                                            quantity: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .lineLoadedQty,
                                                                                                                            weightUnit: context
                                                                                                                                .read<
                                                                                                                                    OutBoundDetailBloc>()
                                                                                                                                .singleTabGroupedItemsList[
                                                                                                                                    index][idx]
                                                                                                                                .uom))[i]
                                                                                                                        .length *
                                                                                                                    7) +
                                                                                                                30),
                                                                                                        padding: EdgeInsets.symmetric(
                                                                                                            horizontal: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 12)),
                                                                                                        margin: EdgeInsets.only(
                                                                                                            left: getIt<Functions>()
                                                                                                                .getWidgetWidth(width: 6),
                                                                                                            bottom: getIt<Functions>()
                                                                                                                .getWidgetHeight(height: 2)),
                                                                                                        decoration: BoxDecoration(
                                                                                                          borderRadius: BorderRadius.circular(8),
                                                                                                          color: const Color(0xff7AA440),
                                                                                                        ),
                                                                                                        child: Center(
                                                                                                          child: Text(
                                                                                                            (getIt<Functions>().getStringToList(
                                                                                                                value: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .catchWeightInfo,
                                                                                                                quantity: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .lineLoadedQty,
                                                                                                                weightUnit: context
                                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                                    .singleTabGroupedItemsList[index]
                                                                                                                        [idx]
                                                                                                                    .uom))[i],
                                                                                                            style: TextStyle(
                                                                                                                fontSize: getIt<Functions>()
                                                                                                                    .getTextSize(fontSize: 12),
                                                                                                                fontWeight: FontWeight.w500,
                                                                                                                color: const Color(0xffffffff)),
                                                                                                          ),
                                                                                                        ),
                                                                                                      )),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                  const SizedBox(),
                                                                                ],
                                                                              ),
                                                                        idx ==
                                                                                context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index]
                                                                                        .length -
                                                                                    1
                                                                            ? const SizedBox()
                                                                            : const Divider(color: Color(0xffE0E7EC))
                                                                      ],
                                                                    ),
                                                                  );
                                                                }),
                                                          ],
                                                        ),
                                                      );
                                                    }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          case 3:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _partialScrollController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _unavailableEmptyController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                shrinkWrap: true,
                                                itemCount: context.read<OutBoundDetailBloc>().singleTabItemsList.length,
                                                itemBuilder: (BuildContext context, int idx) {
                                                  return InkWell(
                                                    onTap: () {
                                                      if (context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemPickedStatus == "Picked") {
                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                        getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                            selectedItem: context.read<OutBoundDetailBloc>().singleTabItemsList[idx],
                                                            index: idx,
                                                            idx: idx,
                                                            fromWhere: "unavailable",
                                                            isSorting: false);
                                                        getIt<Functions>()
                                                            .showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                                      } else {
                                                        ScaffoldMessenger.of(context).clearSnackBars();
                                                        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                            content: Text(getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                      }
                                                    },
                                                    child: Container(
                                                      decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                      margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                      child: Column(
                                                        children: [
                                                          Container(
                                                            height: getIt<Functions>().getWidgetHeight(height: 36),
                                                            decoration: const BoxDecoration(
                                                              color: Color(0xffE3E7EA),
                                                              borderRadius:
                                                                  BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                            ),
                                                            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                            child: Row(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                              children: [
                                                                RichText(
                                                                  text: TextSpan(
                                                                    text:
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A),
                                                                        fontWeight: FontWeight.w600,
                                                                        fontFamily: "overpassmono"),
                                                                    children: [
                                                                      TextSpan(
                                                                          text:
                                                                              '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                              color: const Color(0xff007AFF),
                                                                              fontWeight: FontWeight.w600,
                                                                              fontFamily: "overpassmono")),
                                                                    ],
                                                                  ),
                                                                ),
                                                                RichText(
                                                                  text: TextSpan(
                                                                    text:
                                                                        "${getIt<Variables>().generalVariables.currentLanguage.reason.toUpperCase()} : ",
                                                                    style: TextStyle(
                                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                        color: const Color(0xff282F3A),
                                                                        fontWeight: FontWeight.w600,
                                                                        fontFamily: "overpassmono"),
                                                                    children: [
                                                                      TextSpan(
                                                                          text: context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabItemsList[idx]
                                                                              .itemLoadedUnavailableReason
                                                                              .toUpperCase(),
                                                                          style: TextStyle(
                                                                              fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                              color: const Color(0xff007AFF),
                                                                              fontWeight: FontWeight.w600,
                                                                              fontFamily: "overpassmono")),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                          Container(
                                                            padding: EdgeInsets.symmetric(
                                                                horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                            decoration: const BoxDecoration(
                                                              color: Color(0xffFFFFFF),
                                                              borderRadius:
                                                                  BorderRadius.only(bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                            ),
                                                            child: Column(
                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                              children: [
                                                                Row(
                                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                                  crossAxisAlignment: CrossAxisAlignment.center,
                                                                  children: [
                                                                    Container(
                                                                        height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                        width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                        decoration: BoxDecoration(
                                                                          shape: BoxShape.circle,
                                                                          color: Color(int.parse(
                                                                              "0XFF${context.read<OutBoundDetailBloc>().singleTabItemsList[idx].typeColor}")),
                                                                        ),
                                                                        child: Center(
                                                                          child: Text(
                                                                            context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemType,
                                                                            style: TextStyle(
                                                                                color: const Color(0xffffffff),
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                fontWeight: FontWeight.w700),
                                                                          ),
                                                                        )),
                                                                    SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                    Expanded(
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.center,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Text(
                                                                            context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemName,
                                                                            maxLines: 1,
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w600,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                color: const Color(0xff282F3A),
                                                                                overflow: TextOverflow.ellipsis),
                                                                          ),
                                                                          Text(
                                                                            "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabItemsList[idx].remarks}",
                                                                            maxLines: 1,
                                                                            style: TextStyle(
                                                                                fontWeight: FontWeight.w500,
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                color: const Color(0xff6F6F6F),
                                                                                overflow: TextOverflow.ellipsis),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                                SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                ),
                                                                SizedBox(
                                                                  height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                  child: Row(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.center,
                                                                    children: [
                                                                      Expanded(
                                                                        child: ListView(
                                                                          scrollDirection: Axis.horizontal,
                                                                          physics: const BouncingScrollPhysics(),
                                                                          shrinkWrap: true,
                                                                          padding: EdgeInsets.zero,
                                                                          children: [
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .itemCode
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context.read<OutBoundDetailBloc>().singleTabItemsList[idx].itemCode,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  "UOM",
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context.read<OutBoundDetailBloc>().singleTabItemsList[idx].uom,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .packageTerms
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                Text(
                                                                                  context
                                                                                      .read<OutBoundDetailBloc>()
                                                                                      .singleTabItemsList[idx]
                                                                                      .packageTerms,
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w600,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                      color: const Color(0xff282F3A)),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            SizedBox(width: getIt<Functions>().getWidgetWidth(width: 30)),
                                                                            Column(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              mainAxisSize: MainAxisSize.min,
                                                                              children: [
                                                                                Text(
                                                                                  getIt<Variables>()
                                                                                      .generalVariables
                                                                                      .currentLanguage
                                                                                      .sorter
                                                                                      .toUpperCase(),
                                                                                  style: TextStyle(
                                                                                      fontWeight: FontWeight.w500,
                                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                      color: const Color(0xff8A8D8E)),
                                                                                ),
                                                                                context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabItemsList[idx]
                                                                                        .handledBy
                                                                                        .isNotEmpty
                                                                                    ? Text(
                                                                                        context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabItemsList[idx]
                                                                                            .handledBy[0]
                                                                                            .name,
                                                                                        style: TextStyle(
                                                                                            fontWeight: FontWeight.w600,
                                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                            color: const Color(0xff282F3A)),
                                                                                      )
                                                                                    : const SizedBox(),
                                                                              ],
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                      Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.end,
                                                                        children: [
                                                                          Text(
                                                                            getIt<Functions>().formatNumber(
                                                                                qty: context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabItemsList[idx]
                                                                                    .quantity),
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                color: const Color(0xffDC4748),
                                                                                fontWeight: FontWeight.w600),
                                                                          ),
                                                                          Text(
                                                                            getIt<Variables>().generalVariables.currentLanguage.qty.toUpperCase(),
                                                                            style: TextStyle(
                                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                                fontWeight: FontWeight.w500,
                                                                                color: const Color(0xff282F3A)),
                                                                          ),
                                                                        ],
                                                                      )
                                                                    ],
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                          context.read<OutBoundDetailBloc>().singleTabItemsList[idx].catchWeightStatus == "No" ||
                                                                  (getIt<Functions>().getStringToList(
                                                                          value: context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabItemsList[idx]
                                                                              .catchWeightInfo,
                                                                          quantity: context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .singleTabItemsList[idx]
                                                                              .lineLoadedQty,
                                                                          weightUnit: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].uom))
                                                                      .isEmpty
                                                              ? const SizedBox()
                                                              : Row(
                                                                  children: [
                                                                    Expanded(
                                                                      child: Container(
                                                                        decoration: const BoxDecoration(
                                                                          color: Color(0xffCDE5FF),
                                                                          borderRadius: BorderRadius.only(
                                                                              bottomLeft: Radius.circular(8), bottomRight: Radius.circular(8)),
                                                                        ),
                                                                        padding: EdgeInsets.only(
                                                                            left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                            top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                            bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                        child: Wrap(
                                                                          children: List.generate(
                                                                              (getIt<Functions>().getStringToList(
                                                                                      value: context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabItemsList[idx]
                                                                                          .catchWeightInfo,
                                                                                      quantity: context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabItemsList[idx]
                                                                                          .lineLoadedQty,
                                                                                      weightUnit: context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabItemsList[idx]
                                                                                          .uom))
                                                                                  .length,
                                                                              (i) => i == 0
                                                                                  ? Padding(
                                                                                      padding: const EdgeInsets.only(right: 10.0),
                                                                                      child: SvgPicture.asset(
                                                                                        "assets/catch_weight/measurement.svg",
                                                                                        height: getIt<Functions>().getWidgetHeight(height: 20),
                                                                                        width: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                        fit: BoxFit.fill,
                                                                                      ),
                                                                                    )
                                                                                  : i == 1
                                                                                      ? Container(
                                                                                          height: getIt<Functions>().getWidgetHeight(height: 20),
                                                                                          padding: EdgeInsets.symmetric(
                                                                                              horizontal:
                                                                                                  getIt<Functions>().getWidgetWidth(width: 8)),
                                                                                          child: Text(
                                                                                            "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].lineLoadedQty, weightUnit: context.read<OutBoundDetailBloc>().singleTabItemsList[idx].uom))[i]}  : ",
                                                                                            style: TextStyle(
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                fontWeight: FontWeight.w600,
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        )
                                                                                      : Container(
                                                                                          height: getIt<Functions>().getWidgetHeight(height: 20),
                                                                                          width: getIt<Functions>().getWidgetWidth(
                                                                                              width: ((getIt<Functions>().getStringToList(
                                                                                                              value: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabItemsList[idx]
                                                                                                                  .catchWeightInfo,
                                                                                                              quantity: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabItemsList[idx]
                                                                                                                  .lineLoadedQty,
                                                                                                              weightUnit: context
                                                                                                                  .read<OutBoundDetailBloc>()
                                                                                                                  .singleTabItemsList[idx]
                                                                                                                  .uom))[i]
                                                                                                          .length *
                                                                                                      7) +
                                                                                                  30),
                                                                                          padding: EdgeInsets.symmetric(
                                                                                              horizontal:
                                                                                                  getIt<Functions>().getWidgetWidth(width: 12)),
                                                                                          margin: EdgeInsets.only(
                                                                                              left: getIt<Functions>().getWidgetWidth(width: 6),
                                                                                              bottom: getIt<Functions>().getWidgetHeight(height: 2)),
                                                                                          decoration: BoxDecoration(
                                                                                            borderRadius: BorderRadius.circular(8),
                                                                                            color: const Color(0xff7AA440),
                                                                                          ),
                                                                                          child: Center(
                                                                                            child: Text(
                                                                                              (getIt<Functions>().getStringToList(
                                                                                                  value: context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabItemsList[idx]
                                                                                                      .catchWeightInfo,
                                                                                                  quantity: context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabItemsList[idx]
                                                                                                      .lineLoadedQty,
                                                                                                  weightUnit: context
                                                                                                      .read<OutBoundDetailBloc>()
                                                                                                      .singleTabItemsList[idx]
                                                                                                      .uom))[i],
                                                                                              style: TextStyle(
                                                                                                  fontSize:
                                                                                                      getIt<Functions>().getTextSize(fontSize: 12),
                                                                                                  fontWeight: FontWeight.w500,
                                                                                                  color: const Color(0xffffffff)),
                                                                                            ),
                                                                                          ),
                                                                                        )),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    const SizedBox(),
                                                                  ],
                                                                ),
                                                          /*idx == context.read<OutBoundDetailBloc>().singleTabItemsList.length - 1
                                                                ? const SizedBox()
                                                                : const Divider(color: Color(0xffE0E7EC))*/
                                                        ],
                                                      ),
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                          default:
                            return Container(
                              margin: EdgeInsets.only(
                                  left: getIt<Functions>().getWidgetWidth(width: 12),
                                  right: getIt<Functions>().getWidgetWidth(width: 12),
                                  bottom: getIt<Functions>().getWidgetHeight(height: 12)),
                              decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                              child: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.isEmpty
                                  ? Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingEmptyController,
                                          children: [
                                            Container(
                                              color: const Color(0xffEEF4FF),
                                              child: Column(
                                                mainAxisAlignment: MainAxisAlignment.center,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  SvgPicture.asset(
                                                    "assets/general/no_response.svg",
                                                    height: getIt<Functions>().getWidgetHeight(height: 200),
                                                    width: getIt<Functions>().getWidgetWidth(width: 200),
                                                    colorFilter: ColorFilter.mode(const Color(0xff007AFF).withOpacity(0.3), BlendMode.srcIn),
                                                  ),
                                                  Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.outBoundListItemsEmpty,
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 18),
                                                        color: const Color(0xff282F3A),
                                                        fontWeight: FontWeight.w600),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    )
                                  : Stack(
                                      children: [
                                        SizedBox(
                                          width: getIt<Variables>().generalVariables.width,
                                          child: Column(
                                            mainAxisAlignment: MainAxisAlignment.start,
                                            crossAxisAlignment: CrossAxisAlignment.center,
                                            children: [
                                              SizedBox(height: getIt<Functions>().getWidgetHeight(height: 14)),
                                              const CupertinoActivityIndicator(),
                                            ],
                                          ),
                                        ),
                                        ListView(
                                          padding: EdgeInsets.zero,
                                          physics: const BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                                          controller: _pendingScrollController,
                                          children: [
                                            ListView.builder(
                                                padding: EdgeInsets.zero,
                                                physics: const NeverScrollableScrollPhysics(),
                                                itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList.length,
                                                shrinkWrap: true,
                                                itemBuilder: (BuildContext context, int index) {
                                                  return Container(
                                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                                    child: Column(
                                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                      crossAxisAlignment: CrossAxisAlignment.start,
                                                      children: [
                                                        Container(
                                                          height: getIt<Functions>().getWidgetHeight(height: 36),
                                                          decoration: const BoxDecoration(
                                                            color: Color(0xffE3E7EA),
                                                            borderRadius:
                                                                BorderRadius.only(topLeft: Radius.circular(7), topRight: Radius.circular(7)),
                                                          ),
                                                          padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 14)),
                                                          child: Row(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              /* RichText(
                                                              text: TextSpan(
                                                                text: "${getIt<Variables>().generalVariables.currentLanguage.stagingArea.toUpperCase()} : ",
                                                                style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontFamily: "overpassmono"),
                                                                children: [
                                                                  TextSpan(
                                                                      text: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][0].stagingArea,
                                                                      style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 11), color: const Color(0xff007AFF), fontWeight: FontWeight.w600, fontFamily: "overpassmono")),
                                                                ],
                                                              ),
                                                            ),*/
                                                              RichText(
                                                                text: TextSpan(
                                                                  text:
                                                                      "${getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase()} : ",
                                                                  style: TextStyle(
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                      color: const Color(0xff282F3A),
                                                                      fontWeight: FontWeight.w600,
                                                                      fontFamily: "overpassmono"),
                                                                  children: [
                                                                    TextSpan(
                                                                        text:
                                                                            '${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}',
                                                                        style: TextStyle(
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff007AFF),
                                                                            fontWeight: FontWeight.w600,
                                                                            fontFamily: "overpassmono")),
                                                                  ],
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        ListView.builder(
                                                            padding: EdgeInsets.zero,
                                                            physics: const NeverScrollableScrollPhysics(),
                                                            shrinkWrap: true,
                                                            itemCount: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index].length,
                                                            itemBuilder: (BuildContext context, int idx) {
                                                              return InkWell(
                                                                onTap: () {
                                                                  if (context
                                                                          .read<OutBoundDetailBloc>()
                                                                          .singleTabGroupedItemsList[index][idx]
                                                                          .itemPickedStatus ==
                                                                      "Picked") {
                                                                    context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                    getIt<Variables>().generalVariables.popUpWidget = yetToSortContent(
                                                                        selectedItem:
                                                                            context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx],
                                                                        index: index,
                                                                        idx: idx,
                                                                        fromWhere: "yet_to_sort",
                                                                        isSorting: false);
                                                                    getIt<Functions>().showAnimatedDialog(
                                                                        context: context, isFromTop: false, isCloseDisabled: false);
                                                                  } else {
                                                                    ScaffoldMessenger.of(context).clearSnackBars();
                                                                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                                                                        content:
                                                                            Text(getIt<Variables>().generalVariables.currentLanguage.itemNotPicked)));
                                                                  }
                                                                },
                                                                child: Column(
                                                                  children: [
                                                                    Container(
                                                                      padding: EdgeInsets.symmetric(
                                                                          horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                                                          vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                                                      child: Column(
                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                        children: [
                                                                          Row(
                                                                            mainAxisAlignment: MainAxisAlignment.start,
                                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                                            children: [
                                                                              Container(
                                                                                  height: getIt<Functions>().getWidgetHeight(height: 35),
                                                                                  width: getIt<Functions>().getWidgetWidth(width: 35),
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                    color: Color(int.parse(
                                                                                        "0XFF${context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].typeColor}")),
                                                                                  ),
                                                                                  child: Center(
                                                                                    child: Text(
                                                                                      context
                                                                                          .read<OutBoundDetailBloc>()
                                                                                          .singleTabGroupedItemsList[index][idx]
                                                                                          .itemType,
                                                                                      style: TextStyle(
                                                                                          color: const Color(0xffffffff),
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          fontWeight: FontWeight.w700),
                                                                                    ),
                                                                                  )),
                                                                              SizedBox(width: getIt<Functions>().getWidgetWidth(width: 10)),
                                                                              Expanded(
                                                                                child: Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.center,
                                                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                                                  children: [
                                                                                    SingleChildScrollView(
                                                                                      scrollDirection: Axis.horizontal,
                                                                                      child: Text(
                                                                                        context
                                                                                            .read<OutBoundDetailBloc>()
                                                                                            .singleTabGroupedItemsList[index][idx]
                                                                                            .itemName,
                                                                                        maxLines: 1,
                                                                                        style: TextStyle(
                                                                                            fontWeight: FontWeight.w600,
                                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                            color: const Color(0xff282F3A),
                                                                                            overflow: TextOverflow.ellipsis),
                                                                                      ),
                                                                                    ),
                                                                                    Text(
                                                                                      "${getIt<Variables>().generalVariables.currentLanguage.remarks} : ${context.read<OutBoundDetailBloc>().singleTabItemsList[idx].remarks}",
                                                                                      maxLines: 1,
                                                                                      style: TextStyle(
                                                                                          fontWeight: FontWeight.w500,
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                                          color: const Color(0xff6F6F6F),
                                                                                          overflow: TextOverflow.ellipsis),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 16),
                                                                          ),
                                                                          SizedBox(
                                                                            height: getIt<Functions>().getWidgetHeight(height: 46),
                                                                            child: Row(
                                                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                              crossAxisAlignment: CrossAxisAlignment.center,
                                                                              children: [
                                                                                Expanded(
                                                                                  child: ListView(
                                                                                    scrollDirection: Axis.horizontal,
                                                                                    physics: const BouncingScrollPhysics(),
                                                                                    shrinkWrap: true,
                                                                                    padding: EdgeInsets.zero,
                                                                                    children: [
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .itemCode
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .itemCode,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            "UOM",
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .uom,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                      SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                                      Column(
                                                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                        crossAxisAlignment: CrossAxisAlignment.start,
                                                                                        mainAxisSize: MainAxisSize.min,
                                                                                        children: [
                                                                                          Text(
                                                                                            getIt<Variables>()
                                                                                                .generalVariables
                                                                                                .currentLanguage
                                                                                                .packageTerms
                                                                                                .toUpperCase(),
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w500,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 10),
                                                                                                color: const Color(0xff8A8D8E)),
                                                                                          ),
                                                                                          Text(
                                                                                            context
                                                                                                .read<OutBoundDetailBloc>()
                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                .packageTerms,
                                                                                            style: TextStyle(
                                                                                                fontWeight: FontWeight.w600,
                                                                                                fontSize:
                                                                                                    getIt<Functions>().getTextSize(fontSize: 11),
                                                                                                color: const Color(0xff282F3A)),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                ),
                                                                                Column(
                                                                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                                  crossAxisAlignment: CrossAxisAlignment.end,
                                                                                  children: [
                                                                                    Text(
                                                                                      getIt<Functions>().formatNumber(
                                                                                          qty: context
                                                                                              .read<OutBoundDetailBloc>()
                                                                                              .singleTabGroupedItemsList[index][idx]
                                                                                              .quantity),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                                          fontWeight: FontWeight.w600,
                                                                                          color: const Color(0xff007AFF)),
                                                                                    ),
                                                                                    Text(
                                                                                      getIt<Variables>()
                                                                                          .generalVariables
                                                                                          .currentLanguage
                                                                                          .qty
                                                                                          .toUpperCase(),
                                                                                      style: TextStyle(
                                                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                                          fontWeight: FontWeight.w500,
                                                                                          color: const Color(0xff282F3A)),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    ),
                                                                    context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                    .catchWeightStatus ==
                                                                                "No" ||
                                                                            (getIt<Functions>().getStringToList(
                                                                                    value: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .catchWeightInfo,
                                                                                    quantity: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .lineLoadedQty,
                                                                                    weightUnit: context
                                                                                        .read<OutBoundDetailBloc>()
                                                                                        .singleTabGroupedItemsList[index][idx]
                                                                                        .uom))
                                                                                .isEmpty
                                                                        ? const SizedBox()
                                                                        : Row(
                                                                            children: [
                                                                              Expanded(
                                                                                child: Container(
                                                                                  decoration: const BoxDecoration(
                                                                                    color: Color(0xffCDE5FF),
                                                                                    borderRadius: BorderRadius.only(
                                                                                        bottomLeft: Radius.circular(8),
                                                                                        bottomRight: Radius.circular(8)),
                                                                                  ),
                                                                                  padding: EdgeInsets.only(
                                                                                      left: getIt<Functions>().getWidgetWidth(width: 12),
                                                                                      top: getIt<Functions>().getWidgetHeight(height: 8),
                                                                                      bottom: getIt<Functions>().getWidgetHeight(height: 8)),
                                                                                  child: Wrap(
                                                                                    children: List.generate(
                                                                                        (getIt<Functions>().getStringToList(
                                                                                                value: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .catchWeightInfo,
                                                                                                quantity: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .lineLoadedQty,
                                                                                                weightUnit: context
                                                                                                    .read<OutBoundDetailBloc>()
                                                                                                    .singleTabGroupedItemsList[index][idx]
                                                                                                    .uom))
                                                                                            .length,
                                                                                        (i) => i == 0
                                                                                            ? Padding(
                                                                                                padding: const EdgeInsets.only(right: 10.0),
                                                                                                child: SvgPicture.asset(
                                                                                                  "assets/catch_weight/measurement.svg",
                                                                                                  height:
                                                                                                      getIt<Functions>().getWidgetHeight(height: 20),
                                                                                                  width: getIt<Functions>().getWidgetWidth(width: 20),
                                                                                                  fit: BoxFit.fill,
                                                                                                ),
                                                                                              )
                                                                                            : i == 1
                                                                                                ? Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 8)),
                                                                                                    child: Text(
                                                                                                      "${(getIt<Functions>().getStringToList(value: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].catchWeightInfo, quantity: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].quantity, weightUnit: context.read<OutBoundDetailBloc>().singleTabGroupedItemsList[index][idx].uom))[i]}  : ",
                                                                                                      style: TextStyle(
                                                                                                          fontSize: getIt<Functions>()
                                                                                                              .getTextSize(fontSize: 12),
                                                                                                          fontWeight: FontWeight.w600,
                                                                                                          color: const Color(0xff282F3A)),
                                                                                                    ),
                                                                                                  )
                                                                                                : Container(
                                                                                                    height: getIt<Functions>()
                                                                                                        .getWidgetHeight(height: 20),
                                                                                                    width: getIt<Functions>().getWidgetWidth(
                                                                                                        width: ((getIt<Functions>().getStringToList(
                                                                                                                        value: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .catchWeightInfo,
                                                                                                                        quantity: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .lineLoadedQty,
                                                                                                                        weightUnit: context
                                                                                                                            .read<
                                                                                                                                OutBoundDetailBloc>()
                                                                                                                            .singleTabGroupedItemsList[
                                                                                                                                index][idx]
                                                                                                                            .uom))[i]
                                                                                                                    .length *
                                                                                                                7) +
                                                                                                            30),
                                                                                                    padding: EdgeInsets.symmetric(
                                                                                                        horizontal: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 12)),
                                                                                                    margin: EdgeInsets.only(
                                                                                                        left: getIt<Functions>()
                                                                                                            .getWidgetWidth(width: 6),
                                                                                                        bottom: getIt<Functions>()
                                                                                                            .getWidgetHeight(height: 2)),
                                                                                                    decoration: BoxDecoration(
                                                                                                      borderRadius: BorderRadius.circular(8),
                                                                                                      color: const Color(0xff7AA440),
                                                                                                    ),
                                                                                                    child: Center(
                                                                                                      child: Text(
                                                                                                        (getIt<Functions>().getStringToList(
                                                                                                            value: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .catchWeightInfo,
                                                                                                            quantity: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .lineLoadedQty,
                                                                                                            weightUnit: context
                                                                                                                .read<OutBoundDetailBloc>()
                                                                                                                .singleTabGroupedItemsList[index][idx]
                                                                                                                .uom))[i],
                                                                                                        style: TextStyle(
                                                                                                            fontSize: getIt<Functions>()
                                                                                                                .getTextSize(fontSize: 12),
                                                                                                            fontWeight: FontWeight.w500,
                                                                                                            color: const Color(0xffffffff)),
                                                                                                      ),
                                                                                                    ),
                                                                                                  )),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              const SizedBox(),
                                                                            ],
                                                                          ),
                                                                    idx ==
                                                                            context
                                                                                    .read<OutBoundDetailBloc>()
                                                                                    .singleTabGroupedItemsList[index]
                                                                                    .length -
                                                                                1
                                                                        ? const SizedBox()
                                                                        : const Divider(color: Color(0xffE0E7EC))
                                                                  ],
                                                                ),
                                                              );
                                                            }),
                                                      ],
                                                    ),
                                                  );
                                                }),
                                          ],
                                        ),
                                      ],
                                    ),
                            );
                        }
                      } else if (state is OutBoundDetailLoading) {
                        return Container(
                          margin: EdgeInsets.only(
                              left: getIt<Functions>().getWidgetWidth(width: 12),
                              right: getIt<Functions>().getWidgetWidth(width: 12),
                              bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(8)),
                          child: Skeletonizer(
                            enabled: true,
                            child: ListView.builder(
                                padding: EdgeInsets.zero,
                                physics: const ScrollPhysics(),
                                itemCount: 1,
                                shrinkWrap: true,
                                itemBuilder: (BuildContext context, int index) {
                                  return Container(
                                    decoration: BoxDecoration(color: Colors.white, borderRadius: BorderRadius.circular(8)),
                                    margin: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 20)),
                                    child: Column(
                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: [
                                        Container(
                                          height: getIt<Functions>().getWidgetHeight(height: 40),
                                          decoration: const BoxDecoration(
                                            color: Color(0xffE3E7EA),
                                            borderRadius: BorderRadius.only(topLeft: Radius.circular(8), topRight: Radius.circular(8)),
                                          ),
                                          padding: EdgeInsets.symmetric(
                                              horizontal: getIt<Functions>().getWidgetWidth(width: 12),
                                              vertical: getIt<Functions>().getWidgetHeight(height: 12)),
                                          child: IntrinsicHeight(
                                            child: Row(
                                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                              crossAxisAlignment: CrossAxisAlignment.center,
                                              children: [
                                                Text("${getIt<Variables>().generalVariables.currentLanguage.floorNo.toUpperCase()} : F ",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A))),
                                                Text("${getIt<Variables>().generalVariables.currentLanguage.roomNo.toUpperCase()} : R",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A))),
                                                Text("${getIt<Variables>().generalVariables.currentLanguage.zoneNo.toUpperCase()} : Z",
                                                    style: TextStyle(
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                        fontWeight: FontWeight.w600,
                                                        color: const Color(0xff282F3A))),
                                              ],
                                            ),
                                          ),
                                        ),
                                        ListView.builder(
                                            padding: EdgeInsets.zero,
                                            physics: const NeverScrollableScrollPhysics(),
                                            shrinkWrap: true,
                                            itemCount: 1,
                                            itemBuilder: (BuildContext context, int idx) {
                                              return Container(
                                                padding: EdgeInsets.only(
                                                    left: getIt<Functions>().getWidgetWidth(width: 12),
                                                    right: getIt<Functions>().getWidgetWidth(width: 12),
                                                    top: getIt<Functions>().getWidgetHeight(height: 12)),
                                                child: Column(
                                                  mainAxisAlignment: MainAxisAlignment.start,
                                                  crossAxisAlignment: CrossAxisAlignment.start,
                                                  children: [
                                                    Row(
                                                      mainAxisAlignment: MainAxisAlignment.start,
                                                      crossAxisAlignment: CrossAxisAlignment.center,
                                                      children: [
                                                        Skeleton.shade(
                                                          child: Container(
                                                              height: getIt<Functions>().getWidgetHeight(height: 35),
                                                              width: getIt<Functions>().getWidgetWidth(width: 35),
                                                              decoration: const BoxDecoration(
                                                                shape: BoxShape.circle,
                                                                color: Colors.purpleAccent,
                                                              ),
                                                              child: Center(
                                                                child: Text(
                                                                  "D",
                                                                  style: TextStyle(
                                                                      color: const Color(0xffffffff),
                                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                                      fontWeight: FontWeight.w700),
                                                                ),
                                                              )),
                                                        ),
                                                        SizedBox(
                                                          width: getIt<Functions>().getWidgetWidth(width: 10),
                                                        ),
                                                        Expanded(
                                                          child: Text(
                                                            "CORN FLOUR - 1KG",
                                                            maxLines: 1,
                                                            style: TextStyle(
                                                                fontWeight: FontWeight.w600,
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 16),
                                                                color: const Color(0xff282F3A),
                                                                overflow: TextOverflow.ellipsis),
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                    SizedBox(
                                                      height: getIt<Functions>().getWidgetHeight(height: 14),
                                                    ),
                                                    SizedBox(
                                                      height: getIt<Functions>().getWidgetHeight(height: 48),
                                                      child: Row(
                                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                        crossAxisAlignment: CrossAxisAlignment.center,
                                                        children: [
                                                          Expanded(
                                                            child: SizedBox(
                                                              height: getIt<Functions>().getWidgetHeight(height: 36),
                                                              child: ListView(
                                                                scrollDirection: Axis.horizontal,
                                                                physics: const BouncingScrollPhysics(),
                                                                shrinkWrap: true,
                                                                padding: EdgeInsets.zero,
                                                                children: [
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    mainAxisSize: MainAxisSize.min,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>().generalVariables.currentLanguage.itemCode.toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "F008",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "UOM",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                  SizedBox(width: getIt<Functions>().getWidgetWidth(width: 15)),
                                                                  Column(
                                                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                                    children: [
                                                                      Text(
                                                                        getIt<Variables>()
                                                                            .generalVariables
                                                                            .currentLanguage
                                                                            .packageTerms
                                                                            .toUpperCase(),
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w500,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                            color: const Color(0xff8A8D8E)),
                                                                      ),
                                                                      Text(
                                                                        "Package Terms",
                                                                        style: TextStyle(
                                                                            fontWeight: FontWeight.w600,
                                                                            fontSize: getIt<Functions>().getTextSize(fontSize: 11),
                                                                            color: const Color(0xff282F3A)),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ],
                                                              ),
                                                            ),
                                                          ),
                                                          SizedBox(
                                                            width: getIt<Functions>().getWidgetWidth(width: 10),
                                                          ),
                                                          Column(
                                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                            crossAxisAlignment: CrossAxisAlignment.center,
                                                            children: [
                                                              Text(
                                                                "24",
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 17),
                                                                    fontWeight: FontWeight.w600,
                                                                    color: const Color(0xff007AFF)),
                                                              ),
                                                              Text(
                                                                getIt<Variables>().generalVariables.currentLanguage.qtyToSort.toUpperCase(),
                                                                style: TextStyle(
                                                                    fontSize: getIt<Functions>().getTextSize(fontSize: 10),
                                                                    fontWeight: FontWeight.w500,
                                                                    color: const Color(0xff282F3A)),
                                                              ),
                                                            ],
                                                          ),
                                                        ],
                                                      ),
                                                    ),
                                                    SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                                  ],
                                                ),
                                              );
                                            })
                                      ],
                                    ),
                                  );
                                }),
                          ),
                        );
                      } else {
                        return const SizedBox();
                      }
                    },
                  ),
                ),
              ],
            ),
          );
        }
      }),
    );
  }

  Widget textBars({required TextEditingController controller}) {
    return BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(
      builder: (BuildContext context, OutBoundDetailState tripList) {
        return Padding(
          padding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
          child: SizedBox(
            height: getIt<Functions>().getWidgetHeight(height: 36),
            width: getIt<Functions>().getWidgetWidth(width: 200),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(
                  height: getIt<Functions>().getWidgetHeight(height: 36),
                  child: TextFormField(
                    onChanged: (value) {
                      if (timer?.isActive ?? false) timer?.cancel();
                      timer = Timer(const Duration(milliseconds: 500), () {
                        if (value.isNotEmpty) {
                          context.read<OutBoundDetailBloc>().searchText = value;
                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                        } else {
                          FocusManager.instance.primaryFocus!.unfocus();
                          context.read<OutBoundDetailBloc>().searchText = "";
                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                        }
                      });
                    },
                    controller: controller,
                    cursorColor: Colors.white,
                    keyboardType: TextInputType.text,
                    style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 15), fontWeight: FontWeight.w500, color: Colors.white),
                    decoration: InputDecoration(
                        fillColor: const Color(0xff767680).withOpacity(0.12),
                        filled: true,
                        contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8), borderSide: const BorderSide(color: Color(0xffffffff), width: 0.68)),
                        enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8), borderSide: const BorderSide(color: Color(0xffffffff), width: 0.68)),
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8), borderSide: const BorderSide(color: Color(0xffffffff), width: 0.68)),
                        errorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8), borderSide: const BorderSide(color: Color(0xffffffff), width: 0.68)),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8), borderSide: const BorderSide(color: Color(0xffffffff), width: 0.68)),
                        focusedErrorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8), borderSide: const BorderSide(color: Color(0xffffffff), width: 0.68)),
                        prefixIcon: const Icon(Icons.search, color: Color(0xffffffff)),
                        suffixIcon: controller.text.isNotEmpty
                            ? IconButton(
                                onPressed: () {
                                  controller.clear();
                                  FocusManager.instance.primaryFocus!.unfocus();
                                  context.read<OutBoundDetailBloc>().searchText = "";
                                  context.read<OutBoundDetailBloc>().add(const OutBoundDetailFilterEvent());
                                },
                                icon: const Icon(Icons.clear, color: Colors.white, size: 15))
                            : const SizedBox(),
                        hintText: getIt<Variables>().generalVariables.currentLanguage.search,
                        hintStyle: TextStyle(
                            color: const Color(0xffffffff), fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 15))),
                  ),
                )
              ],
            ),
          ),
        );
      },
    );
  }

  Widget yetToSortContent({
    required String fromWhere,
    required bool isSorting,
    required ItemsList selectedItem,
    required int index,
    required int idx,
  }) {
    bool isAllSelected = fromWhere == "Loaded";
    context.read<OutBoundDetailBloc>().selectedTripListItemId = selectedItem.lineItemId;
    context.read<OutBoundDetailBloc>().selectedItemId = selectedItem.itemId;
    context.read<OutBoundDetailBloc>().sortedQuantityData = {};
    context.read<OutBoundDetailBloc>().sortedCatchWeightData = [];
    context.read<OutBoundDetailBloc>().updateLoader = false;
    context.read<OutBoundDetailBloc>().formatError = false;
    context.read<OutBoundDetailBloc>().selectedForSortedItem = selectedItem;
    context.read<OutBoundDetailBloc>().nonCheckError = false;
    List<CatchWeightItem> catchWeightData =
        selectedItem.catchWeightStatus != "No" ? getIt<Functions>().getStringToCatchWeight(value: selectedItem.catchWeightInfo) : [];
    List<TextEditingController> controllersList = selectedItem.catchWeightStatus == "No"
        ? List<TextEditingController>.generate(selectedItem.itemBatchesList.length, (i) {
            return TextEditingController();
          })
        : [];
    List<FocusNode> focusNodesList = selectedItem.catchWeightStatus == "No"
        ? List<FocusNode>.generate(selectedItem.itemBatchesList.length, (i) {
            return FocusNode();
          })
        : [];
    List<bool> checkValues = selectedItem.catchWeightStatus == "No"
        ? List<bool>.generate(selectedItem.itemBatchesList.length, (i) {
            return fromWhere == "Loaded"
                ? true
                : fromWhere == "partial"
                    ? num.parse(selectedItem.itemBatchesList[i].quantity) ==
                        num.parse(selectedItem.itemBatchesList[i].batchLoadedQty == "" || selectedItem.itemBatchesList[i].batchLoadedQty == "."
                            ? "0"
                            : selectedItem.itemBatchesList[i].batchLoadedQty)
                    : false;
          })
        : [];
    isAllSelected = checkValues.contains(false) ? false : true;
    if (selectedItem.catchWeightStatus != "No") {
      selectedItem.itemBatchesList[0].batchLoadedQty = "0";
      selectedItem.lineLoadedQty = "0";
      List<CatchWeightItem> catchWeightInfoSortedTemp = [];
      if (selectedItem.itemLoadedCatchWeightInfo == "") {
        catchWeightInfoSortedTemp.addAll(getIt<Functions>().getStringToCatchWeight(value: selectedItem.catchWeightInfo));
      } else {
        catchWeightInfoSortedTemp.addAll(getIt<Functions>().getStringToCatchWeight(value: selectedItem.itemLoadedCatchWeightInfo));
      }
      for (int i = 0; i < catchWeightData.length; i++) {
        if (fromWhere == "Loaded") {
          catchWeightData[i].isSelected = true;
          catchWeightData[i].isSelectedAlready = true;
          selectedItem.itemBatchesList[0].batchLoadedQty =
              (num.parse(selectedItem.itemBatchesList[0].batchLoadedQty) + num.parse(catchWeightData[i].data)).toString();
          selectedItem.lineLoadedQty = selectedItem.itemBatchesList[0].batchLoadedQty;
        } else if (fromWhere == "partial") {
          catchWeightData[i].isSelected = false;
          catchWeightData[i].isSelectedAlready = false;
          for (int j = 0; j < catchWeightInfoSortedTemp.length; j++) {
            if (catchWeightInfoSortedTemp[j].data == catchWeightData[i].data) {
              selectedItem.itemBatchesList[0].batchLoadedQty =
                  (num.parse(selectedItem.itemBatchesList[0].batchLoadedQty) + num.parse(catchWeightData[i].data)).toString();
              catchWeightData[i].isSelected = true;
              catchWeightData[i].isSelectedAlready = true;
              catchWeightInfoSortedTemp.removeAt(j);
              break;
            }
          }
          selectedItem.lineLoadedQty = selectedItem.itemBatchesList[0].batchLoadedQty;
        } else {
          catchWeightData[i].isSelected = false;
          catchWeightData[i].isSelectedAlready = false;
          selectedItem.itemBatchesList[0].batchLoadedQty = "0";
          selectedItem.lineLoadedQty = selectedItem.itemBatchesList[0].batchLoadedQty;
        }
      }
      catchWeightData.sort((a, b) {
        if (a.isSelected == b.isSelected) return 0;
        return a.isSelected == true ? -1 : 1;
      });
    }
    return SizedBox(
      width: getIt<Functions>().getWidgetWidth(width: 600),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        crossAxisAlignment: CrossAxisAlignment.start,
        mainAxisSize: MainAxisSize.min,
        children: [
          Padding(
            padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                Container(
                    height: getIt<Functions>().getWidgetHeight(height: 35),
                    width: getIt<Functions>().getWidgetWidth(width: 35),
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      color: Color(int.parse("0XFF${selectedItem.typeColor}")),
                    ),
                    child: Center(
                      child: Text(
                        selectedItem.itemType,
                        style: TextStyle(
                            color: const Color(0xffffffff),
                            fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 24 : 12),
                            fontWeight: FontWeight.w700),
                      ),
                    )),
                SizedBox(
                  width: getIt<Functions>().getWidgetWidth(width: 10),
                ),
                Expanded(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: Text(
                          selectedItem.itemName,
                          maxLines: 1,
                          style: TextStyle(
                              fontWeight: FontWeight.w600,
                              fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 18 : 14),
                              color: const Color(0xff282F3A),
                              overflow: TextOverflow.ellipsis),
                        ),
                      ),
                      SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: IntrinsicHeight(
                          child: Row(
                            children: [
                              Text(
                                context.read<OutBoundDetailBloc>().tabIndex == 2
                                    ? "${getIt<Variables>().generalVariables.currentLanguage.totalItems} : ${getIt<Functions>().formatNumber(qty: selectedItem.quantity)}  "
                                    : "${getIt<Variables>().generalVariables.currentLanguage.totalQty} : ${getIt<Functions>().formatNumber(qty: selectedItem.quantity)} ",
                                style: TextStyle(
                                    fontWeight: FontWeight.w500,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                    color: const Color(0xff007AFF)),
                              ),
                              SizedBox(
                                height: getIt<Functions>().getWidgetHeight(height: 15),
                                child: const VerticalDivider(
                                  width: 0,
                                  thickness: 1,
                                  color: Color(0xff8A8D8E),
                                ),
                              ),
                              Text(
                                "  UOM : ${selectedItem.uom}  ",
                                style: TextStyle(
                                    fontWeight: FontWeight.w500,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                    color: const Color(0xff007AFF)),
                              ),
                              context.read<OutBoundDetailBloc>().tabIndex == 2
                                  ? SizedBox(
                                      height: getIt<Functions>().getWidgetHeight(height: 15),
                                      child: const VerticalDivider(
                                        width: 0,
                                        thickness: 1,
                                        color: Color(0xff8A8D8E),
                                      ),
                                    )
                                  : const SizedBox(),
                              context.read<OutBoundDetailBloc>().tabIndex == 2
                                  ? Text(
                                      "  ${getIt<Variables>().generalVariables.currentLanguage.qtyNeeded} : ${getIt<Functions>().formatNumber(qty: (num.parse(selectedItem.quantity) - num.parse(selectedItem.lineLoadedQty)).toString())}",
                                      style: TextStyle(
                                          fontWeight: FontWeight.w500,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                          color: const Color(0xffF92C38)))
                                  : const SizedBox(),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)),
          const Divider(height: 0, thickness: 1, color: Color(0xffE0E7EC)),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)),
          BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(
            builder: (BuildContext context, OutBoundDetailState state) {
              return Scrollbar(
                child: Container(
                  height: getIt<Functions>()
                      .getWidgetHeight(height: (selectedItem.itemBatchesList.length >= 4 ? 160 : selectedItem.itemBatchesList.length * 40) + 50),
                  padding: EdgeInsets.zero,
                  child: DataTable2(
                      columnSpacing: getIt<Functions>().getWidgetWidth(width: 0),
                      horizontalMargin: getIt<Functions>().getWidgetWidth(width: 15),
                      headingRowColor: const WidgetStatePropertyAll<Color>(Color(0xffE0E7EC)),
                      headingRowDecoration: BoxDecoration(borderRadius: BorderRadius.circular(4)),
                      headingRowHeight: getIt<Functions>().getWidgetHeight(height: 40),
                      dividerThickness: 0,
                      dataRowHeight: getIt<Functions>().getWidgetHeight(height: 40),
                      isHorizontalScrollBarVisible: false,
                      columns: selectedItem.catchWeightStatus == "No"
                          ? fromWhere == "partial"
                              ? [
                                  DataColumn2(
                                    label: Checkbox(
                                      value: isAllSelected,
                                      onChanged: (value) {
                                        if (fromWhere != "Loaded") {
                                          isAllSelected = !isAllSelected;
                                          checkValues.clear();
                                          checkValues = List<bool>.generate(selectedItem.itemBatchesList.length, (i) {
                                            return value!;
                                          });
                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                        }
                                      },
                                      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5)),
                                      activeColor: const Color(0xff007838),
                                      checkColor: const Color(0xffffffff),
                                    ),
                                    size: ColumnSize.S,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      "${getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B")} #",
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                    ),
                                    size: ColumnSize.L,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                    ),
                                    size: ColumnSize.L,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Padding(
                                      padding: const EdgeInsets.only(right: 3),
                                      child: Text(
                                        maxLines: 3,
                                        softWrap: true,
                                        getIt<Variables>().generalVariables.currentLanguage.loadedQty,
                                        style: TextStyle(
                                            color: const Color(0xff282F3A),
                                            fontWeight: FontWeight.w700,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                      ),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      context.read<OutBoundDetailBloc>().tabIndex == 1
                                          ? getIt<Variables>().generalVariables.currentLanguage.loadedQty
                                          : getIt<Variables>().generalVariables.currentLanguage.qty,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                      textAlign: TextAlign.center,
                                    ),
                                    size: ColumnSize.S,
                                  ),
                                ]
                              : [
                                  DataColumn2(
                                    label: Checkbox(
                                      value: isAllSelected,
                                      onChanged: (value) {
                                        if (fromWhere != "Loaded") {
                                          isAllSelected = !isAllSelected;
                                          checkValues.clear();
                                          checkValues = List<bool>.generate(selectedItem.itemBatchesList.length, (i) {
                                            return value!;
                                          });
                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                        }
                                      },
                                      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5)),
                                      activeColor: const Color(0xff007838),
                                      checkColor: const Color(0xffffffff),
                                    ),
                                    size: ColumnSize.S,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      "${getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B")} #",
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.L,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.isDeviceTablet
                                          ? getIt<Variables>().generalVariables.currentLanguage.requiredQty
                                          : getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Center(
                                      child: Text(
                                        maxLines: 2,
                                        softWrap: true,
                                        context.read<OutBoundDetailBloc>().tabIndex == 1
                                            ? getIt<Variables>().generalVariables.currentLanguage.loadedQty
                                            : getIt<Variables>().generalVariables.currentLanguage.qty,
                                        style: TextStyle(
                                            color: const Color(0xff282F3A),
                                            fontWeight: FontWeight.w700,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                      ),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                ]
                          : fromWhere == "partial"
                              ? [
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      "${getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B")} #",
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.L,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.loadedQty,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                ]
                              : [
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      "${getIt<Variables>().generalVariables.currentLanguage.batch.toLowerCase().replaceFirst('b', "B")} #",
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.expiryDate.toLowerCase().replaceFirst('e', "E"),
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.L,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.currentLanguage.stockType,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.L,
                                  ),
                                  DataColumn2(
                                    label: Text(
                                      maxLines: 2,
                                      softWrap: true,
                                      getIt<Variables>().generalVariables.isDeviceTablet
                                          ? getIt<Variables>().generalVariables.currentLanguage.requiredQty
                                          : getIt<Variables>().generalVariables.currentLanguage.reqQty,
                                      style: TextStyle(
                                          color: const Color(0xff282F3A),
                                          fontWeight: FontWeight.w700,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                    ),
                                    size: ColumnSize.M,
                                  ),
                                ],
                      rows: List<DataRow>.generate(selectedItem.itemBatchesList.length, (i) {
                        return DataRow(
                            cells: selectedItem.catchWeightStatus == "No"
                                ? fromWhere == "partial"
                                    ? [
                                        DataCell(
                                          Checkbox(
                                            value: checkValues[i],
                                            onChanged: (value) {
                                              if (fromWhere != "Loaded") {
                                                checkValues[i] = !checkValues[i];
                                                isAllSelected = checkValues.contains(false) ? false : true;
                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                              }
                                            },
                                            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5)),
                                            activeColor: const Color(0xff007838),
                                            checkColor: const Color(0xffffffff),
                                          ),
                                        ),
                                        DataCell(Text(selectedItem.itemBatchesList[i].batchNum,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Padding(
                                          padding: const EdgeInsets.only(right: 5),
                                          child: FittedBox(
                                            child: Text(selectedItem.itemBatchesList[i].expiryDate.toString().substring(0, 10),
                                                style: TextStyle(
                                                    color: const Color(0xff282F3A),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))),
                                          ),
                                        )),
                                        DataCell(Text(selectedItem.itemBatchesList[i].stockType,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Center(
                                            child: Text(getIt<Functions>().formatNumber(qty: selectedItem.itemBatchesList[i].quantity),
                                                style: TextStyle(
                                                    color: const Color(0xffC38C19),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                        DataCell(Center(
                                            child: Text(
                                                getIt<Functions>().formatNumber(
                                                    qty: selectedItem.itemBatchesList[i].batchLoadedQty == ""
                                                        ? "0"
                                                        : selectedItem.itemBatchesList[i].batchLoadedQty),
                                                style: TextStyle(
                                                    color: const Color(0xffC38C19),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                        DataCell(Column(
                                          children: [
                                            SizedBox(
                                              height: getIt<Functions>().getWidgetHeight(height: 30),
                                              child: TextFormField(
                                                controller: controllersList[i],
                                                readOnly:
                                                    selectedItem.itemBatchesList[i].quantity == selectedItem.itemBatchesList[i].batchLoadedQty ||
                                                        checkValues[i],
                                                enabled: selectedItem.itemBatchesList[i].quantity != selectedItem.itemBatchesList[i].batchLoadedQty &&
                                                    getIt<Variables>().generalVariables.userData.userProfile.id == selectedItem.handledBy[0].id,
                                                focusNode: focusNodesList[i],
                                                cursorColor: Colors.black,
                                                textAlign: TextAlign.center,
                                                autofocus: true,
                                                inputFormatters: [
                                                  NumberInputFormatter(onError: (value) {
                                                    context.read<OutBoundDetailBloc>().formatError = value;
                                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                  })
                                                ],
                                                style: TextStyle(
                                                    color: const Color(0xff282F3A),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10)),
                                                keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                decoration: InputDecoration(
                                                  hintText: "00",
                                                  hintStyle: TextStyle(
                                                      fontWeight: FontWeight.w400,
                                                      fontSize: getIt<Functions>()
                                                          .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                                      color: Colors.grey),
                                                  border: const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  enabledBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  disabledBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                  errorBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                  focusedBorder: const UnderlineInputBorder(borderSide: BorderSide(color: Colors.blue, width: 0.73)),
                                                  focusedErrorBorder:
                                                      const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                  errorStyle: const TextStyle(height: 0.001),
                                                ),
                                                autovalidateMode: AutovalidateMode.onUserInteraction,
                                                validator: (String? value) {
                                                  if (value != null && value != "") {
                                                    if (value == ".") {
                                                    } else if ((num.parse(value) +
                                                            num.parse(selectedItem.itemBatchesList[i].batchLoadedQty == "" ||
                                                                    selectedItem.itemBatchesList[i].batchLoadedQty == "."
                                                                ? "0"
                                                                : selectedItem.itemBatchesList[i].batchLoadedQty)) >
                                                        num.parse(selectedItem.itemBatchesList[i].quantity)) {
                                                      context.read<OutBoundDetailBloc>().formatError = false;
                                                      context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                      context.read<OutBoundDetailBloc>().moreQuantityError = true;
                                                      context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                      return "";
                                                    } else {
                                                      context.read<OutBoundDetailBloc>().formatError = false;
                                                      context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                      context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                      context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                    }
                                                  } else {
                                                    context.read<OutBoundDetailBloc>().formatError = context.read<OutBoundDetailBloc>().formatError;
                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                    context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                  }
                                                  return null;
                                                },
                                                onChanged: (value) {
                                                  if (value != "") {
                                                    checkValues[i] = ((num.parse(value) +
                                                            num.parse(selectedItem.itemBatchesList[i].batchLoadedQty == "" ||
                                                                    selectedItem.itemBatchesList[i].batchLoadedQty == "."
                                                                ? "0"
                                                                : selectedItem.itemBatchesList[i].batchLoadedQty)) ==
                                                        num.parse(selectedItem.itemBatchesList[i].quantity));
                                                    isAllSelected = checkValues.contains(false) ? false : true;
                                                    if (focusNodesList.length - 1 != i && checkValues[i]) {
                                                      FocusScope.of(context).requestFocus(focusNodesList[i + 1]);
                                                    }
                                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                  }
                                                },
                                              ),
                                            ),
                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                          ],
                                        )),
                                      ]
                                    : [
                                        DataCell(
                                          Checkbox(
                                            value: checkValues[i],
                                            onChanged: (value) {
                                              if (fromWhere != "Loaded") {
                                                checkValues[i] = !checkValues[i];
                                                isAllSelected = checkValues.contains(false) ? false : true;
                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                              }
                                            },
                                            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(5)),
                                            activeColor: const Color(0xff007838),
                                            checkColor: const Color(0xffffffff),
                                          ),
                                        ),
                                        DataCell(Text(selectedItem.itemBatchesList[i].batchNum,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(selectedItem.itemBatchesList[i].expiryDate.toString().substring(0, 10),
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(selectedItem.itemBatchesList[i].stockType,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Center(
                                            child: Text(getIt<Functions>().formatNumber(qty: selectedItem.itemBatchesList[i].quantity),
                                                style: TextStyle(
                                                    color: const Color(0xffC38C19),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                        DataCell(Column(
                                          children: [
                                            SizedBox(
                                              height: getIt<Functions>().getWidgetHeight(height: 30),
                                              child: fromWhere == "Loaded"
                                                  ? TextFormField(
                                                      initialValue: getIt<Functions>().formatNumber(qty: selectedItem.itemBatchesList[i].quantity),
                                                      readOnly: true,
                                                      cursorColor: Colors.black,
                                                      textAlign: TextAlign.center,
                                                      style: TextStyle(
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w500,
                                                          fontSize: getIt<Functions>()
                                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                                      enabled: false,
                                                      keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                      decoration: InputDecoration(
                                                        hintText: "00",
                                                        hintStyle: TextStyle(
                                                            fontWeight: FontWeight.w400,
                                                            fontSize: getIt<Functions>()
                                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                                            color: Colors.grey),
                                                        border:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                        enabledBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                        disabledBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                        errorBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                        focusedBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Colors.blue, width: 0.73)),
                                                        focusedErrorBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                        errorStyle: const TextStyle(height: 0.001),
                                                      ),
                                                    )
                                                  : TextFormField(
                                                      controller: controllersList[i],
                                                      focusNode: focusNodesList[i],
                                                      readOnly: checkValues[i],
                                                      cursorColor: Colors.black,
                                                      textAlign: TextAlign.center,
                                                      autofocus: true,
                                                      inputFormatters: [
                                                        NumberInputFormatter(onError: (value) {
                                                          context.read<OutBoundDetailBloc>().formatError = value;
                                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                        })
                                                      ],
                                                      style: TextStyle(
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w500,
                                                          fontSize: getIt<Functions>()
                                                              .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)),
                                                      keyboardType: const TextInputType.numberWithOptions(decimal: true),
                                                      decoration: InputDecoration(
                                                        hintText: "00",
                                                        hintStyle: TextStyle(
                                                            fontWeight: FontWeight.w400,
                                                            fontSize: getIt<Functions>()
                                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11),
                                                            color: Colors.grey),
                                                        border:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                        enabledBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                        disabledBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                                        errorBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                        focusedBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Colors.blue, width: 0.73)),
                                                        focusedErrorBorder:
                                                            const UnderlineInputBorder(borderSide: BorderSide(color: Colors.red, width: 0.73)),
                                                        errorStyle: const TextStyle(height: 0.001),
                                                      ),
                                                      autovalidateMode: AutovalidateMode.onUserInteraction,
                                                      validator: (String? value) {
                                                        if (value != null && value != "") {
                                                          if (value == ".") {
                                                          } else if (num.parse(value) > num.parse(selectedItem.itemBatchesList[i].quantity)) {
                                                            context.read<OutBoundDetailBloc>().formatError = false;
                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                            context.read<OutBoundDetailBloc>().moreQuantityError = true;
                                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                            return "";
                                                          } else {
                                                            context.read<OutBoundDetailBloc>().formatError =
                                                                context.read<OutBoundDetailBloc>().formatError;
                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                          }
                                                        } else {
                                                          context.read<OutBoundDetailBloc>().formatError = false;
                                                          context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                          context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                        }
                                                        return null;
                                                      },
                                                      onChanged: (value) {
                                                        if (value != "") {
                                                          checkValues[i] = (num.parse(value) == num.parse(selectedItem.itemBatchesList[i].quantity));
                                                          isAllSelected = checkValues.contains(false) ? false : true;
                                                          if (focusNodesList.length - 1 != i && checkValues[i]) {
                                                            FocusScope.of(context).requestFocus(focusNodesList[i + 1]);
                                                          }
                                                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                        }
                                                      },
                                                    ),
                                            ),
                                            SizedBox(height: getIt<Functions>().getWidgetHeight(height: 8)),
                                          ],
                                        )),
                                      ]
                                : fromWhere == "partial"
                                    ? [
                                        DataCell(Text(selectedItem.itemBatchesList[i].batchNum,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(selectedItem.itemBatchesList[i].expiryDate.toString().substring(0, 10),
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(selectedItem.itemBatchesList[i].stockType,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Center(
                                            child: Text(getIt<Functions>().formatNumber(qty: selectedItem.itemBatchesList[i].quantity),
                                                style: TextStyle(
                                                    color: const Color(0xffC38C19),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                        DataCell(Center(
                                            child: Text(getIt<Functions>().formatNumber(qty: selectedItem.itemBatchesList[i].batchLoadedQty),
                                                style: TextStyle(
                                                    color: const Color(0xffC38C19),
                                                    fontWeight: FontWeight.w500,
                                                    fontSize: getIt<Functions>()
                                                        .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11))))),
                                      ]
                                    : [
                                        DataCell(Text(selectedItem.itemBatchesList[i].batchNum,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(selectedItem.itemBatchesList[i].expiryDate.toString().substring(0, 10),
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(selectedItem.itemBatchesList[i].stockType,
                                            style: TextStyle(
                                                color: const Color(0xff282F3A),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>()
                                                    .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 11)))),
                                        DataCell(Text(getIt<Functions>().formatNumber(qty: selectedItem.itemBatchesList[i].quantity),
                                            style: TextStyle(
                                                color: const Color(0xffC38C19),
                                                fontWeight: FontWeight.w500,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 11)))),
                                      ]);
                      })),
                ),
              );
            },
          ),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
          BlocBuilder<OutBoundDetailBloc, OutBoundDetailState>(builder: (BuildContext context, OutBoundDetailState state) {
            return Column(
              children: [
                selectedItem.catchWeightStatus != "No" ? SizedBox(height: getIt<Functions>().getWidgetHeight(height: 12)) : const SizedBox(),
                selectedItem.catchWeightStatus != "No" ? const Divider(height: 0, thickness: 1, color: Color(0xffE0E7EC)) : const SizedBox(),
                selectedItem.catchWeightStatus != "No" ? SizedBox(height: getIt<Functions>().getWidgetHeight(height: 20)) : const SizedBox(),
                selectedItem.catchWeightStatus != "No"
                    ? Padding(
                        padding: EdgeInsets.symmetric(
                            horizontal: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 12)),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              getIt<Variables>().generalVariables.currentLanguage.catchWeight,
                              style: TextStyle(
                                  color: const Color(0xff282F3A),
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                            ),
                            SizedBox(
                              height: getIt<Functions>().getWidgetHeight(height: 10),
                            ),
                            Row(
                              children: [
                                Expanded(
                                  child: Wrap(
                                    alignment: WrapAlignment.start,
                                    children: List.generate(
                                        catchWeightData.length,
                                        (idx) => InkWell(
                                              onTap: context.read<OutBoundDetailBloc>().tabIndex == 2
                                                  ? getIt<Variables>().generalVariables.userData.userProfile.id == selectedItem.handledBy[0].id
                                                      ? () {
                                                          if (!(catchWeightData[idx].isSelectedAlready)) {
                                                            catchWeightData[idx].isSelected = !(catchWeightData[idx].isSelected);
                                                            if (catchWeightData[idx].isSelected) {
                                                              context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                            }
                                                            if (catchWeightData[idx].isSelected) {
                                                              selectedItem.itemBatchesList[0].batchLoadedQty =
                                                                  (num.parse(selectedItem.itemBatchesList[0].batchLoadedQty) +
                                                                          num.parse(catchWeightData[idx].data))
                                                                      .toStringAsFixed(3);
                                                            } else {
                                                              selectedItem.itemBatchesList[0].batchLoadedQty =
                                                                  (num.parse(selectedItem.itemBatchesList[0].batchLoadedQty) -
                                                                          num.parse(catchWeightData[idx].data))
                                                                      .toStringAsFixed(3);
                                                            }
                                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                          }
                                                        }
                                                      : () {}
                                                  : () {
                                                      if (!(catchWeightData[idx].isSelectedAlready)) {
                                                        catchWeightData[idx].isSelected = !(catchWeightData[idx].isSelected);
                                                        if (catchWeightData[idx].isSelected) {
                                                          context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                        }
                                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                      }
                                                    },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 25),
                                                padding: EdgeInsets.symmetric(
                                                    horizontal: getIt<Functions>().getWidgetWidth(width: 8),
                                                    vertical: getIt<Functions>().getWidgetHeight(height: 4)),
                                                margin: EdgeInsets.only(
                                                    left: getIt<Functions>().getWidgetWidth(width: idx == 0 ? 0 : 6),
                                                    top: getIt<Functions>().getWidgetHeight(height: 6)),
                                                decoration: BoxDecoration(
                                                  borderRadius: BorderRadius.circular(8),
                                                  color: catchWeightData[idx].isSelected ? const Color(0xff29B473) : const Color(0xffEEF4FF),
                                                ),
                                                child: Text(
                                                  catchWeightData[idx].data,
                                                  style: TextStyle(
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 12),
                                                      fontWeight: FontWeight.w500,
                                                      color: catchWeightData[idx].isSelected ? const Color(0xffffffff) : const Color(0xff1D2736)),
                                                ),
                                              ),
                                            )),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      )
                    : const SizedBox(),
                Padding(
                  padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12.0)),
                  child: Text(
                    context.read<OutBoundDetailBloc>().formatError
                        ? "${getIt<Variables>().generalVariables.currentLanguage.lessThan10000} ${selectedItem.uom} (ex: 9999.999)."
                        : context.read<OutBoundDetailBloc>().moreQuantityError
                            ? getIt<Variables>().generalVariables.currentLanguage.enteringMoreQty
                            : context.read<OutBoundDetailBloc>().allFieldsEmpty
                                ? getIt<Variables>().generalVariables.currentLanguage.pleaseEnterQuantity
                                : "",
                    style: TextStyle(fontSize: getIt<Functions>().getTextSize(fontSize: 10), color: Colors.red, fontWeight: FontWeight.w600),
                  ),
                ),
              ],
            );
          }),
          SizedBox(height: getIt<Functions>().getWidgetHeight(height: 15)),
          BlocConsumer<OutBoundDetailBloc, OutBoundDetailState>(
            listenWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
              return previous != current;
            },
            buildWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
              return previous != current;
            },
            listener: (BuildContext context, OutBoundDetailState state) {
              if (state is OutBoundDetailSuccess) {
                context.read<OutBoundDetailBloc>().updateLoader = false;
                Navigator.pop(context);
                ScaffoldMessenger.of(context).clearSnackBars();
                if (state.message != "") {
                  ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
                }
              }
              if (state is OutBoundDetailFailure) {
                context.read<OutBoundDetailBloc>().updateLoader = false;
                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
              }
              if (state is OutBoundDetailError) {
                ScaffoldMessenger.of(context).clearSnackBars();
                getIt<Widgets>().flushBarWidget(context: context, message: state.message);
              }
            },
            builder: (BuildContext context, OutBoundDetailState state) {
              return selectedItem.isCompleted
                  ? InkWell(
                      onTap: () {
                        FocusManager.instance.primaryFocus!.unfocus();
                        Navigator.pop(context);
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xffE0E7EC),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                              style: TextStyle(
                                  color: const Color(0xff282F3A),
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                              textAlign: TextAlign.center),
                        ),
                      ),
                    )
                  : context.read<OutBoundDetailBloc>().updateLoader
                      ? Center(
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              const CircularProgressIndicator(),
                              SizedBox(
                                height: getIt<Functions>().getWidgetHeight(height: 15),
                              ),
                            ],
                          ),
                        )
                      : context.read<OutBoundDetailBloc>().tabIndex == 0
                          ? SizedBox(
                              height: getIt<Functions>().getWidgetHeight(height: 50),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  Expanded(
                                    child: InkWell(
                                      onTap: () async {
                                        Navigator.pop(context);
                                        getIt<Variables>().generalVariables.popUpWidget = unavailableSortContent(
                                            selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isSorting: isSorting);
                                        getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                                      },
                                      child: Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                        width:
                                            getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 300 : 206),
                                        decoration: const BoxDecoration(
                                          color: Color(0xffDC474A),
                                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15)),
                                        ),
                                        child: Center(
                                          child: Text(
                                            maxLines: 2,
                                            getIt<Variables>().generalVariables.currentLanguage.markAsUnavailable.toUpperCase(),
                                            style: TextStyle(
                                                color: const Color(0xffffffff),
                                                fontWeight: FontWeight.w600,
                                                fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                            textAlign: TextAlign.center,
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  Expanded(
                                    child: InkWell(
                                      onTap: () async {
                                        if (selectedItem.catchWeightStatus != "No") {
                                          for (int i = 0; i < catchWeightData.length; i++) {
                                            if (catchWeightData[i].isSelected) {
                                              context.read<OutBoundDetailBloc>().sortedCatchWeightData.add(catchWeightData[i].data);
                                            }
                                          }
                                          if (context.read<OutBoundDetailBloc>().sortedCatchWeightData.isEmpty) {
                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                          } else {
                                            context.read<OutBoundDetailBloc>().updateLoader = true;
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                            context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                          }
                                        } else {
                                          context.read<OutBoundDetailBloc>().nonCheckError = false;
                                          for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                            if ((num.parse(controllersList[i].text) == num.parse(selectedItem.itemBatchesList[i].quantity))) {
                                              if (!checkValues[i]) {
                                                context.read<OutBoundDetailBloc>().nonCheckError = true;
                                              }
                                            }
                                          }
                                          if (!context.read<OutBoundDetailBloc>().nonCheckError) {
                                            if (!context.read<OutBoundDetailBloc>().moreQuantityError) {
                                              for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                                if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                  if (num.parse(controllersList[i].text) != 0) {
                                                    if (num.parse(controllersList[i].text) <= num.parse(selectedItem.itemBatchesList[i].quantity)) {
                                                      context.read<OutBoundDetailBloc>().sortedQuantityData[selectedItem.itemBatchesList[i].batchId] =
                                                          controllersList[i].text;
                                                    }
                                                  }
                                                }
                                              }
                                              if (context.read<OutBoundDetailBloc>().sortedQuantityData.keys.isEmpty) {
                                                context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                              } else {
                                                context.read<OutBoundDetailBloc>().updateLoader = true;
                                                FocusManager.instance.primaryFocus!.unfocus();
                                                context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                    controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                              }
                                            }
                                          }
                                        }
                                      },
                                      child: Container(
                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                        width:
                                            getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 300 : 206),
                                        decoration: const BoxDecoration(
                                          color: Color(0xff007838),
                                          borderRadius: BorderRadius.only(bottomRight: Radius.circular(15)),
                                        ),
                                        child: Center(
                                          child: Text(
                                              maxLines: 1,
                                              getIt<Variables>().generalVariables.currentLanguage.loaded.toUpperCase(),
                                              style: TextStyle(
                                                  color: const Color(0xffffffff),
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                              textAlign: TextAlign.center),
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            )
                          : context.read<OutBoundDetailBloc>().tabIndex == 3
                              ? InkWell(
                                  onTap: () async {
                                    if (selectedItem.catchWeightStatus != "No") {
                                      for (int i = 0; i < catchWeightData.length; i++) {
                                        if (catchWeightData[i].isSelected) {
                                          context.read<OutBoundDetailBloc>().sortedCatchWeightData.add(catchWeightData[i].data);
                                        }
                                      }
                                      if (context.read<OutBoundDetailBloc>().sortedCatchWeightData.isEmpty) {
                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                      } else {
                                        context.read<OutBoundDetailBloc>().updateLoader = true;
                                        FocusManager.instance.primaryFocus!.unfocus();
                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                        context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                            controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                      }
                                    } else {
                                      context.read<OutBoundDetailBloc>().nonCheckError = false;
                                      for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                        if ((num.parse(controllersList[i].text) == num.parse(selectedItem.itemBatchesList[i].quantity))) {
                                          if (!checkValues[i]) {
                                            context.read<OutBoundDetailBloc>().nonCheckError = true;
                                          }
                                        }
                                      }
                                      if (!context.read<OutBoundDetailBloc>().nonCheckError) {
                                        if (!context.read<OutBoundDetailBloc>().moreQuantityError) {
                                          for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                            if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                              if (num.parse(controllersList[i].text) != 0) {
                                                if (num.parse(controllersList[i].text) <= num.parse(selectedItem.itemBatchesList[i].quantity)) {
                                                  context.read<OutBoundDetailBloc>().sortedQuantityData[selectedItem.itemBatchesList[i].batchId] =
                                                      controllersList[i].text;
                                                }
                                              }
                                            }
                                          }
                                          if (context.read<OutBoundDetailBloc>().sortedQuantityData.keys.isEmpty) {
                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                          } else {
                                            context.read<OutBoundDetailBloc>().updateLoader = true;
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                            context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                          }
                                        }
                                      }
                                    }
                                  },
                                  child: Container(
                                    height: getIt<Functions>().getWidgetHeight(height: 50),
                                    decoration: const BoxDecoration(
                                      color: Color(0xff007838),
                                      borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                    ),
                                    child: Center(
                                      child: Text(
                                        getIt<Variables>().generalVariables.currentLanguage.loaded.toUpperCase(),
                                        style: TextStyle(
                                            color: const Color(0xffffffff),
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                      ),
                                    ),
                                  ),
                                )
                              : context.read<OutBoundDetailBloc>().tabIndex == 2
                                  ? getIt<Variables>().generalVariables.userDataEmployeeCode ==
                                          (selectedItem.handledBy.isNotEmpty ? selectedItem.handledBy[0].code : "")
                                      ? isSorting
                                          ? SizedBox(
                                              height: getIt<Functions>().getWidgetHeight(height: 50),
                                              child: Row(
                                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                                crossAxisAlignment: CrossAxisAlignment.center,
                                                children: [
                                                  Expanded(
                                                    child: InkWell(
                                                      onTap: () {
                                                        context.read<OutBoundDetailBloc>().updateLoader = true;
                                                        FocusManager.instance.primaryFocus!.unfocus();
                                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailUndoSortedEvent());
                                                      },
                                                      child: Container(
                                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                                        width: getIt<Functions>()
                                                            .getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 300 : 206),
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xffDC474A),
                                                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15)),
                                                        ),
                                                        child: Center(
                                                          child: Text(
                                                            maxLines: 2,
                                                            getIt<Variables>().generalVariables.currentLanguage.undoLoaded.toUpperCase(),
                                                            style: TextStyle(
                                                                color: const Color(0xffffffff),
                                                                fontWeight: FontWeight.w600,
                                                                fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                            textAlign: TextAlign.center,
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                  Expanded(
                                                    child: InkWell(
                                                      onTap: () async {
                                                        if (selectedItem.catchWeightStatus != "No") {
                                                          for (int i = 0; i < catchWeightData.length; i++) {
                                                            if (catchWeightData[i].isSelected) {
                                                              context.read<OutBoundDetailBloc>().sortedCatchWeightData.add(catchWeightData[i].data);
                                                            }
                                                          }
                                                          if (context.read<OutBoundDetailBloc>().sortedCatchWeightData.isEmpty) {
                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                          } else {
                                                            context.read<OutBoundDetailBloc>().updateLoader = true;
                                                            FocusManager.instance.primaryFocus!.unfocus();
                                                            context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                            context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                                controllersList:
                                                                    List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                          }
                                                        } else {
                                                          context.read<OutBoundDetailBloc>().nonCheckError = false;
                                                          for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                                            if ((num.parse(controllersList[i].text) ==
                                                                num.parse(selectedItem.itemBatchesList[i].quantity))) {
                                                              if (!checkValues[i]) {
                                                                context.read<OutBoundDetailBloc>().nonCheckError = true;
                                                              }
                                                            }
                                                          }
                                                          if (!context.read<OutBoundDetailBloc>().nonCheckError) {
                                                            if (!context.read<OutBoundDetailBloc>().moreQuantityError) {
                                                              for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                                                if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                                  if (num.parse(controllersList[i].text) != 0) {
                                                                    if (num.parse(controllersList[i].text) <=
                                                                        num.parse(selectedItem.itemBatchesList[i].quantity)) {
                                                                      context
                                                                              .read<OutBoundDetailBloc>()
                                                                              .sortedQuantityData[selectedItem.itemBatchesList[i].batchId] =
                                                                          controllersList[i].text;
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                              if (context.read<OutBoundDetailBloc>().sortedQuantityData.keys.isEmpty) {
                                                                context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                              } else {
                                                                context.read<OutBoundDetailBloc>().updateLoader = true;
                                                                FocusManager.instance.primaryFocus!.unfocus();
                                                                context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                                context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                                context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                                    controllersList:
                                                                        List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      child: Container(
                                                        height: getIt<Functions>().getWidgetHeight(height: 50),
                                                        width: getIt<Functions>()
                                                            .getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 300 : 206),
                                                        decoration: const BoxDecoration(
                                                          color: Color(0xff007838),
                                                          borderRadius: BorderRadius.only(bottomRight: Radius.circular(15)),
                                                        ),
                                                        child: Center(
                                                          child: Text(
                                                              maxLines: 1,
                                                              getIt<Variables>().generalVariables.currentLanguage.loaded.toUpperCase(),
                                                              style: TextStyle(
                                                                  color: const Color(0xffffffff),
                                                                  fontWeight: FontWeight.w600,
                                                                  fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                              textAlign: TextAlign.center),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            )
                                          : InkWell(
                                              onTap: () async {
                                                if (selectedItem.catchWeightStatus != "No") {
                                                  for (int i = 0; i < catchWeightData.length; i++) {
                                                    if (catchWeightData[i].isSelected) {
                                                      context.read<OutBoundDetailBloc>().sortedCatchWeightData.add(catchWeightData[i].data);
                                                    }
                                                  }
                                                  if (context.read<OutBoundDetailBloc>().sortedCatchWeightData.isEmpty) {
                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                  } else {
                                                    context.read<OutBoundDetailBloc>().updateLoader = true;
                                                    FocusManager.instance.primaryFocus!.unfocus();
                                                    context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                    context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                    context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                        controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                  }
                                                } else {
                                                  context.read<OutBoundDetailBloc>().nonCheckError = false;
                                                  for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                                    if ((num.parse(controllersList[i].text) == num.parse(selectedItem.itemBatchesList[i].quantity))) {
                                                      if (!checkValues[i]) {
                                                        context.read<OutBoundDetailBloc>().nonCheckError = true;
                                                      }
                                                    }
                                                  }
                                                  if (!context.read<OutBoundDetailBloc>().nonCheckError) {
                                                    if (!context.read<OutBoundDetailBloc>().moreQuantityError) {
                                                      for (int i = 0; i < selectedItem.itemBatchesList.length; i++) {
                                                        if (controllersList[i].text != "" && controllersList[i].text != ".") {
                                                          if (num.parse(controllersList[i].text) != 0) {
                                                            if (num.parse(controllersList[i].text) <=
                                                                num.parse(selectedItem.itemBatchesList[i].quantity)) {
                                                              context
                                                                      .read<OutBoundDetailBloc>()
                                                                      .sortedQuantityData[selectedItem.itemBatchesList[i].batchId] =
                                                                  controllersList[i].text;
                                                            }
                                                          }
                                                        }
                                                      }
                                                      if (context.read<OutBoundDetailBloc>().sortedQuantityData.keys.isEmpty) {
                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = true;
                                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                      } else {
                                                        context.read<OutBoundDetailBloc>().updateLoader = true;
                                                        FocusManager.instance.primaryFocus!.unfocus();
                                                        context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                                        context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                        context.read<OutBoundDetailBloc>().add(OutBoundDetailSortedEvent(
                                                            controllersList: List.generate(controllersList.length, (i) => controllersList[i].text)));
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 50),
                                                decoration: const BoxDecoration(
                                                  color: Color(0xff007838),
                                                  borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                                ),
                                                child: Center(
                                                  child: Text(getIt<Variables>().generalVariables.currentLanguage.loaded.toUpperCase(),
                                                      style: TextStyle(
                                                          color: const Color(0xffffffff),
                                                          fontWeight: FontWeight.w600,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                      textAlign: TextAlign.center),
                                                ),
                                              ),
                                            )
                                      : InkWell(
                                          onTap: () {
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            Navigator.pop(context);
                                          },
                                          child: Container(
                                            height: getIt<Functions>().getWidgetHeight(height: 50),
                                            decoration: const BoxDecoration(
                                              color: Color(0xffE0E7EC),
                                              borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                            ),
                                            child: Center(
                                              child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                                                  style: TextStyle(
                                                      color: const Color(0xff282F3A),
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                  textAlign: TextAlign.center),
                                            ),
                                          ),
                                        )
                                  : getIt<Variables>().generalVariables.userDataEmployeeCode ==
                                          (selectedItem.handledBy.isNotEmpty ? selectedItem.handledBy[0].code : "")
                                      ? isSorting
                                          ? InkWell(
                                              onTap: () async {
                                                context.read<OutBoundDetailBloc>().updateLoader = true;
                                                FocusManager.instance.primaryFocus!.unfocus();
                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailUndoSortedEvent());
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 50),
                                                decoration: const BoxDecoration(
                                                  color: Color(0xffDC474A),
                                                  borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                                ),
                                                child: Center(
                                                  child: Text(
                                                    getIt<Variables>().generalVariables.currentLanguage.undoLoaded.toUpperCase(),
                                                    style: TextStyle(
                                                        color: const Color(0xffffffff),
                                                        fontWeight: FontWeight.w600,
                                                        fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                    textAlign: TextAlign.center,
                                                  ),
                                                ),
                                              ),
                                            )
                                          : InkWell(
                                              onTap: () async {
                                                FocusManager.instance.primaryFocus!.unfocus();
                                                Navigator.pop(context);
                                              },
                                              child: Container(
                                                height: getIt<Functions>().getWidgetHeight(height: 50),
                                                decoration: const BoxDecoration(
                                                  color: Color(0xffE0E7EC),
                                                  borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                                ),
                                                child: Center(
                                                  child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                                                      style: TextStyle(
                                                          color: const Color(0xff282F3A),
                                                          fontWeight: FontWeight.w600,
                                                          fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                      textAlign: TextAlign.center),
                                                ),
                                              ),
                                            )
                                      : InkWell(
                                          onTap: () async {
                                            FocusManager.instance.primaryFocus!.unfocus();
                                            Navigator.pop(context);
                                          },
                                          child: Container(
                                            height: getIt<Functions>().getWidgetHeight(height: 50),
                                            decoration: const BoxDecoration(
                                              color: Color(0xffE0E7EC),
                                              borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                                            ),
                                            child: Center(
                                              child: Text(getIt<Variables>().generalVariables.currentLanguage.close.toUpperCase(),
                                                  style: TextStyle(
                                                      color: const Color(0xff282F3A),
                                                      fontWeight: FontWeight.w600,
                                                      fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                                                  textAlign: TextAlign.center),
                                            ),
                                          ),
                                        );
            },
          )
        ],
      ),
    );
  }

  Widget unavailableSortContent({
    required String fromWhere,
    required bool isSorting,
    required ItemsList selectedItem,
    required int index,
    required int idx,
  }) {
    context.read<OutBoundDetailBloc>().selectedTripListItemId = selectedItem.lineItemId;
    context.read<OutBoundDetailBloc>().selectedItemId = selectedItem.itemId;
    context.read<OutBoundDetailBloc>().updateLoader = false;
    context.read<OutBoundDetailBloc>().selectedReasonEmpty = false;
    context.read<OutBoundDetailBloc>().commentTextEmpty = false;
    reasonSearchFieldController.clear();
    context.read<OutBoundDetailBloc>().selectedReason = "";
    context.read<OutBoundDetailBloc>().selectedReasonName = null;
    commentsBar.clear();
    context.read<OutBoundDetailBloc>().selectedForSortedItem = selectedItem;
    return BlocConsumer<OutBoundDetailBloc, OutBoundDetailState>(
      listenWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
        return previous != current;
      },
      buildWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
        return previous != current;
      },
      listener: (BuildContext context, OutBoundDetailState state) {
        if (state is OutBoundDetailSuccess) {
          context.read<OutBoundDetailBloc>().updateLoader = false;
          Navigator.pop(context);
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
        if (state is OutBoundDetailFailure) {
          context.read<OutBoundDetailBloc>().updateLoader = false;
          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
        }
        if (state is OutBoundDetailError) {
          ScaffoldMessenger.of(context).clearSnackBars();
          getIt<Widgets>().flushBarWidget(context: context, message: state.message);
        }
      },
      builder: (BuildContext context, OutBoundDetailState state) {
        return SizedBox(
          width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 600 : 415),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.start,
            mainAxisSize: MainAxisSize.min,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 12)),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    InkWell(
                        onTap: context.read<OutBoundDetailBloc>().updateLoader
                            ? () {}
                            : () {
                                FocusManager.instance.primaryFocus!.unfocus();
                                Navigator.pop(context);
                                context.read<OutBoundDetailBloc>().moreQuantityError = false;
                                context.read<OutBoundDetailBloc>().allFieldsEmpty = false;
                                getIt<Variables>().generalVariables.popUpWidget =
                                    yetToSortContent(selectedItem: selectedItem, index: index, idx: idx, fromWhere: fromWhere, isSorting: isSorting);
                                getIt<Functions>().showAnimatedDialog(context: context, isFromTop: false, isCloseDisabled: false);
                              },
                        child: const Icon(
                          Icons.arrow_back,
                          color: Color(0xff292D32),
                        )),
                    Container(
                        height: getIt<Functions>().getWidgetHeight(height: 35),
                        width: getIt<Functions>().getWidgetWidth(width: 35),
                        decoration: BoxDecoration(
                          shape: BoxShape.circle,
                          color: Color(int.parse("0XFF${selectedItem.typeColor}")),
                        ),
                        child: Center(
                          child: Text(
                            selectedItem.itemType,
                            style: TextStyle(
                                color: const Color(0xffffffff), fontSize: getIt<Functions>().getTextSize(fontSize: 12), fontWeight: FontWeight.w700),
                          ),
                        )),
                    SizedBox(
                      width: getIt<Functions>().getWidgetWidth(width: 10),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          SingleChildScrollView(
                            scrollDirection: Axis.horizontal,
                            child: Text(
                              selectedItem.itemName,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 18 : 14),
                                  color: const Color(0xff282F3A)),
                            ),
                          ),
                          Text(
                            "${getIt<Variables>().generalVariables.currentLanguage.requiredQuantity} : ${getIt<Functions>().formatNumber(qty: selectedItem.quantity)} ${selectedItem.uom}",
                            style: TextStyle(
                                fontWeight: FontWeight.w500,
                                fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                color: const Color(0xff007AFF)),
                          ),
                        ],
                      ),
                    )
                  ],
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: 24),
              ),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              Padding(
                padding: EdgeInsets.symmetric(horizontal: getIt<Functions>().getWidgetWidth(width: 20)),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 25),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 75),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            getIt<Variables>().generalVariables.currentLanguage.reason,
                            style: TextStyle(
                                color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 45),
                            child: buildDropButton(isItem: false, isLoading: context.read<OutBoundDetailBloc>().updateLoader),
                          )
                        ],
                      ),
                    ),
                    context.read<OutBoundDetailBloc>().selectedReasonEmpty
                        ? Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseSelectReason,
                            style: TextStyle(color: Colors.red, fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 10)),
                          )
                        : const SizedBox(),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 15),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 75),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            getIt<Variables>().generalVariables.currentLanguage.comments,
                            style: TextStyle(
                                color: const Color(0xff282F3A), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 14)),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 45),
                            child: TextFormField(
                              controller: commentsBar,
                              onChanged: (value) {
                                context.read<OutBoundDetailBloc>().commentTextEmpty = value.isEmpty ? true : false;
                                context.read<OutBoundDetailBloc>().commentText = value.isEmpty ? "" : value;
                                context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                              },
                              decoration: InputDecoration(
                                fillColor: const Color(0xffffffff),
                                filled: true,
                                contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                                border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                enabledBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                disabledBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                errorBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                focusedBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                focusedErrorBorder: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                                hintText: getIt<Variables>().generalVariables.currentLanguage.enterComments,
                                hintStyle: TextStyle(
                                  color: const Color(0xff8A8D8E),
                                  fontWeight: FontWeight.w400,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: 14),
                                ),
                              ),
                              validator: (value) =>
                                  value!.isEmpty ? getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheComments : null,
                            ),
                          )
                        ],
                      ),
                    ),
                    context.read<OutBoundDetailBloc>().commentTextEmpty
                        ? Text(
                            getIt<Variables>().generalVariables.currentLanguage.pleaseEnterTheComments,
                            style: TextStyle(color: Colors.red, fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 10)),
                          )
                        : const SizedBox(),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: 15),
                    ),
                  ],
                ),
              ),
              context.read<OutBoundDetailBloc>().updateLoader
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const CircularProgressIndicator(),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 15),
                          ),
                        ],
                      ),
                    )
                  : InkWell(
                      onTap: () async {
                        if (context.read<OutBoundDetailBloc>().selectedReason == "" || commentsBar.text == "") {
                          if (context.read<OutBoundDetailBloc>().selectedReason == "") {
                            context.read<OutBoundDetailBloc>().selectedReasonEmpty = true;
                            context.read<OutBoundDetailBloc>().commentTextEmpty = false;
                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                          } else if (commentsBar.text == "") {
                            context.read<OutBoundDetailBloc>().selectedReasonEmpty = false;
                            context.read<OutBoundDetailBloc>().commentTextEmpty = true;
                            context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                          } else {}
                        } else {
                          context.read<OutBoundDetailBloc>().updateLoader = true;
                          FocusManager.instance.primaryFocus!.unfocus();
                          context.read<OutBoundDetailBloc>().selectedReasonEmpty = false;
                          context.read<OutBoundDetailBloc>().commentTextEmpty = false;
                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailUnavailableEvent());
                        }
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xffF92C38),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(
                            getIt<Variables>().generalVariables.currentLanguage.markAsUnavailable.toUpperCase(),
                            textAlign: TextAlign.center,
                            style: TextStyle(
                                color: const Color(0xffffffff), fontWeight: FontWeight.w600, fontSize: getIt<Functions>().getTextSize(fontSize: 15)),
                          ),
                        ),
                      ),
                    ),
            ],
          ),
        );
      },
    );
  }

  Widget buildDropButton({required bool isItem, required bool isLoading}) {
    return Container(
      height: getIt<Functions>().getWidgetHeight(height: 45),
      decoration: BoxDecoration(
          color: const Color(0xffffffff), borderRadius: BorderRadius.circular(4), border: Border.all(color: const Color(0xffE0E7EC), width: 0.73)),
      child: InkWell(
        borderRadius: BorderRadius.circular(15),
        onTap: isLoading == false ? changeReason : null,
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 15.0),
          child: Row(
            mainAxisSize: MainAxisSize.min,
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Expanded(
                child: Text(
                  context.read<OutBoundDetailBloc>().selectedReasonName ?? getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                  style: TextStyle(
                      fontSize: context.read<OutBoundDetailBloc>().selectedReasonName == null ? 12 : 15,
                      color: context.read<OutBoundDetailBloc>().selectedReasonName == null ? Colors.grey.shade500 : Colors.black),
                ),
              ),
              context.read<OutBoundDetailBloc>().selectedReasonName != null
                  ? InkWell(
                      onTap: () {
                        context.read<OutBoundDetailBloc>().selectedReasonName = null;
                        context.read<OutBoundDetailBloc>().selectedReasonEmpty = false;
                        context.read<OutBoundDetailBloc>().selectedReason = "";
                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent(stillLoading: false));
                      },
                      child: const Icon(
                        Icons.close,
                        size: 15,
                        color: Color(0xff8A8D8E),
                      ))
                  : const Icon(
                      Icons.keyboard_arrow_down_sharp,
                      color: Color(0xff8A8D8E),
                      size: 15,
                    ),
            ],
          ),
        ),
      ),
    );
  }

  Future<void> changeReason() async {
    await showModalBottomSheet(
        backgroundColor: Colors.white,
        isScrollControlled: true,
        context: context,
        builder: (BuildContext context) {
          return StatefulBuilder(builder: (context, modelSetState) {
            return Container(
              padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 16.0),
              child: Column(
                children: <Widget>[
                  const SizedBox(height: 20),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Text(
                        getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                        style: TextStyle(
                            fontSize: getIt<Functions>().getTextSize(fontSize: 26), fontWeight: FontWeight.w600, color: const Color(0xff282F3A)),
                      ),
                      InkWell(
                          onTap: () {
                            Navigator.pop(context);
                          },
                          child: SvgPicture.asset(
                            "assets/catch_weight/close-circle.svg",
                            height: getIt<Functions>().getWidgetHeight(height: 32),
                            width: getIt<Functions>().getWidgetWidth(width: 32),
                            fit: BoxFit.fill,
                          ))
                    ],
                  ),
                  const SizedBox(height: 20),
                  TextField(
                    cursorColor: Colors.black,
                    decoration: InputDecoration(
                        fillColor: const Color(0xffffffff),
                        filled: true,
                        contentPadding: EdgeInsets.only(left: getIt<Functions>().getWidgetWidth(width: 15)),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        disabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        errorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        focusedErrorBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(4), borderSide: const BorderSide(color: Color(0xffE0E7EC), width: 0.73)),
                        suffixIcon: reasonSearchFieldController.text.isNotEmpty
                            ? IconButton(
                                onPressed: () {
                                  reasonSearchFieldController.clear();
                                  context.read<OutBoundDetailBloc>().selectedReasonEmpty = false;
                                  context.read<OutBoundDetailBloc>().selectedReasonName = "";
                                  context.read<OutBoundDetailBloc>().selectedReason = "";
                                  context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent(stillLoading: false));
                                },
                                icon: const Icon(
                                  Icons.close,
                                  size: 15,
                                  color: Color(0xff8A8D8E),
                                ))
                            : const Icon(
                                Icons.keyboard_arrow_down_sharp,
                                color: Color(0xff8A8D8E),
                                size: 15,
                              ),
                        hintText: getIt<Variables>().generalVariables.currentLanguage.chooseReason,
                        hintStyle: TextStyle(
                            color: const Color(0xff8A8D8E), fontWeight: FontWeight.w400, fontSize: getIt<Functions>().getTextSize(fontSize: 14))),
                    onChanged: (value) {
                      context.read<OutBoundDetailBloc>().searchReasons = context
                          .read<OutBoundDetailBloc>()
                          .searchReasons
                          .where((element) => element.description.toLowerCase().contains(value.toLowerCase()))
                          .toList();
                      if (mounted) modelSetState(() {});
                    },
                  ),
                  const SizedBox(height: 20),
                  Expanded(
                    child: ListView.separated(
                      itemCount: context.read<OutBoundDetailBloc>().searchReasons.length,
                      separatorBuilder: (BuildContext context, int index) => const Divider(),
                      itemBuilder: (ctx, index) => ListTile(
                        title: Text(
                          context.read<OutBoundDetailBloc>().searchReasons[index].description,
                          style: const TextStyle(fontWeight: FontWeight.w500, fontSize: 14),
                        ),
                        onTap: () {
                          Navigator.of(context).pop();
                          context.read<OutBoundDetailBloc>().selectedReasonName = context.read<OutBoundDetailBloc>().searchReasons[index].description;
                          context.read<OutBoundDetailBloc>().selectedReasonEmpty = false;
                          context.read<OutBoundDetailBloc>().selectedReason = context.read<OutBoundDetailBloc>().searchReasons[index].id;
                          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent(stillLoading: false));
                        },
                      ),
                    ),
                  ),
                ],
              ),
            );
          });
        });
    if (mounted) setState(() {});
  }

  Widget moveToLoadingBay() {
    List<ItemsList> totalItemsList = Hive.box<ItemsList>('items_list')
        .values
        .toList()
        .where((element) => element.tripId == getIt<Variables>().generalVariables.tripListMainIdData.tripId)
        .toList();
    num totalItemQuantity = 0;
    num sortedItemQuantity = 0;
    num partialItemQuantity = 0;
    num unavailableItemQuantity = 0;
    /*for (int i = 0; i < context.read<OutBoundDetailBloc>().selectedSoList.length; i++) {
      totalItemsList.addAll(context.read<OutBoundDetailBloc>().itemsListBox.values.toList().where((element) => element.soId == context.read<OutBoundDetailBloc>().selectedSoList[i].soId).toList());
    }*/
    Map<String, List<ItemsList>> grouped = groupBy(totalItemsList, (ItemsList item) => item.itemLoadedStatus);
    List<ItemsList> sortedItemsList = (grouped["Loaded"] ?? [])
        .where((element) =>
            element.itemLoadedStatus == "Loaded" &&
            element.isProgressStatus &&
            (element.handledBy.isNotEmpty ? (element.handledBy[0].code == getIt<Variables>().generalVariables.userDataEmployeeCode) : false))
        .toList();
    List<ItemsList> partialItemsList = (grouped["Partial"] ?? [])
        .where((element) =>
            element.itemLoadedStatus == "Partial" &&
            element.isProgressStatus &&
            (element.handledBy.isNotEmpty ? (element.handledBy[0].code == getIt<Variables>().generalVariables.userDataEmployeeCode) : false))
        .toList();
    List<ItemsList> unAvailableItemsList = ((grouped["Unavailable"] ?? []).where((element) =>
            element.itemLoadedStatus == "Unavailable" &&
            element.isProgressStatus &&
            (element.handledBy.isNotEmpty ? (element.handledBy[0].code == getIt<Variables>().generalVariables.userDataEmployeeCode) : false)))
        .where((element) =>
            element.itemLoadedStatus == "Unavailable" &&
            element.isProgressStatus &&
            (element.handledBy.isNotEmpty ? (element.handledBy[0].code == getIt<Variables>().generalVariables.userDataEmployeeCode) : false))
        .toList();
    for (int i = 0; i < totalItemsList.length; i++) {
      if (totalItemsList[i].catchWeightStatus != "No") {
        totalItemQuantity = totalItemQuantity + num.parse(totalItemsList[i].quantity);
      } else {
        for (int j = 0; j < totalItemsList[i].itemBatchesList.length; j++) {
          totalItemQuantity = totalItemQuantity + num.parse(totalItemsList[i].itemBatchesList[j].quantity);
        }
      }
    }
    for (int i = 0; i < sortedItemsList.length; i++) {
      if (sortedItemsList[i].catchWeightStatus != "No") {
        sortedItemQuantity = sortedItemQuantity + num.parse(sortedItemsList[i].itemBatchesList[0].batchLoadedQty);
      } else {
        for (int j = 0; j < sortedItemsList[i].itemBatchesList.length; j++) {
          sortedItemQuantity = sortedItemQuantity + num.parse(sortedItemsList[i].itemBatchesList[j].quantity);
        }
      }
    }
    for (int i = 0; i < partialItemsList.length; i++) {
      if (partialItemsList[i].catchWeightStatus != "No") {
        partialItemQuantity = partialItemQuantity + num.parse(partialItemsList[i].itemBatchesList[0].batchLoadedQty);
      } else {
        for (int j = 0; j < partialItemsList[i].itemBatchesList.length; j++) {
          partialItemQuantity = partialItemQuantity +
              num.parse(partialItemsList[i].itemBatchesList[j].batchLoadedQty == "" ? "0" : partialItemsList[i].itemBatchesList[j].batchLoadedQty);
        }
      }
    }
    for (int i = 0; i < unAvailableItemsList.length; i++) {
      if (unAvailableItemsList[i].catchWeightStatus != "No") {
        unavailableItemQuantity = unavailableItemQuantity + num.parse(unAvailableItemsList[i].itemBatchesList[0].quantity);
      } else {
        for (int j = 0; j < unAvailableItemsList[i].itemBatchesList.length; j++) {
          unavailableItemQuantity = unavailableItemQuantity + num.parse(unAvailableItemsList[i].itemBatchesList[j].quantity);
        }
      }
    }
    return BlocConsumer<OutBoundDetailBloc, OutBoundDetailState>(
      listenWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
        return previous != current;
      },
      buildWhen: (OutBoundDetailState previous, OutBoundDetailState current) {
        return previous != current;
      },
      listener: (BuildContext context, OutBoundDetailState state) {
        if (state is OutBoundDetailSuccess) {
          context.read<OutBoundDetailBloc>().updateLoader = false;
          Navigator.pop(context);
          ScaffoldMessenger.of(context).clearSnackBars();
          if (state.message != "") {
            ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(state.message)));
          }
        }
        if (state is OutBoundDetailFailure) {
          context.read<OutBoundDetailBloc>().updateLoader = false;
          context.read<OutBoundDetailBloc>().add(const OutBoundDetailSetStateEvent());
        }
        if (state is OutBoundDetailError) {
          ScaffoldMessenger.of(context).clearSnackBars();
          getIt<Widgets>().flushBarWidget(context: context, message: state.message);
        }
      },
      builder: (BuildContext context, OutBoundDetailState state) {
        return SizedBox(
          height: getIt<Functions>().getWidgetHeight(height: 452),
          width: getIt<Functions>().getWidgetWidth(width: 700),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: EdgeInsets.symmetric(
                    horizontal: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 14.5)),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Container(
                      height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 56 : 37),
                      width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 56 : 37),
                      decoration: const BoxDecoration(
                        shape: BoxShape.circle,
                        color: Color(0xff3356FF),
                      ),
                      child: Center(
                          child: SvgPicture.asset('assets/trip_list/movingToLoadingBay.svg',
                              height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 29.6 : 20),
                              width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 29.6 : 20))),
                    ),
                    SizedBox(
                      width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 10),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Text(
                                "${getIt<Variables>().generalVariables.currentLanguage.so.toUpperCase()} # : ${context.read<OutBoundDetailBloc>().selectedSoList[0].soNum}",
                                maxLines: 1,
                                style: TextStyle(
                                    fontWeight: FontWeight.w600,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 24 : 18),
                                    color: const Color(0xff282F3A),
                                    overflow: TextOverflow.ellipsis),
                              ),
                              context.read<OutBoundDetailBloc>().selectedSoList.length > 1
                                  ? Tooltip(
                                      triggerMode: TooltipTriggerMode.tap,
                                      message: List<String>.generate(context.read<OutBoundDetailBloc>().selectedSoList.length,
                                          (i) => context.read<OutBoundDetailBloc>().selectedSoList[i].soNum).join(" , "),
                                      child: const Icon(
                                        Icons.arrow_drop_down,
                                        color: Colors.black,
                                        size: 30,
                                      ),
                                    )
                                  : const SizedBox(),
                            ],
                          ),
                          SingleChildScrollView(
                            scrollDirection: Axis.horizontal,
                            child: Text(
                              context.read<OutBoundDetailBloc>().selectedSoList[0].soCustomerName,
                              maxLines: 1,
                              style: TextStyle(
                                  fontWeight: FontWeight.w500,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 13),
                                  color: const Color(0xff282F3A),
                                  overflow: TextOverflow.ellipsis),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 19 : 24),
              ),
              const Divider(
                height: 0,
                thickness: 1,
                color: Color(0xffE0E7EC),
              ),
              Container(
                margin: EdgeInsets.only(
                    left: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 14.5),
                    right: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 14.5),
                    top: getIt<Functions>().getWidgetHeight(height: 20)),
                height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 60 : 46),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              "${getIt<Variables>().generalVariables.currentLanguage.trip.toUpperCase()} #",
                              style: TextStyle(
                                  fontWeight: FontWeight.w500,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                  color: const Color(0xff6F6F6F)),
                            ),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 11 : 7),
                          ),
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.tripListMainIdData.tripNum,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                  color: const Color(0xff282F3A)),
                            ),
                          )
                        ],
                      ),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 37 : 39),
                      width: getIt<Functions>().getWidgetWidth(width: 15),
                      child: const VerticalDivider(
                        width: 0,
                        color: Color(0xff8A8D8E),
                      ),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              "${getIt<Variables>().generalVariables.currentLanguage.vehicleNo.toUpperCase()} ",
                              style: TextStyle(
                                  fontWeight: FontWeight.w500,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                  color: const Color(0xff6F6F6F)),
                            ),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 11 : 7),
                          ),
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.tripListMainIdData.tripVehicle,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                  color: const Color(0xff282F3A)),
                            ),
                          )
                        ],
                      ),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 37 : 39),
                      width: getIt<Functions>().getWidgetWidth(width: 15),
                      child: const VerticalDivider(
                        width: 0,
                        color: Color(0xff8A8D8E),
                      ),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.currentLanguage.loadingBay.toUpperCase(),
                              style: TextStyle(
                                  fontWeight: FontWeight.w500,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                  color: const Color(0xff6F6F6F)),
                            ),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 11 : 7),
                          ),
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              "${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayDryName} / ${getIt<Variables>().generalVariables.tripListMainIdData.tripLoadingBayFrozenName}",
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                  color: const Color(0xff282F3A)),
                            ),
                          )
                        ],
                      ),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 37 : 39),
                      width: getIt<Functions>().getWidgetWidth(width: 15),
                      child: const VerticalDivider(
                        width: 0,
                        color: Color(0xff8A8D8E),
                      ),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.currentLanguage.route.toUpperCase(),
                              style: TextStyle(
                                  fontWeight: FontWeight.w500,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                  color: const Color(0xff6F6F6F)),
                            ),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 11 : 7),
                          ),
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.tripListMainIdData.tripRoute,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                  color: const Color(0xff282F3A)),
                            ),
                          )
                        ],
                      ),
                    ),
                    SizedBox(
                      height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 37 : 39),
                      width: getIt<Functions>().getWidgetWidth(width: 15),
                      child: const VerticalDivider(
                        width: 0,
                        color: Color(0xff8A8D8E),
                      ),
                    ),
                    Expanded(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.currentLanguage.loader.toUpperCase(),
                              style: TextStyle(
                                  fontWeight: FontWeight.w500,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12),
                                  color: const Color(0xff6F6F6F)),
                            ),
                          ),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 11 : 7),
                          ),
                          FittedBox(
                            fit: BoxFit.scaleDown,
                            child: Text(
                              getIt<Variables>().generalVariables.userData.userProfile.userName,
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                  color: const Color(0xff282F3A)),
                            ),
                          )
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              SizedBox(
                height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 37 : 31),
              ),
              Expanded(
                child: Padding(
                  padding: EdgeInsets.symmetric(
                      horizontal: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 14.5)),
                  child: Column(
                    children: [
                      Container(
                        padding: EdgeInsets.symmetric(
                            horizontal: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 16)),
                        height: getIt<Functions>().getWidgetHeight(height: getIt<Variables>().generalVariables.isDeviceTablet ? 49 : 36),
                        decoration: const BoxDecoration(
                            borderRadius: BorderRadius.only(topLeft: Radius.circular(12), topRight: Radius.circular(12)), color: Color(0xffE0E7EC)),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            SizedBox(
                              width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 150 : 110),
                              child: Text(
                                getIt<Variables>().generalVariables.currentLanguage.description,
                                style: TextStyle(
                                    fontWeight: FontWeight.w600,
                                    fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 12),
                                    color: const Color(0xff282F3A)),
                              ),
                            ),
                            getIt<Variables>().generalVariables.isDeviceTablet ? const Spacer() : const SizedBox(),
                            SizedBox(
                              width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                              child: Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.actual,
                                  style: TextStyle(
                                      fontWeight: FontWeight.w600,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 12),
                                      color: const Color(0xff282F3A)),
                                ),
                              ),
                            ),
                            SizedBox(
                              width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                              child: Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.sorted,
                                  style: TextStyle(
                                      fontWeight: FontWeight.w600,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 12),
                                      color: const Color(0xff282F3A)),
                                ),
                              ),
                            ),
                            SizedBox(
                              width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                              child: Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.partial,
                                  style: TextStyle(
                                      fontWeight: FontWeight.w600,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 12),
                                      color: const Color(0xff282F3A)),
                                ),
                              ),
                            ),
                            SizedBox(
                              width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 75),
                              child: Center(
                                child: Text(
                                  getIt<Variables>().generalVariables.currentLanguage.unavailable,
                                  style: TextStyle(
                                      fontWeight: FontWeight.w600,
                                      fontSize:
                                          getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 14 : 12),
                                      color: const Color(0xff282F3A)),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                      Container(
                        padding: EdgeInsets.symmetric(
                            horizontal: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 20 : 16)),
                        decoration: BoxDecoration(
                            borderRadius: const BorderRadius.only(bottomLeft: Radius.circular(12), bottomRight: Radius.circular(12)),
                            border: Border.all(color: const Color(0xffE0E7EC))),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.start,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Padding(
                              padding: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 25)),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.start,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 150 : 110),
                                    child: Text(
                                      getIt<Variables>().generalVariables.currentLanguage.numberOfItems,
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                          color: const Color(0xff282F3A)),
                                    ),
                                  ),
                                  const Spacer(),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                                    child: Center(
                                      child: Text(
                                        totalItemsList.length.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                                    child: Center(
                                      child: Text(
                                        sortedItemsList.length.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                                    child: Center(
                                      child: Text(
                                        partialItemsList.length.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 70),
                                    child: Center(
                                      child: Text(
                                        unAvailableItemsList.length.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Padding(
                              padding: EdgeInsets.only(bottom: getIt<Functions>().getWidgetHeight(height: 25)),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.start,
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: [
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 150 : 110),
                                    child: Text(
                                      getIt<Variables>().generalVariables.currentLanguage.itemQuantity,
                                      style: TextStyle(
                                          fontWeight: FontWeight.w600,
                                          fontSize:
                                              getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                          color: const Color(0xff282F3A)),
                                    ),
                                  ),
                                  const Spacer(),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                                    child: Center(
                                      child: Text(
                                        totalItemQuantity.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                                    child: Center(
                                      child: Text(
                                        sortedItemQuantity.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 55),
                                    child: Center(
                                      child: Text(
                                        partialItemQuantity.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: getIt<Functions>().getWidgetWidth(width: getIt<Variables>().generalVariables.isDeviceTablet ? 95 : 70),
                                    child: Center(
                                      child: Text(
                                        unavailableItemQuantity.toString(),
                                        style: TextStyle(
                                            fontWeight: FontWeight.w600,
                                            fontSize: getIt<Functions>()
                                                .getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 16 : 12),
                                            color: const Color(0xff282F3A)),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              context.read<OutBoundDetailBloc>().updateLoader
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          const CircularProgressIndicator(),
                          SizedBox(
                            height: getIt<Functions>().getWidgetHeight(height: 15),
                          ),
                        ],
                      ),
                    )
                  : InkWell(
                      onTap: () {
                        context.read<OutBoundDetailBloc>().add(const OutBoundDetailSessionCloseEvent());
                        FocusManager.instance.primaryFocus!.unfocus();
                      },
                      child: Container(
                        height: getIt<Functions>().getWidgetHeight(height: 50),
                        decoration: const BoxDecoration(
                          color: Color(0xff007838),
                          borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15), bottomRight: Radius.circular(15)),
                        ),
                        child: Center(
                          child: Text(
                            getIt<Variables>().generalVariables.currentLanguage.itemsLoaded.toUpperCase(),
                            style: TextStyle(
                                color: const Color(0xffFFFFFF),
                                fontWeight: FontWeight.w600,
                                fontSize: getIt<Functions>().getTextSize(fontSize: getIt<Variables>().generalVariables.isDeviceTablet ? 15 : 12)),
                          ),
                        ),
                      ),
                    ),
            ],
          ),
        );
      },
    );
  }
}
